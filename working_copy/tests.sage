from sage.modular.pollack_stevens.coeffmod_OMS_space import *
from sage.modular.pollack_stevens.coeffmod_OMS_families_space import *
from sage.modular.pollack_stevens.sigma0 import Sigma0

#test

def test_Dist_solve():
    for p in [3,5,7,13]:
        print "p =", p
        for k in range(p+1):
            print "k =", k
            D = OverconvergentDistributions(k, base=ZpCA(p, 10))
            mu = D.random_element()
            mu._moments[0] = mu.parent().base_ring()(0)
            print "mu =", mu,"\n"
            nu = mu.solve_diff_eqn()
            S0 = D.action().actor()
            Delta_mat = S0([1,1,0,1])
            nuD = nu * Delta_mat - nu
            print nuD
            print nu * Delta_mat - nu == mu
            print " "
            print "nu: %s\n"%(nu)

def test_Dist_fam_solve():
    for p in [3,5,7,13]:
        print "p =", p
        for k in range(p+1):
            print "k =", k
            DD = FamiliesOfOverconvergentDistributions(k, base_coeffs=ZpCA(p, 7), prec_cap=7)
            mus = DD.random_element()
            mus._moments[0] = mus.parent().base_ring()(0)
            #print "mus =", mus,"\n"
            nus = mus.solve_diff_eqn()
            S0 = DD.action().actor()
            Delta_mat = S0([1,1,0,1])
            print "Did it work?", nus * Delta_mat - nus == mus, (nus * Delta_mat - nus - mus) == 0
            print " "

def easy_test_Dist_fam_solve():
    for p in [3,5,7,13]:
        print "p =", p
        R = ZpCA(p, 7)
        for k in range(p+1):
            print "k =", k
            DD = FamiliesOfOverconvergentDistributions(k, base_coeffs=R, prec_cap=7)
            V = DD.approx_module()
            Elem = DD.Element
            S0 = DD.action().actor()
            Delta_mat = S0([1,1,0,1])
            for i in range(1, 7):
                v = [R(0)]*7
                v[i] = R(1)
                mus = Elem(V(v), DD, check=False)
                print "\nmus:", mus
                nus = mus.solve_diff_eqn()
                nus.normalize()
                nusD = nus*Delta_mat - nus
                print "nusD", nusD
                print nusD == mus
                print "\nnusD - mus:", nusD - mus
                print "\nMaybe you als want nus:", nus

def test_Dist_solve_vs_old_code():
    ps = [3,5,7,13]
    Ds = dict([((p, k), OverconvergentDistributions(k, base=ZpCA(p, 7))) for p in ps for k in range(p)])
    pks = Ds.keys()
    pks.sort()
    Vs = dict([(a, Ds[a].approx_module()) for a in pks])
    VQs = dict([(a, [Ds[a].approx_module(i).base_extend(Ds[a].base_ring().fraction_field()) for i in range(7+1)]) for a in pks]) 
#    random_dict = {(3, 0): (Vs[(p, k)]((0, 1 + 3^2 + 2*3^3 + 3^4 + 2*3^5 + O(3^20), 3 + 3^3 + 2*3^4 + 3^5 + O(3^21), 2 + 2*3^2 + 2*3^3 + 2*3^4 + 3^5 + 3^6 + O(3^20), 2 + 3^2 + 2*3^3 + 3^5 + 2*3^6 + O(3^20), 1 + 2*3^4 + 2*3^5 + 3^6 + O(3^20), 2 + 3 + 3^2 + 3^3 + 3^6 + O(3^20))), VQs[(p, k)][-1]((1 + 3^2 + 2*3^3 + 3^4 + 2*3^5 + O(3^20), 1 + 3^2 + 2*3^3 + 3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + O(3^20), 3^-1 + 2 + 2*3^2 + 3^3 + 3^5 + O(3^19), 1 + 2*3 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + O(3^20), 3^-1 + 1 + 2*3 + 2*3^2 + 2*3^4 + 3^5 + 2*3^8 + 2*3^9 + 2*3^12 + 2*3^13 + 2*3^16 + 2*3^17 + O(3^19), 2*3^-1 + 1 + 3^2 + 3^3 + 2*3^4 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + O(3^19), 3^-1 + 1 + 2*3^2 + 3^4 + 2*3^5 + 3^8 + 2*3^9 + 2*3^10 + 3^11 + 3^14 + 2*3^15 + 2*3^16 + 3^17 + O(3^19)))),(3, 1): (Vs[(p, k)]((0, 2*3^2 + 2*3^3 + 2*3^5 + 3^6 + O(3^22), 2 + 3 + 3^2 + 2*3^3 + 3^5 + O(3^20), 1 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + O(3^20), 2 + 2*3 + 3^2 + 3^3 + 3^4 + 2*3^6 + O(3^20), 2 + 2*3 + 3^3 + 2*3^4 + 2*3^6 + O(3^20), 1 + 2*3 + 3^2 + 3^3 + 3^4 + O(3^20))), VQs[(p, k)][-1]((2*3^2 + 2*3^3 + 2*3^5 + 3^6 + O(3^22), 1 + 2*3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + O(3^20), 3^-1 + 2 + 3 + 2*3^2 + 3^3 + 3^6 + O(3^19), 2 + 3 + 3^2 + 3^3 + 3^4 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + O(3^20), 3^-1 + 2*3 + 2*3^4 + 2*3^5 + 3^7 + 2*3^8 + 3^9 + 3^11 + 2*3^12 + 3^13 + 3^15 + 2*3^16 + 3^17 + O(3^19), 3^-1 + 2 + 3^3 + 2*3^4 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + O(3^19), 3^-1 + 3 + 2*3^2 + 3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 3^8 + 3^11 + 2*3^12 + 2*3^13 + 3^14 + 3^17 + 2*3^18 + O(3^19)))),(3, 2): (Vs[(p, k)]((0, 2 + 2*3^5 + O(3^20), 2 + 3 + 3^2 + 2*3^3 + 2*3^4 + O(3^20), 2 + 3^5 + 3^6 + O(3^20), 1 + 2*3 + 3^2 + 3^3 + 2*3^6 + O(3^20), 3 + 2*3^2 + 2*3^4 + 3^5 + 3^6 + O(3^21), 2*3 + 3^2 + 2*3^4 + 2*3^5 + O(3^21))), VQs[(p, k)][-1]((2 + 2*3^5 + O(3^20), 2*3 + 3^3 + 3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + 2*3^20 + O(3^21), 3 + 2*3^2 + 3^3 + 3^5 + O(3^21), 2 + 2*3^2 + 3^3 + 3^4 + 2*3^6 + 2*3^8 + 2*3^10 + 2*3^12 + 2*3^14 + 2*3^16 + 2*3^18 + O(3^20), 1 + 3 + 3^2 + 3^3 + 2*3^4 + 3^5 + 2*3^8 + 2*3^9 + 2*3^12 + 2*3^13 + 2*3^16 + 2*3^17 + O(3^20), 2 + 3^2 + 3^3 + 2*3^4 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + O(3^20), 1 + 3 + 2*3^2 + 3^3 + 3^4 + 2*3^5 + 3^6 + 2*3^7 + 3^9 + 2*3^11 + 3^12 + 2*3^13 + 3^15 + 2*3^17 + 3^18 + 2*3^19 + O(3^20)))),(5, 0): (Vs[(p, k)]((0, 1 + 2*5 + 3*5^3 + 4*5^4 + 5^5 + 2*5^6 + O(5^20), 3 + 2*5 + 5^2 + 2*5^3 + 4*5^4 + 3*5^5 + 2*5^6 + O(5^20), 3 + 2*5 + 5^3 + 3*5^4 + 4*5^5 + 4*5^6 + O(5^20), 1 + 2*5 + 3*5^2 + 3*5^3 + 5^5 + O(5^20), 2 + 4*5 + 4*5^2 + 3*5^4 + 4*5^5 + O(5^20), 2*5 + 3*5^2 + 2*5^5 + O(5^21))), VQs[(p, k)][-1]((1 + 2*5 + 3*5^3 + 4*5^4 + 5^5 + 2*5^6 + O(5^20), 1 + 3*5^2 + 4*5^3 + 4*5^4 + O(5^20), 3 + 5 + 3*5^3 + 4*5^4 + 4*5^5 + 3*5^6 + 5^7 + 3*5^8 + 5^9 + 3*5^10 + 5^11 + 3*5^12 + 5^13 + 3*5^14 + 5^15 + 3*5^16 + 5^17 + 3*5^18 + 5^19 + O(5^20), 2 + 2*5 + 3*5^2 + 4*5^3 + 2*5^6 + 3*5^7 + 3*5^8 + 3*5^9 + 3*5^10 + 3*5^11 + 3*5^12 + 3*5^13 + 3*5^14 + 3*5^15 + 3*5^16 + 3*5^17 + 3*5^18 + 3*5^19 + O(5^20), 5^-1 + 1 + 5 + 2*5^2 + 3*5^3 + 5^4 + 2*5^5 + 2*5^6 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + O(5^19), 3*5 + 3*5^2 + 4*5^3 + 2*5^4 + 3*5^5 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + O(5^21), 1 + 3*5 + 3*5^2 + 3*5^3 + 4*5^5 + 2*5^6 + 5^7 + 3*5^8 + 5^9 + 3*5^10 + 5^11 + 3*5^12 + 5^13 + 3*5^14 + 5^15 + 3*5^16 + 5^17 + 3*5^18 + 5^19 + O(5^20)))),(5, 1): (Vs[(p, k)]((0, 3 + 4*5 + 5^2 + 2*5^3 + 3*5^4 + 3*5^6 + O(5^20), 3 + 4*5 + 4*5^2 + 4*5^3 + 5^4 + 2*5^5 + O(5^20), 2 + 3*5 + 2*5^2 + 2*5^4 + 4*5^5 + 2*5^6 + O(5^20), 2*5 + 3*5^2 + 5^4 + 3*5^5 + 3*5^6 + O(5^21), 1 + 2*5 + 3*5^2 + 4*5^3 + 5^4 + 2*5^5 + 5^6 + O(5^20), 4 + 5 + 4*5^2 + 3*5^4 + 4*5^5 + 2*5^6 + O(5^20))), VQs[(p, k)][-1]((3 + 4*5 + 5^2 + 2*5^3 + 3*5^4 + 3*5^6 + O(5^20), 4*5^2 + 3*5^3 + 5^4 + 3*5^5 + 3*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + O(5^22), 3 + 4*5 + 2*5^2 + 5^4 + 5^5 + 5^6 + O(5^20), 1 + 5 + 3*5^2 + 3*5^3 + 4*5^4 + 2*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + O(5^20), 3*5^-1 + 4 + 4*5 + 5^3 + 3*5^4 + 5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + O(5^19), 2 + 3*5 + 5^2 + 4*5^3 + 4*5^4 + 5^5 + 5^7 + 4*5^8 + 4*5^10 + 4*5^12 + 4*5^14 + 4*5^16 + 4*5^18 + O(5^20), 3 + 2*5 + 5^2 + 3*5^3 + 5^5 + 4*5^6 + 3*5^8 + 4*5^9 + 3*5^10 + 5^11 + 5^13 + 3*5^14 + 4*5^15 + 3*5^16 + 5^17 + 5^19 + O(5^20)))),(5, 2): (Vs[(p, k)]((0, 3*5 + 2*5^2 + 2*5^3 + 3*5^5 + 2*5^6 + O(5^21), 3 + 4*5^4 + 4*5^6 + O(5^20), 4*5 + 2*5^2 + 5^3 + 3*5^4 + 5^5 + 2*5^6 + O(5^21), 2 + 2*5 + 5^2 + 4*5^3 + 5^5 + 4*5^6 + O(5^20), 4 + 5 + 4*5^3 + 5^4 + 3*5^5 + O(5^20), 4 + 5^2 + 5^3 + 2*5^4 + 2*5^5 + 4*5^6 + O(5^20))), VQs[(p, k)][-1]((3*5 + 2*5^2 + 2*5^3 + 3*5^5 + 2*5^6 + O(5^21), 4 + 3*5 + 3*5^2 + 3*5^3 + 5^4 + 5^5 + 3*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + O(5^20), 1 + 3*5 + 4*5^2 + 4*5^4 + 4*5^5 + 4*5^6 + 3*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + O(5^20), 4*5^2 + 2*5^3 + 4*5^4 + 2*5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + O(5^22), 4*5^-1 + 2 + 2*5 + 5^4 + 2*5^6 + 5^7 + 3*5^8 + 5^9 + 3*5^10 + 5^11 + 3*5^12 + 5^13 + 3*5^14 + 5^15 + 3*5^16 + 5^17 + 3*5^18 + O(5^19), 3 + 3*5^2 + 5^3 + 2*5^5 + 5^6 + 3*5^7 + 4*5^8 + 2*5^9 + 4*5^10 + 2*5^11 + 4*5^12 + 2*5^13 + 4*5^14 + 2*5^15 + 4*5^16 + 2*5^17 + 4*5^18 + 2*5^19 + O(5^20), 3*5 + 3*5^2 + 3*5^3 + 5^4 + 3*5^5 + 4*5^6 + 5^7 + 3*5^9 + 2*5^10 + 4*5^11 + 5^12 + 2*5^13 + 3*5^15 + 2*5^16 + 4*5^17 + 5^18 + 2*5^19 + O(5^21)))),(5, 3): (Vs[(p, k)]((0, 2 + 5 + 4*5^2 + 2*5^3 + 5^5 + 5^6 + O(5^20), 1 + 3*5^2 + 3*5^5 + 2*5^6 + O(5^20), 1 + 4*5 + 2*5^2 + 4*5^3 + 2*5^4 + 2*5^5 + 3*5^6 + O(5^20), 4 + 5^3 + 4*5^4 + 5^5 + 3*5^6 + O(5^20), 3 + 3*5 + 2*5^2 + 4*5^3 + 5^4 + 3*5^5 + O(5^20), 2 + 2*5 + 2*5^3 + 2*5^4 + 2*5^5 + 5^6 + O(5^20))), VQs[(p, k)][-1]((2 + 5 + 4*5^2 + 2*5^3 + 5^5 + 5^6 + O(5^20), 2 + 4*5 + 5^2 + 5^3 + 2*5^4 + 3*5^5 + O(5^20), 1 + 3*5 + 2*5^2 + 2*5^3 + 3*5^4 + 3*5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + O(5^20), 2 + 4*5 + 5^2 + 4*5^3 + 5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + O(5^20), 5^-1 + 4 + 3*5 + 5^3 + 5^4 + 5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + O(5^19), 5 + 3*5^3 + 5^4 + 5^5 + 5^7 + 4*5^8 + 4*5^10 + 4*5^12 + 4*5^14 + 4*5^16 + 4*5^18 + 4*5^20 + O(5^21), 3 + 5 + 4*5^2 + 3*5^3 + 5^4 + 5^5 + 4*5^6 + 3*5^7 + 3*5^8 + 4*5^9 + 5^11 + 4*5^13 + 3*5^14 + 4*5^15 + 5^17 + 4*5^19 + O(5^20)))),(5, 4): (Vs[(p, k)]((0, 3 + 4*5 + 4*5^2 + 4*5^4 + 3*5^5 + O(5^20), 1 + 4*5 + 2*5^2 + 3*5^4 + 4*5^5 + O(5^20), 3 + 4*5 + 2*5^2 + 5^4 + 3*5^5 + 3*5^6 + O(5^20), 4 + 4*5^2 + 4*5^4 + 3*5^5 + 4*5^6 + O(5^20), 3 + 2*5 + 3*5^2 + 2*5^3 + 2*5^4 + 5^5 + 4*5^6 + O(5^20), 1 + 2*5 + 5^2 + 2*5^3 + 5^4 + 4*5^5 + 4*5^6 + O(5^20))), VQs[(p, k)][-1]((3 + 4*5 + 4*5^2 + 4*5^4 + 3*5^5 + O(5^20), 4 + 4*5 + 3*5^2 + 4*5^3 + 5^4 + O(5^20), 1 + 2*5^2 + 3*5^3 + 3*5^4 + 2*5^5 + 2*5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + O(5^20), 1 + 4*5^2 + 3*5^3 + 3*5^4 + 5^5 + 3*5^6 + 3*5^7 + 3*5^8 + 3*5^9 + 3*5^10 + 3*5^11 + 3*5^12 + 3*5^13 + 3*5^14 + 3*5^15 + 3*5^16 + 3*5^17 + 3*5^18 + 3*5^19 + O(5^20), 3*5 + 4*5^3 + 4*5^5 + 3*5^6 + 4*5^8 + 4*5^10 + 4*5^12 + 4*5^14 + 4*5^16 + 4*5^18 + 4*5^20 + O(5^21), 4 + 2*5 + 4*5^2 + 3*5^3 + 3*5^4 + 3*5^7 + 4*5^8 + 2*5^9 + 4*5^10 + 2*5^11 + 4*5^12 + 2*5^13 + 4*5^14 + 2*5^15 + 4*5^16 + 2*5^17 + 4*5^18 + 2*5^19 + O(5^20), 2 + 2*5 + 4*5^2 + 4*5^3 + 4*5^4 + 3*5^5 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + O(5^20)))),(7, 0): (Vs[(p, k)]((0, 2*7 + 4*7^2 + 6*7^3 + 2*7^5 + 2*7^6 + O(7^21), 7 + 7^2 + 3*7^3 + 5*7^4 + 7^5 + O(7^21), 2 + 3*7 + 4*7^2 + 3*7^3 + 5*7^4 + 4*7^5 + 7^6 + O(7^20), 1 + 4*7 + 2*7^2 + 5*7^3 + 6*7^4 + 4*7^5 + 7^6 + O(7^20), 4 + 5*7 + 6*7^2 + 6*7^3 + 7^4 + 2*7^5 + 2*7^6 + O(7^20), 3 + 6*7^2 + 3*7^3 + 7^4 + 2*7^5 + 6*7^6 + O(7^20))), VQs[(p, k)][-1]((2*7 + 4*7^2 + 6*7^3 + 2*7^5 + 2*7^6 + O(7^21), 3*7 + 5*7^2 + 7^3 + 2*7^4 + 3*7^5 + 2*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + O(7^21), 3 + 4*7 + 7^2 + 4*7^3 + 7^4 + 2*7^5 + 4*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 1 + 3*7 + 2*7^3 + 7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 4 + 3*7 + 3*7^2 + 2*7^3 + 5*7^4 + 2*7^5 + 6*7^6 + 4*7^7 + 2*7^9 + 6*7^10 + 4*7^11 + 2*7^13 + 6*7^14 + 4*7^15 + 2*7^17 + 6*7^18 + 4*7^19 + O(7^20), 3 + 2*7 + 2*7^3 + 6*7^4 + 2*7^5 + 6*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20), 4 + 7 + 4*7^2 + 4*7^3 + 6*7^4 + 7^5 + 7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20)))),(7, 1): (Vs[(p, k)]((0, 5 + 7 + 4*7^2 + 2*7^3 + 7^4 + 6*7^5 + 6*7^6 + O(7^20), 5*7^2 + 2*7^3 + 7^4 + 2*7^6 + O(7^22), 1 + 5*7 + 3*7^2 + 5*7^3 + 4*7^4 + 2*7^5 + 5*7^6 + O(7^20), 5 + 7 + 6*7^2 + 3*7^3 + 2*7^5 + O(7^20), 6 + 2*7 + 4*7^2 + 6*7^5 + 2*7^6 + O(7^20), 3 + 3*7 + 3*7^3 + 7^4 + 5*7^5 + 3*7^6 + O(7^20))), VQs[(p, k)][-1]((5 + 7 + 4*7^2 + 2*7^3 + 7^4 + 6*7^5 + 6*7^6 + O(7^20), 1 + 6*7 + 3*7^2 + 3*7^3 + 3*7^4 + 7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 2*7 + 5*7^2 + 6*7^3 + 6*7^4 + 2*7^5 + 5*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + O(7^21), 6 + 4*7 + 2*7^2 + 2*7^3 + 3*7^4 + 4*7^5 + 6*7^6 + 4*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + O(7^20), 4 + 5*7 + 6*7^2 + 2*7^3 + 6*7^4 + 6*7^5 + 7^6 + O(7^20), 6 + 6*7 + 2*7^2 + 2*7^4 + 6*7^5 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + O(7^20), 2*7^-1 + 6 + 7 + 5*7^2 + 2*7^3 + 5*7^4 + 5*7^5 + 5*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + O(7^19)))),(7, 2): (Vs[(p, k)]((0, 2 + 6*7 + 5*7^2 + 2*7^3 + 4*7^4 + 7^6 + O(7^20), 2 + 4*7 + 6*7^2 + 5*7^3 + 6*7^4 + 6*7^5 + O(7^20), 4 + 2*7 + 3*7^3 + 4*7^4 + 3*7^5 + 6*7^6 + O(7^20), 6 + 5*7 + 7^2 + 2*7^3 + 2*7^4 + 4*7^5 + 2*7^6 + O(7^20), 6 + 6*7 + 3*7^3 + 3*7^4 + 3*7^5 + 4*7^6 + O(7^20), 3 + 4*7 + 2*7^2 + 6*7^4 + 7^5 + 7^6 + O(7^20))), VQs[(p, k)][-1]((2 + 6*7 + 5*7^2 + 2*7^3 + 4*7^4 + 7^6 + O(7^20), 6*7 + 3*7^2 + 7^3 + 7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + O(7^21), 3 + 4*7 + 3*7^2 + 5*7^3 + 5*7^4 + 4*7^5 + 6*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20), 3*7 + 5*7^2 + 5*7^3 + 7^4 + 6*7^5 + 2*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + 5*7^20 + O(7^21), 6 + 5*7 + 7^3 + 6*7^5 + 6*7^6 + 3*7^7 + 6*7^8 + 5*7^10 + 3*7^11 + 6*7^12 + 5*7^14 + 3*7^15 + 6*7^16 + 5*7^18 + 3*7^19 + O(7^20), 1 + 7 + 3*7^3 + 7^4 + 6*7^5 + 7^6 + 6*7^7 + 2*7^8 + 6*7^9 + 2*7^10 + 6*7^11 + 2*7^12 + 6*7^13 + 2*7^14 + 6*7^15 + 2*7^16 + 6*7^17 + 2*7^18 + 6*7^19 + O(7^20), 5*7^-1 + 4*7 + 6*7^2 + 3*7^3 + 7^4 + 6*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + O(7^19)))),(7, 3): (Vs[(p, k)]((0, 1 + 4*7^3 + 5*7^4 + 3*7^5 + 2*7^6 + O(7^20), 3 + 7^2 + 7^3 + 6*7^4 + 6*7^5 + 6*7^6 + O(7^20), 4 + 3*7 + 2*7^3 + 2*7^4 + 7^5 + 2*7^6 + O(7^20), 1 + 6*7 + 3*7^2 + 4*7^3 + 7^4 + 3*7^5 + O(7^20), 4 + 3*7^2 + 7^3 + 7^4 + 3*7^5 + 4*7^6 + O(7^20), 3 + 5*7 + 6*7^2 + 7^3 + 7^4 + 4*7^5 + 4*7^6 + O(7^20))), VQs[(p, k)][-1]((1 + 4*7^3 + 5*7^4 + 3*7^5 + 2*7^6 + O(7^20), 1 + 4*7^2 + 5*7^3 + 3*7^4 + 7^5 + 2*7^6 + O(7^20), 7 + 3*7^2 + 5*7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + O(7^21), 6 + 6*7 + 2*7^3 + 4*7^4 + 3*7^5 + 2*7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + O(7^20), 3 + 2*7 + 2*7^2 + 5*7^3 + 6*7^4 + 6*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20), 1 + 3*7 + 3*7^2 + 5*7^3 + 6*7^4 + 3*7^5 + 4*7^6 + 2*7^7 + 6*7^8 + 2*7^9 + 6*7^10 + 2*7^11 + 6*7^12 + 2*7^13 + 6*7^14 + 2*7^15 + 6*7^16 + 2*7^17 + 6*7^18 + 2*7^19 + O(7^20), 6*7^-1 + 6 + 3*7 + 4*7^2 + 2*7^3 + 7^4 + 3*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + O(7^19)))),(7, 4): (Vs[(p, k)]((0, 4 + 2*7 + 7^2 + 5*7^3 + 3*7^4 + 5*7^5 + O(7^20), 3 + 3*7 + 3*7^2 + 2*7^4 + 4*7^5 + 6*7^6 + O(7^20), 3 + 6*7 + 6*7^2 + 2*7^3 + 7^4 + 5*7^5 + O(7^20), 2 + 2*7 + 7^2 + 6*7^3 + 5*7^4 + 4*7^5 + 7^6 + O(7^20), 2 + 2*7^2 + 2*7^3 + 6*7^4 + 4*7^6 + O(7^20), 2 + 4*7 + 7^2 + 2*7^3 + 4*7^5 + 5*7^6 + O(7^20))), VQs[(p, k)][-1]((4 + 2*7 + 7^2 + 5*7^3 + 3*7^4 + 5*7^5 + O(7^20), 3 + 7^2 + 7^3 + 6*7^4 + 2*7^5 + 6*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 6 + 3*7^2 + 4*7^5 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 5 + 7 + 7^2 + 3*7^4 + 7^5 + 5*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 4 + 6*7 + 2*7^2 + 5*7^3 + 2*7^5 + 2*7^6 + 6*7^7 + 4*7^8 + 2*7^10 + 6*7^11 + 4*7^12 + 2*7^14 + 6*7^15 + 4*7^16 + 2*7^18 + 6*7^19 + O(7^20), 4 + 3*7 + 6*7^2 + 2*7^3 + 4*7^4 + 3*7^5 + 2*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 3*7^-1 + 3 + 6*7 + 6*7^2 + 5*7^3 + 4*7^4 + 4*7^5 + 2*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + O(7^19)))),(7, 5): (Vs[(p, k)]((0, 1 + 6*7 + 7^3 + 2*7^4 + 5*7^5 + 2*7^6 + O(7^20), 2 + 2*7 + 5*7^2 + 2*7^3 + 3*7^4 + 5*7^5 + 4*7^6 + O(7^20), 3 + 3*7 + 6*7^2 + 3*7^3 + 2*7^4 + 4*7^5 + 4*7^6 + O(7^20), 2 + 6*7 + 2*7^2 + 6*7^3 + 3*7^4 + 6*7^5 + 6*7^6 + O(7^20), 5*7 + 2*7^2 + 4*7^3 + 7^4 + 7^5 + O(7^21), 4 + 5*7 + 4*7^2 + 5*7^3 + 7^4 + 3*7^5 + 3*7^6 + O(7^20))), VQs[(p, k)][-1]((1 + 6*7 + 7^3 + 2*7^4 + 5*7^5 + 2*7^6 + O(7^20), 4 + 7 + 2*7^2 + 4*7^3 + 7^6 + O(7^20), 6 + 6*7 + 7^2 + 7^3 + 4*7^4 + 6*7^5 + 7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + O(7^20), 3 + 4*7^2 + 5*7^3 + 5*7^4 + 4*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 3 + 5*7^3 + 7^4 + 5*7^5 + 7^6 + 6*7^7 + 5*7^9 + 3*7^10 + 6*7^11 + 5*7^13 + 3*7^14 + 6*7^15 + 5*7^17 + 3*7^18 + 6*7^19 + O(7^20), 6 + 3*7^2 + 6*7^3 + 4*7^4 + 5*7^5 + 7^6 + 6*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20), 6*7^-1 + 5*7 + 2*7^2 + 7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + O(7^19)))),(7, 6): (Vs[(p, k)]((0, 4 + 3*7^2 + 3*7^3 + 7^4 + 5*7^5 + 5*7^6 + O(7^20), 3 + 6*7 + 5*7^2 + 2*7^3 + 5*7^4 + 4*7^5 + 6*7^6 + O(7^20), 6*7 + 4*7^2 + 3*7^3 + 6*7^4 + 7^5 + 7^6 + O(7^21), 2 + 2*7^2 + 3*7^3 + 2*7^4 + 5*7^5 + 6*7^6 + O(7^20), 5 + 4*7 + 3*7^2 + 4*7^3 + 2*7^4 + 2*7^5 + 4*7^6 + O(7^20), 3 + 2*7 + 2*7^3 + 3*7^4 + 4*7^5 + 4*7^6 + O(7^20))), VQs[(p, k)][-1]((4 + 3*7^2 + 3*7^3 + 7^4 + 5*7^5 + 5*7^6 + O(7^20), 3 + 6*7 + 4*7^2 + 6*7^3 + 7^4 + 3*7^5 + O(7^20), 5 + 4*7 + 2*7^2 + 2*7^4 + 5*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + O(7^20), 3 + 3*7^2 + 7^3 + 2*7^4 + 3*7^5 + 4*7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + O(7^20), 5 + 3*7 + 7^3 + 5*7^4 + 5*7^5 + 6*7^6 + 5*7^7 + 4*7^8 + 2*7^10 + 6*7^11 + 4*7^12 + 2*7^14 + 6*7^15 + 4*7^16 + 2*7^18 + 6*7^19 + O(7^20), 5 + 7 + 3*7^2 + 4*7^3 + 5*7^4 + 6*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + O(7^20), 3*7^-1 + 3 + 6*7 + 4*7^2 + 6*7^3 + 2*7^4 + 5*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + O(7^19)))),(13, 0): (Vs[(p, k)]((0, 2 + 12*13 + 7*13^2 + 11*13^3 + 11*13^4 + 9*13^5 + 2*13^6 + O(13^20), 1 + 7*13 + 10*13^2 + 2*13^3 + 11*13^5 + 2*13^6 + O(13^20), 3 + 9*13 + 7*13^2 + 6*13^3 + 3*13^4 + 8*13^5 + 9*13^6 + O(13^20), 12 + 11*13 + 11*13^2 + 2*13^3 + 2*13^4 + 8*13^5 + 8*13^6 + O(13^20), 11 + 9*13^2 + 7*13^3 + 8*13^4 + 2*13^5 + 9*13^6 + O(13^20), 1 + 4*13 + 2*13^2 + 4*13^3 + 4*13^4 + 6*13^5 + 3*13^6 + O(13^20))), VQs[(p, k)][-1]((2 + 12*13 + 7*13^2 + 11*13^3 + 11*13^4 + 9*13^5 + 2*13^6 + O(13^20), 6 + 10*13 + 7*13^2 + 8*13^3 + 7*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 3 + 10*13 + 7*13^3 + 9*13^4 + 9*13^5 + 8*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 5 + 3*13 + 8*13^2 + 4*13^3 + 5*13^4 + 10*13^5 + 7*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 11 + 6*13 + 5*13^2 + 11*13^3 + 7*13^4 + 11*13^6 + 7*13^7 + 2*13^8 + 5*13^9 + 10*13^10 + 7*13^11 + 2*13^12 + 5*13^13 + 10*13^14 + 7*13^15 + 2*13^16 + 5*13^17 + 10*13^18 + 7*13^19 + O(13^20), 5 + 13 + 2*13^2 + 2*13^3 + 8*13^4 + 7*13^5 + 2*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20), 3 + 10*13^2 + 11*13^3 + 5*13^5 + 13^7 + 12*13^8 + 12*13^10 + 12*13^12 + 12*13^14 + 12*13^16 + 12*13^18 + O(13^20)))),(13, 1): (Vs[(p, k)]((0, 7 + 4*13 + 5*13^2 + 5*13^3 + 10*13^4 + 10*13^6 + O(13^20), 7 + 9*13 + 4*13^2 + 10*13^3 + 9*13^4 + 7*13^5 + 9*13^6 + O(13^20), 1 + 3*13 + 13^2 + 12*13^3 + 5*13^4 + 6*13^5 + 2*13^6 + O(13^20), 11 + 5*13 + 4*13^2 + 8*13^3 + 3*13^4 + 7*13^5 + 6*13^6 + O(13^20), 1 + 12*13 + 10*13^2 + 6*13^3 + 8*13^4 + 4*13^5 + 3*13^6 + O(13^20), 10 + 6*13 + 6*13^2 + 9*13^3 + 5*13^5 + 11*13^6 + O(13^20))), VQs[(p, k)][-1]((7 + 4*13 + 5*13^2 + 5*13^3 + 10*13^4 + 10*13^6 + O(13^20), 9*13 + 12*13^2 + 8*13^3 + 12*13^4 + 9*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + O(13^21), 11 + 7*13 + 7*13^2 + 10*13^3 + 11*13^4 + 4*13^5 + 6*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20), 4 + 2*13 + 8*13^2 + 11*13^3 + 6*13^4 + 6*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20), 6*13 + 11*13^2 + 11*13^3 + 11*13^4 + 5*13^5 + 10*13^6 + 9*13^7 + 4*13^8 + 7*13^9 + 12*13^10 + 9*13^11 + 4*13^12 + 7*13^13 + 12*13^14 + 9*13^15 + 4*13^16 + 7*13^17 + 12*13^18 + 9*13^19 + 4*13^20 + O(13^21), 3 + 3*13 + 12*13^2 + 2*13^3 + 5*13^4 + 7*13^5 + 7*13^6 + 5*13^7 + 5*13^8 + 5*13^9 + 5*13^10 + 5*13^11 + 5*13^12 + 5*13^13 + 5*13^14 + 5*13^15 + 5*13^16 + 5*13^17 + 5*13^18 + 5*13^19 + O(13^20), 2 + 12*13 + 8*13^2 + 6*13^3 + 11*13^4 + 9*13^5 + 12*13^7 + 4*13^8 + 12*13^9 + 4*13^10 + 12*13^11 + 4*13^12 + 12*13^13 + 4*13^14 + 12*13^15 + 4*13^16 + 12*13^17 + 4*13^18 + 12*13^19 + O(13^20)))),(13, 2): (Vs[(p, k)]((0, 9 + 8*13 + 10*13^2 + 10*13^3 + 11*13^4 + 11*13^5 + 5*13^6 + O(13^20), 1 + 6*13 + 11*13^2 + 8*13^3 + 13^4 + 6*13^5 + 5*13^6 + O(13^20), 12 + 11*13 + 12*13^3 + 3*13^4 + 7*13^5 + 5*13^6 + O(13^20), 11 + 3*13 + 3*13^2 + 2*13^3 + 8*13^4 + 9*13^6 + O(13^20), 11 + 2*13^3 + 9*13^4 + 7*13^5 + 5*13^6 + O(13^20), 3 + 8*13 + 10*13^3 + 10*13^4 + 6*13^5 + 2*13^6 + O(13^20))), VQs[(p, k)][-1]((9 + 8*13 + 10*13^2 + 10*13^3 + 11*13^4 + 11*13^5 + 5*13^6 + O(13^20), 9 + 11*13 + 6*13^2 + 5*13^3 + 13^4 + 10*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 5 + 2*13 + 7*13^2 + 3*13^3 + 10*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20), 10 + 12*13 + 12*13^2 + 12*13^3 + 6*13^4 + 4*13^5 + 7*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 3 + 3*13 + 5*13^2 + 6*13^3 + 9*13^4 + 6*13^5 + 9*13^6 + 6*13^8 + 3*13^9 + 11*13^10 + 6*13^12 + 3*13^13 + 11*13^14 + 6*13^16 + 3*13^17 + 11*13^18 + O(13^20), 6 + 7*13 + 13^2 + 4*13^3 + 11*13^4 + 7*13^5 + 9*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20), 5 + 9*13 + 9*13^2 + 4*13^3 + 10*13^5 + 4*13^6 + 4*13^8 + 4*13^10 + 4*13^12 + 4*13^14 + 4*13^16 + 4*13^18 + O(13^20)))),(13, 3): (Vs[(p, k)]((0, 9 + 13 + 8*13^2 + 8*13^3 + 2*13^4 + 12*13^5 + 3*13^6 + O(13^20), 11 + 2*13 + 7*13^2 + 13^3 + 7*13^4 + 5*13^5 + 3*13^6 + O(13^20), 11 + 6*13 + 13^2 + 7*13^3 + 8*13^4 + 9*13^5 + 13^6 + O(13^20), 4 + 6*13 + 11*13^2 + 4*13^3 + 8*13^4 + 6*13^5 + 9*13^6 + O(13^20), 9 + 2*13 + 11*13^2 + 11*13^3 + 3*13^4 + 12*13^5 + 5*13^6 + O(13^20), 5 + 4*13 + 10*13^2 + 8*13^3 + 11*13^4 + 7*13^5 + 12*13^6 + O(13^20))), VQs[(p, k)][-1]((9 + 13 + 8*13^2 + 8*13^3 + 2*13^4 + 12*13^5 + 3*13^6 + O(13^20), 1 + 7*13 + 12*13^2 + 2*13^3 + 2*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 4 + 3*13 + 11*13^2 + 4*13^4 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 8 + 8*13 + 11*13^3 + 2*13^4 + 11*13^5 + 8*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 1 + 3*13 + 3*13^2 + 10*13^3 + 12*13^4 + 4*13^5 + 3*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 9 + 10*13^2 + 13^3 + 6*13^4 + 10*13^5 + 2*13^6 + O(13^20), 1 + 2*13 + 3*13^2 + 8*13^5 + 7*13^6 + 13^7 + 11*13^8 + 13^9 + 11*13^10 + 13^11 + 11*13^12 + 13^13 + 11*13^14 + 13^15 + 11*13^16 + 13^17 + 11*13^18 + 13^19 + O(13^20)))),(13, 4): (Vs[(p, k)]((0, 10 + 9*13 + 10*13^2 + 9*13^3 + 9*13^4 + 7*13^5 + 2*13^6 + O(13^20), 8 + 4*13 + 3*13^2 + 5*13^3 + 10*13^4 + 9*13^5 + 11*13^6 + O(13^20), 9*13 + 9*13^2 + 8*13^3 + 2*13^4 + 2*13^5 + 13^6 + O(13^21), 9 + 9*13 + 13^2 + 11*13^3 + 13^4 + 3*13^5 + 7*13^6 + O(13^20), 9 + 7*13^2 + 3*13^4 + 13^5 + O(13^20), 11 + 11*13 + 6*13^2 + 5*13^3 + 7*13^4 + 11*13^5 + O(13^20))), VQs[(p, k)][-1]((10 + 9*13 + 10*13^2 + 9*13^3 + 9*13^4 + 7*13^5 + 2*13^6 + O(13^20), 12 + 3*13 + 9*13^2 + 10*13^3 + 6*13^4 + 7*13^5 + 4*13^6 + O(13^20), 2 + 12*13^2 + 13^3 + 8*13^4 + 3*13^5 + 12*13^6 + 3*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 1 + 12*13 + 2*13^2 + 6*13^3 + 11*13^4 + 11*13^5 + 10*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 13 + 12*13^2 + 4*13^3 + 12*13^4 + 6*13^5 + 7*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + O(13^21), 8 + 9*13 + 6*13^2 + 5*13^4 + 9*13^5 + 9*13^6 + 7*13^7 + 7*13^8 + 7*13^9 + 7*13^10 + 7*13^11 + 7*13^12 + 7*13^13 + 7*13^14 + 7*13^15 + 7*13^16 + 7*13^17 + 7*13^18 + 7*13^19 + O(13^20), 11 + 5*13 + 6*13^2 + 6*13^3 + 7*13^4 + 8*13^5 + 5*13^6 + 2*13^7 + 6*13^8 + 2*13^9 + 6*13^10 + 2*13^11 + 6*13^12 + 2*13^13 + 6*13^14 + 2*13^15 + 6*13^16 + 2*13^17 + 6*13^18 + 2*13^19 + O(13^20)))),(13, 5): (Vs[(p, k)]((0, 8 + 8*13 + 11*13^2 + 8*13^3 + 4*13^4 + 13^6 + O(13^20), 7 + 4*13 + 7*13^2 + 12*13^4 + 9*13^5 + O(13^20), 1 + 12*13 + 11*13^2 + 3*13^3 + 12*13^4 + 12*13^5 + 11*13^6 + O(13^20), 10 + 13 + 2*13^2 + 3*13^3 + 11*13^5 + 3*13^6 + O(13^20), 4*13 + 5*13^2 + 8*13^3 + 11*13^4 + 13^5 + O(13^21), 12 + 13 + 7*13^2 + 7*13^3 + 9*13^4 + 11*13^5 + 11*13^6 + O(13^20))), VQs[(p, k)][-1]((8 + 8*13 + 11*13^2 + 8*13^3 + 4*13^4 + 13^6 + O(13^20), 6 + 4*13 + 4*13^2 + 2*13^3 + 10*13^4 + 4*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 9 + 9*13 + 8*13^2 + 4*13^3 + 5*13^4 + 12*13^5 + 5*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + O(13^20), 7 + 8*13 + 12*13^2 + 11*13^3 + 9*13^4 + 11*13^5 + 4*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 2 + 10*13 + 8*13^2 + 10*13^4 + 13^5 + 8*13^6 + 3*13^7 + 11*13^8 + 6*13^10 + 3*13^11 + 11*13^12 + 6*13^14 + 3*13^15 + 11*13^16 + 6*13^18 + 3*13^19 + O(13^20), 11 + 2*13^2 + 9*13^3 + 5*13^4 + 11*13^6 + 7*13^7 + 7*13^8 + 7*13^9 + 7*13^10 + 7*13^11 + 7*13^12 + 7*13^13 + 7*13^14 + 7*13^15 + 7*13^16 + 7*13^17 + 7*13^18 + 7*13^19 + O(13^20), 3 + 12*13 + 2*13^2 + 13^3 + 12*13^4 + 5*13^5 + 5*13^6 + 3*13^7 + 4*13^9 + 4*13^11 + 4*13^13 + 4*13^15 + 4*13^17 + 4*13^19 + O(13^20)))),(13, 6): (Vs[(p, k)]((0, 8 + 5*13 + 4*13^2 + 9*13^3 + 13^4 + 11*13^5 + 10*13^6 + O(13^20), 9 + 9*13^2 + 13^3 + 9*13^4 + 11*13^5 + 6*13^6 + O(13^20), 6 + 3*13 + 11*13^2 + 10*13^3 + 8*13^4 + 10*13^5 + 4*13^6 + O(13^20), 7 + 6*13 + 5*13^2 + 2*13^3 + 3*13^4 + 11*13^5 + 13^6 + O(13^20), 2 + 8*13 + 13^3 + 7*13^4 + 3*13^5 + 11*13^6 + O(13^20), 5 + 12*13 + 3*13^2 + 3*13^3 + 3*13^4 + 6*13^5 + 13^6 + O(13^20))), VQs[(p, k)][-1]((8 + 5*13 + 4*13^2 + 9*13^3 + 13^4 + 11*13^5 + 10*13^6 + O(13^20), 7 + 10*13 + 8*13^2 + 2*13^3 + 10*13^4 + 6*13^5 + 4*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 1 + 6*13 + 6*13^2 + 6*13^3 + 9*13^4 + 13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + O(13^20), 1 + 11*13^2 + 11*13^3 + 13^4 + 10*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 6 + 11*13 + 4*13^2 + 8*13^3 + 9*13^4 + 13^5 + 2*13^6 + 10*13^7 + 4*13^8 + 7*13^9 + 12*13^10 + 9*13^11 + 4*13^12 + 7*13^13 + 12*13^14 + 9*13^15 + 4*13^16 + 7*13^17 + 12*13^18 + 9*13^19 + O(13^20), 2 + 7*13 + 10*13^2 + 12*13^3 + 2*13^4 + 6*13^5 + 3*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20), 11 + 3*13^2 + 2*13^3 + 3*13^5 + 10*13^6 + 11*13^7 + 5*13^8 + 11*13^9 + 5*13^10 + 11*13^11 + 5*13^12 + 11*13^13 + 5*13^14 + 11*13^15 + 5*13^16 + 11*13^17 + 5*13^18 + 11*13^19 + O(13^20)))),(13, 7): (Vs[(p, k)]((0, 10 + 8*13 + 9*13^2 + 2*13^3 + 13^4 + 12*13^5 + 11*13^6 + O(13^20), 9 + 4*13 + 9*13^2 + 8*13^3 + 2*13^4 + 4*13^5 + 6*13^6 + O(13^20), 11 + 10*13 + 6*13^2 + 9*13^3 + 2*13^4 + 5*13^5 + 11*13^6 + O(13^20), 8 + 5*13 + 13^2 + 3*13^3 + 11*13^5 + 8*13^6 + O(13^20), 5 + 13^2 + 8*13^3 + 11*13^4 + 7*13^5 + 5*13^6 + O(13^20), 9 + 4*13 + 3*13^2 + 11*13^3 + 5*13^4 + 5*13^5 + 3*13^6 + O(13^20))), VQs[(p, k)][-1]((10 + 8*13 + 9*13^2 + 2*13^3 + 13^4 + 12*13^5 + 11*13^6 + O(13^20), 6 + 4*13 + 6*13^2 + 9*13^3 + 9*13^5 + 3*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 3 + 9*13 + 5*13^2 + 13^3 + 4*13^4 + 10*13^5 + 4*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + O(13^20), 2 + 10*13 + 5*13^2 + 13^3 + 9*13^4 + 7*13^5 + 4*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 9 + 9*13 + 2*13^2 + 9*13^3 + 8*13^4 + 8*13^5 + 12*13^6 + 9*13^7 + 4*13^8 + 7*13^9 + 12*13^10 + 9*13^11 + 4*13^12 + 7*13^13 + 12*13^14 + 9*13^15 + 4*13^16 + 7*13^17 + 12*13^18 + 9*13^19 + O(13^20), 7 + 2*13 + 4*13^2 + 10*13^3 + 4*13^4 + 3*13^5 + 5*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 6 + 6*13 + 3*13^2 + 9*13^3 + 7*13^4 + 5*13^5 + 4*13^6 + 12*13^7 + 4*13^8 + 12*13^9 + 4*13^10 + 12*13^11 + 4*13^12 + 12*13^13 + 4*13^14 + 12*13^15 + 4*13^16 + 12*13^17 + 4*13^18 + 12*13^19 + O(13^20)))),(13, 8): (Vs[(p, k)]((0, 12 + 11*13 + 7*13^2 + 9*13^3 + 13^4 + 5*13^5 + 11*13^6 + O(13^20), 3 + 9*13 + 9*13^2 + 2*13^3 + 12*13^4 + 11*13^5 + 2*13^6 + O(13^20), 2 + 12*13 + 8*13^2 + 9*13^3 + 5*13^4 + 8*13^6 + O(13^20), 10 + 9*13 + 3*13^2 + 2*13^3 + 8*13^4 + 12*13^5 + 9*13^6 + O(13^20), 2 + 6*13 + 6*13^2 + 7*13^3 + 9*13^4 + 12*13^5 + 8*13^6 + O(13^20), 10 + 11*13 + 10*13^2 + 13^3 + 2*13^4 + 7*13^5 + 8*13^6 + O(13^20))), VQs[(p, k)][-1]((12 + 11*13 + 7*13^2 + 9*13^3 + 13^4 + 5*13^5 + 11*13^6 + O(13^20), 2 + 5*13 + 7*13^2 + 9*13^3 + 11*13^4 + 9*13^5 + 8*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 12 + 7*13 + 13^2 + 12*13^3 + 6*13^4 + 13^5 + 3*13^6 + O(13^20), 12 + 13 + 2*13^2 + 6*13^3 + 5*13^4 + 12*13^5 + 8*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 3*13^2 + 4*13^4 + 5*13^5 + 9*13^7 + 11*13^8 + 3*13^9 + 13^10 + 9*13^11 + 11*13^12 + 3*13^13 + 13^14 + 9*13^15 + 11*13^16 + 3*13^17 + 13^18 + 9*13^19 + 11*13^20 + 3*13^21 + O(13^22), 10 + 9*13 + 4*13^2 + 11*13^3 + 9*13^4 + 7*13^5 + 10*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 4 + 10*13 + 9*13^2 + 13^3 + 7*13^4 + 6*13^5 + 7*13^6 + 4*13^7 + 8*13^8 + 4*13^9 + 8*13^10 + 4*13^11 + 8*13^12 + 4*13^13 + 8*13^14 + 4*13^15 + 8*13^16 + 4*13^17 + 8*13^18 + 4*13^19 + O(13^20)))),(13, 9): (Vs[(p, k)]((0, 8 + 13^2 + 2*13^3 + 7*13^4 + 2*13^6 + O(13^20), 8 + 8*13 + 10*13^2 + 10*13^3 + 5*13^5 + 9*13^6 + O(13^20), 10 + 12*13 + 6*13^2 + 12*13^3 + 6*13^4 + 8*13^5 + 8*13^6 + O(13^20), 12 + 2*13 + 2*13^2 + 9*13^3 + 8*13^4 + 8*13^5 + 10*13^6 + O(13^20), 8 + 12*13 + 6*13^2 + 11*13^3 + 4*13^4 + 13^5 + 12*13^6 + O(13^20), 7 + 7*13^2 + 9*13^3 + 8*13^4 + 9*13^5 + 8*13^6 + O(13^20))), VQs[(p, k)][-1]((8 + 13^2 + 2*13^3 + 7*13^4 + 2*13^6 + O(13^20), 4*13 + 11*13^2 + 10*13^3 + 9*13^4 + 8*13^5 + 3*13^6 + O(13^21), 5 + 4*13 + 12*13^2 + 9*13^3 + 11*13^4 + 6*13^5 + 11*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 3*13 + 6*13^2 + 8*13^3 + 8*13^4 + 5*13^5 + 10*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + O(13^21), 3 + 12*13 + 9*13^2 + 8*13^3 + 8*13^4 + 2*13^5 + 13^6 + 9*13^7 + 11*13^8 + 3*13^9 + 13^10 + 9*13^11 + 11*13^12 + 3*13^13 + 13^14 + 9*13^15 + 11*13^16 + 3*13^17 + 13^18 + 9*13^19 + O(13^20), 8 + 11*13 + 12*13^2 + 13^3 + 10*13^4 + 12*13^5 + 10*13^6 + 11*13^7 + 11*13^8 + 11*13^9 + 11*13^10 + 11*13^11 + 11*13^12 + 11*13^13 + 11*13^14 + 11*13^15 + 11*13^16 + 11*13^17 + 11*13^18 + 11*13^19 + O(13^20), 8 + 3*13 + 10*13^2 + 9*13^3 + 5*13^4 + 7*13^5 + 9*13^6 + 3*13^7 + 9*13^8 + 3*13^9 + 9*13^10 + 3*13^11 + 9*13^12 + 3*13^13 + 9*13^14 + 3*13^15 + 9*13^16 + 3*13^17 + 9*13^18 + 3*13^19 + O(13^20)))),(13, 10): (Vs[(p, k)]((0, 11*13 + 6*13^2 + 5*13^3 + 11*13^4 + 2*13^5 + 11*13^6 + O(13^21), 2 + 11*13 + 12*13^2 + 12*13^3 + 11*13^4 + 4*13^6 + O(13^20), 1 + 13 + 6*13^2 + 11*13^3 + 6*13^4 + 5*13^5 + 12*13^6 + O(13^20), 8 + 12*13 + 12*13^2 + 11*13^4 + 12*13^5 + 6*13^6 + O(13^20), 10 + 3*13 + 11*13^2 + 5*13^3 + 9*13^4 + 6*13^5 + 12*13^6 + O(13^20), 1 + 5*13 + 2*13^2 + 3*13^3 + 2*13^4 + 10*13^5 + 2*13^6 + O(13^20))), VQs[(p, k)][-1]((11*13 + 6*13^2 + 5*13^3 + 11*13^4 + 2*13^5 + 11*13^6 + O(13^21), 1 + 3*13^2 + 10*13^3 + 6*13^4 + 5*13^5 + 9*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 8 + 9*13 + 9*13^2 + 4*13^3 + 4*13^5 + 8*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 2 + 2*13 + 13^3 + 12*13^4 + 3*13^5 + 6*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 7 + 3*13 + 9*13^2 + 13^3 + 12*13^4 + 7*13^5 + 11*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + O(13^20), 7 + 6*13 + 4*13^2 + 2*13^3 + 11*13^4 + 6*13^5 + 6*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 5*13 + 6*13^2 + 3*13^4 + 4*13^5 + 8*13^6 + 3*13^7 + 5*13^8 + 3*13^9 + 5*13^10 + 3*13^11 + 5*13^12 + 3*13^13 + 5*13^14 + 3*13^15 + 5*13^16 + 3*13^17 + 5*13^18 + 3*13^19 + 5*13^20 + O(13^21)))),(13, 11): (Vs[(p, k)]((0, 8*13 + 5*13^2 + 2*13^3 + 6*13^4 + 7*13^5 + 11*13^6 + O(13^21), 3 + 12*13 + 6*13^2 + 6*13^3 + 13^4 + 6*13^5 + 7*13^6 + O(13^20), 4 + 8*13 + 11*13^2 + 7*13^3 + 8*13^4 + 4*13^5 + 11*13^6 + O(13^20), 4 + 2*13 + 6*13^2 + 3*13^3 + 13^4 + 11*13^5 + 5*13^6 + O(13^20), 3 + 10*13 + 4*13^2 + 5*13^4 + 9*13^5 + 2*13^6 + O(13^20), 9 + 8*13 + 11*13^3 + 10*13^5 + 11*13^6 + O(13^20))), VQs[(p, k)][-1]((8*13 + 5*13^2 + 2*13^3 + 6*13^4 + 7*13^5 + 11*13^6 + O(13^21), 8 + 8*13 + 2*13^3 + 4*13^4 + 12*13^5 + 10*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 2 + 10*13^2 + 12*13^3 + 4*13^5 + 6*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 3 + 9*13 + 5*13^3 + 9*13^4 + 11*13^5 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20), 6 + 9*13 + 3*13^2 + 11*13^3 + 11*13^5 + 11*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + O(13^20), 9 + 13 + 5*13^2 + 11*13^4 + 10*13^5 + 7*13^6 + 5*13^7 + 5*13^8 + 5*13^9 + 5*13^10 + 5*13^11 + 5*13^12 + 5*13^13 + 5*13^14 + 5*13^15 + 5*13^16 + 5*13^17 + 5*13^18 + 5*13^19 + O(13^20), 5 + 6*13 + 13^2 + 10*13^3 + 9*13^4 + 11*13^5 + 13^6 + 8*13^8 + 8*13^10 + 8*13^12 + 8*13^14 + 8*13^16 + 8*13^18 + O(13^20)))),(13, 12): (Vs[(p, k)]((0, 12 + 2*13 + 6*13^2 + 6*13^3 + 4*13^4 + 10*13^5 + 12*13^6 + O(13^20), 9 + 9*13 + 2*13^2 + 6*13^3 + 3*13^4 + 4*13^5 + 9*13^6 + O(13^20), 3 + 9*13 + 6*13^2 + 3*13^3 + 5*13^4 + 2*13^5 + 4*13^6 + O(13^20), 6 + 12*13 + 9*13^2 + 2*13^3 + 6*13^4 + 9*13^5 + O(13^20), 8*13 + 6*13^2 + 9*13^3 + 6*13^4 + 6*13^5 + 5*13^6 + O(13^21), 11 + 2*13 + 8*13^2 + 3*13^3 + 3*13^4 + 6*13^5 + O(13^20))), VQs[(p, k)][-1]((12 + 2*13 + 6*13^2 + 6*13^3 + 4*13^4 + 10*13^5 + 12*13^6 + O(13^20), 5 + 3*13 + 11*13^2 + 12*13^3 + 5*13^4 + 3*13^5 + 11*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 5 + 7*13 + 10*13^2 + 7*13^3 + 11*13^4 + 6*13^5 + 7*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20), 12 + 3*13^2 + 10*13^3 + 12*13^4 + 11*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 8 + 9*13 + 5*13^2 + 11*13^3 + 2*13^4 + 2*13^5 + 5*13^6 + 11*13^7 + 6*13^9 + 3*13^10 + 11*13^11 + 6*13^13 + 3*13^14 + 11*13^15 + 6*13^17 + 3*13^18 + 11*13^19 + O(13^20), 9 + 11*13 + 4*13^3 + 10*13^4 + 6*13^5 + 5*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20), 11 + 8*13 + 9*13^2 + 3*13^3 + 5*13^4 + 7*13^5 + 6*13^7 + 11*13^8 + 5*13^9 + 11*13^10 + 5*13^11 + 11*13^12 + 5*13^13 + 11*13^14 + 5*13^15 + 11*13^16 + 5*13^17 + 11*13^18 + 5*13^19 + O(13^20))))}
    random_dict = {}
    ######################
    random_dict[(3, 0)] = [Vs[(3, 0)]((0, 2 + 3 + 3^3 + 3^5 + 3^6 + O(3^20), 2*3 + 2*3^2 + 3^3 + 2*3^4 + 3^5 + 2*3^6 + O(3^21), 2*3 + 3^2 + 3^5 + 3^6 + O(3^21), 2 + 3^2 + 3^6 + O(3^20), 1 + 2*3^4 + 3^6 + O(3^20), 2 + 3 + 3^2 + 3^3 + 2*3^4 + 3^5 + 2*3^6 + O(3^20))), VQs[(3, 0)][-1]((2 + 3 + 3^3 + 3^5 + 3^6 + O(3^20), 2 + 3 + 2*3^2 + 3^3 + 2*3^4 + 3^5 + O(3^20), 3^-1 + 1 + 2*3 + 2*3^2 + 3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + O(3^19), 2 + 2*3 + 2*3^4 + O(3^20), 3^-1 + 1 + 2*3^3 + 2*3^5 + 3^7 + 2*3^8 + 3^9 + 3^11 + 2*3^12 + 3^13 + 3^15 + 2*3^16 + 3^17 + O(3^19), 2*3^-1 + 2*3 + 2*3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + O(3^19), 3^-1 + 3 + 3^3 + 3^6 + 3^9 + 2*3^10 + 2*3^11 + 3^12 + 3^15 + 2*3^16 + 2*3^17 + 3^18 + O(3^19)))]
    random_dict[(3, 1)] = [Vs[(3, 1)]((0, 3^2 + 2*3^4 + 2*3^6 + O(3^22), 2*3 + 2*3^3 + 3^4 + 2*3^5 + 3^6 + O(3^21), 2 + 2*3^4 + 2*3^6 + O(3^20), 3 + 2*3^2 + 3^3 + 3^4 + O(3^21), 1 + 3 + 2*3^2 + 2*3^4 + 3^6 + O(3^20), 1 + 3 + 2*3^2 + 3^3 + O(3^20))), VQs[(3, 1)][-1]((3^2 + 2*3^4 + 2*3^6 + O(3^22), 3 + 3^2 + 2*3^3 + 2*3^4 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21), 2*3^-1 + 3 + 3^2 + 2*3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + O(3^19), 2 + 2*3 + 2*3^2 + 3^4 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + O(3^20), 2*3^-1 + 2 + 2*3 + 2*3^2 + 3^3 + 2*3^4 + 3^5 + 2*3^6 + 3^8 + 2*3^9 + 3^10 + 3^12 + 2*3^13 + 3^14 + 3^16 + 2*3^17 + 3^18 + O(3^19), 2*3^-1 + 1 + 2*3 + 2*3^2 + 2*3^3 + 3^4 + 3^5 + 3^6 + 2*3^8 + 2*3^10 + 2*3^12 + 2*3^14 + 2*3^16 + 2*3^18 + O(3^19), 2*3^-1 + 2 + 3 + 3^3 + 3^4 + 3^5 + 3^7 + 2*3^8 + 2*3^9 + 3^10 + 3^13 + 2*3^14 + 2*3^15 + 3^16 + O(3^19)))]
    random_dict[(3, 2)] = [Vs[(3, 2)]((0, 2*3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 3^6 + O(3^21), 1 + 2*3 + 3^3 + 2*3^5 + 3^6 + O(3^20), 2 + 2*3 + 3^2 + 2*3^4 + 3^6 + O(3^20), 1 + 2*3 + 3^2 + 3^3 + 2*3^4 + 2*3^5 + O(3^20), 3^5 + O(3^25), 3 + 3^2 + 2*3^3 + 2*3^4 + 2*3^5 + O(3^21))), VQs[(3, 2)][-1]((2*3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 3^6 + O(3^21), 2 + 3 + 2*3^3 + 3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + O(3^20), 2*3^-1 + 1 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + O(3^19), 1 + 3 + 3^3 + O(3^20), 2*3^-1 + 1 + 2*3 + 3^2 + 2*3^3 + 3^4 + 3^5 + 3^7 + 2*3^8 + 3^9 + 3^11 + 2*3^12 + 3^13 + 3^15 + 2*3^16 + 3^17 + O(3^19), 3^-1 + 1 + 2*3^2 + 2*3^4 + O(3^19), 2*3^-1 + 2 + 3^3 + 3^5 + 3^7 + 2*3^9 + 3^10 + 2*3^11 + 3^13 + 2*3^15 + 3^16 + 2*3^17 + O(3^19)))]
    random_dict[(5, 0)] = [Vs[(5, 0)]((0, 4 + 4*5^2 + 4*5^4 + 3*5^5 + 2*5^6 + O(5^20), 3 + 3*5 + 3*5^2 + 5^3 + 2*5^5 + O(5^20), 4 + 5 + 3*5^2 + 3*5^3 + 3*5^5 + 4*5^6 + O(5^20), 3*5 + 2*5^2 + 4*5^3 + 3*5^4 + 4*5^5 + 2*5^6 + O(5^21), 4 + 2*5 + 3*5^2 + 4*5^4 + 3*5^5 + 3*5^6 + O(5^20), 3 + 5^2 + 4*5^3 + 2*5^4 + 3*5^6 + O(5^20))), VQs[(5, 0)][-1]((4 + 4*5^2 + 4*5^4 + 3*5^5 + 2*5^6 + O(5^20), 2 + 5 + 2*5^2 + 3*5^4 + 5^5 + 5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + O(5^20), 3 + 4*5^2 + 3*5^3 + 3*5^5 + 2*5^6 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + O(5^20), 2*5 + 2*5^2 + 3*5^3 + 5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + O(5^21), 4 + 2*5 + 4*5^2 + 4*5^3 + 3*5^4 + 2*5^5 + 5^6 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + O(5^20), 2 + 3*5 + 5^2 + 3*5^3 + 5^4 + 3*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + O(5^20), 1 + 3*5 + 3*5^3 + 4*5^6 + 4*5^7 + 2*5^8 + 2*5^11 + 4*5^12 + 4*5^13 + 2*5^14 + 2*5^17 + 4*5^18 + 4*5^19 + O(5^20)))]
    random_dict[(5, 1)] = [Vs[(5, 1)]((0, 3 + 4*5 + 5^3 + 5^4 + 3*5^5 + 3*5^6 + O(5^20), 4 + 2*5 + 4*5^2 + 2*5^3 + 3*5^4 + 2*5^5 + 5^6 + O(5^20), 3 + 5 + 5^2 + 3*5^3 + 2*5^4 + 3*5^5 + O(5^20), 3 + 2*5 + 3*5^2 + 4*5^4 + 5^5 + O(5^20), 4*5 + 5^2 + 2*5^3 + 5^4 + 2*5^6 + O(5^21), 1 + 3*5 + 4*5^2 + 3*5^3 + 3*5^4 + 2*5^6 + O(5^20))), VQs[(5, 1)][-1]((3 + 4*5 + 5^3 + 5^4 + 3*5^5 + 3*5^6 + O(5^20), 3 + 5 + 4*5^2 + 5^4 + 2*5^5 + 5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + O(5^20), 2 + 2*5 + 2*5^2 + 5^3 + 4*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + O(5^20), 4 + 5 + 5^2 + 4*5^3 + 5^4 + 4*5^5 + 3*5^6 + 3*5^7 + 3*5^8 + 3*5^9 + 3*5^10 + 3*5^11 + 3*5^12 + 3*5^13 + 3*5^14 + 3*5^15 + 3*5^16 + 3*5^17 + 3*5^18 + 3*5^19 + O(5^20), 2*5^-1 + 4 + 4*5^2 + 2*5^3 + 3*5^4 + 5^5 + O(5^19), 4 + 4*5 + 5^3 + 4*5^4 + 3*5^5 + 4*5^6 + 5^7 + 2*5^9 + 2*5^11 + 2*5^13 + 2*5^15 + 2*5^17 + 2*5^19 + O(5^20), 3 + 5^2 + 3*5^3 + 5^4 + 2*5^6 + 5^7 + 4*5^8 + 2*5^9 + 3*5^10 + 2*5^12 + 5^13 + 4*5^14 + 2*5^15 + 3*5^16 + 2*5^18 + 5^19 + O(5^20)))]
    random_dict[(5, 2)] = [Vs[(5, 2)]((0, 3 + 2*5 + 2*5^2 + 4*5^3 + 5^5 + O(5^20), 3*5 + 5^2 + 2*5^3 + 3*5^4 + 3*5^5 + 2*5^6 + O(5^21), 4 + 2*5 + 2*5^4 + 5^5 + 2*5^6 + O(5^20), 4 + 2*5 + 5^4 + 3*5^5 + 2*5^6 + O(5^20), 5 + 4*5^2 + 4*5^3 + 2*5^4 + 2*5^5 + O(5^21), 4 + 2*5 + 4*5^2 + 5^4 + 4*5^5 + 5^6 + O(5^20))), VQs[(5, 2)][-1]((3 + 2*5 + 2*5^2 + 4*5^3 + 5^5 + O(5^20), 1 + 2*5^2 + 5^3 + 5^4 + 5^5 + 5^6 + O(5^20), 1 + 3*5 + 2*5^3 + 2*5^4 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + O(5^20), 4 + 3*5 + 2*5^2 + 5^5 + O(5^20), 2*5^-1 + 2 + 2*5 + 5^2 + 5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + O(5^19), 4 + 3*5 + 3*5^2 + 5^3 + 5^4 + 5^5 + 4*5^6 + 5^7 + 3*5^8 + 5^9 + 3*5^10 + 5^11 + 3*5^12 + 5^13 + 3*5^14 + 5^15 + 3*5^16 + 5^17 + 3*5^18 + 5^19 + O(5^20), 3 + 3*5^2 + 2*5^4 + 2*5^5 + 3*5^6 + 5^7 + 2*5^8 + 3*5^10 + 2*5^11 + 4*5^12 + 5^13 + 2*5^14 + 3*5^16 + 2*5^17 + 4*5^18 + 5^19 + O(5^20)))]
    random_dict[(5, 3)] = [Vs[(5, 3)]((0, 2 + 5 + 5^2 + 2*5^3 + 4*5^4 + 3*5^5 + 4*5^6 + O(5^20), 3*5 + 4*5^2 + 3*5^4 + 4*5^5 + 5^6 + O(5^21), 2 + 5^3 + 3*5^4 + 5^5 + 2*5^6 + O(5^20), 5 + 5^2 + 4*5^3 + 4*5^4 + 3*5^5 + 5^6 + O(5^21), 1 + 4*5 + 2*5^2 + 5^3 + 4*5^4 + 4*5^6 + O(5^20), 1 + 3*5 + 4*5^2 + 4*5^4 + 2*5^5 + 2*5^6 + O(5^20))), VQs[(5, 3)][-1]((2 + 5 + 5^2 + 2*5^3 + 4*5^4 + 3*5^5 + 4*5^6 + O(5^20), 4 + 4*5^2 + 5^3 + 4*5^4 + 2*5^5 + 3*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + O(5^20), 1 + 2*5 + 5^3 + 3*5^5 + O(5^20), 4 + 2*5^3 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + O(5^20), 4*5^-1 + 3 + 4*5 + 3*5^2 + 5^3 + 5^4 + 3*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + O(5^19), 3 + 3*5 + 3*5^3 + 3*5^4 + 5^5 + 4*5^6 + 5^7 + 2*5^9 + 2*5^11 + 2*5^13 + 2*5^15 + 2*5^17 + 2*5^19 + O(5^20), 4 + 3*5 + 3*5^2 + 5^3 + 4*5^5 + 4*5^6 + 2*5^7 + 3*5^8 + 2*5^10 + 5^11 + 4*5^12 + 2*5^13 + 3*5^14 + 2*5^16 + 5^17 + 4*5^18 + 2*5^19 + O(5^20)))]
    random_dict[(5, 4)] = [Vs[(5, 4)]((0, 3 + 2*5 + 4*5^2 + 3*5^4 + 3*5^5 + 2*5^6 + O(5^20), 1 + 2*5^2 + 2*5^3 + 5^4 + 3*5^5 + O(5^20), 4 + 4*5 + 3*5^2 + 4*5^3 + 2*5^4 + 5^5 + 5^6 + O(5^20), 3 + 4*5 + 4*5^2 + 3*5^3 + 2*5^4 + 5^6 + O(5^20), 2 + 3*5 + 2*5^3 + 2*5^4 + 5^5 + O(5^20), 1 + 5 + 2*5^4 + 3*5^6 + O(5^20))), VQs[(5, 4)][-1]((3 + 2*5 + 4*5^2 + 3*5^4 + 3*5^5 + 2*5^6 + O(5^20), 4 + 3*5 + 3*5^2 + 4*5^4 + 4*5^5 + 3*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + O(5^20), 3 + 3*5 + 2*5^2 + 4*5^4 + 2*5^5 + O(5^20), 4 + 3*5 + 4*5^2 + 2*5^3 + 4*5^4 + 3*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + O(5^20), 4*5^-1 + 2 + 2*5 + 2*5^2 + 5^3 + 5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + O(5^19), 2 + 4*5^2 + 3*5^5 + 5^6 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + O(5^20), 3 + 3*5^2 + 3*5^4 + 2*5^5 + 4*5^6 + 2*5^7 + 4*5^8 + 3*5^9 + 5^10 + 5^12 + 3*5^13 + 4*5^14 + 3*5^15 + 5^16 + 5^18 + 3*5^19 + O(5^20)))]
    random_dict[(7, 0)] = [Vs[(7, 0)]((0, 4 + 6*7^3 + 2*7^4 + 6*7^5 + 5*7^6 + O(7^20), 5*7 + 3*7^2 + 4*7^4 + 6*7^5 + 6*7^6 + O(7^21), 4 + 5*7 + 3*7^3 + 5*7^4 + 7^5 + 5*7^6 + O(7^20), 3 + 7 + 7^2 + 7^4 + 6*7^6 + O(7^20), 5 + 6*7 + 3*7^2 + 5*7^3 + 4*7^4 + 6*7^5 + 4*7^6 + O(7^20), 5 + 2*7 + 3*7^2 + 4*7^3 + 2*7^4 + 6*7^5 + 4*7^6 + O(7^20))), VQs[(7, 0)][-1]((4 + 6*7^3 + 2*7^4 + 6*7^5 + 5*7^6 + O(7^20), 5 + 5*7 + 7^2 + 4*7^3 + 4*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 2 + 5*7 + 4*7^3 + 2*7^4 + 5*7^5 + 2*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 4 + 6*7^2 + 3*7^3 + 5*7^4 + 4*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 2*7 + 6*7^2 + 4*7^3 + 7^4 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + O(7^21), 6 + 4*7 + 7^2 + 3*7^3 + 3*7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + O(7^20), 3*7^-1 + 6 + 6*7 + 6*7^2 + 3*7^3 + 3*7^4 + 5*7^5 + 2*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + O(7^19)))]
    random_dict[(7, 1)] = [Vs[(7, 1)]((0, 7 + 5*7^2 + 2*7^3 + 5*7^4 + 5*7^5 + 5*7^6 + O(7^21), 6 + 4*7 + 5*7^2 + 3*7^3 + 3*7^4 + 6*7^5 + 4*7^6 + O(7^20), 4 + 2*7 + 2*7^2 + 5*7^3 + 5*7^4 + 6*7^5 + 3*7^6 + O(7^20), 2 + 3*7 + 4*7^3 + 6*7^4 + 3*7^5 + O(7^20), 3*7^2 + 7^3 + 2*7^4 + 6*7^5 + 2*7^6 + O(7^22), 6 + 6*7 + 3*7^5 + 6*7^6 + O(7^20))), VQs[(7, 1)][-1]((7 + 5*7^2 + 2*7^3 + 5*7^4 + 5*7^5 + 5*7^6 + O(7^21), 3 + 5*7 + 3*7^2 + 6*7^4 + 3*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + O(7^20), 3 + 4*7 + 4*7^2 + 2*7^3 + 3*7^4 + 3*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + O(7^20), 6*7 + 3*7^2 + 4*7^3 + 6*7^4 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + O(7^21), 5 + 5*7 + 6*7^2 + 2*7^3 + 5*7^4 + 2*7^5 + 5*7^6 + 2*7^7 + 5*7^8 + 6*7^9 + 3*7^10 + 2*7^11 + 5*7^12 + 6*7^13 + 3*7^14 + 2*7^15 + 5*7^16 + 6*7^17 + 3*7^18 + 2*7^19 + O(7^20), 6 + 3*7 + 6*7^2 + 5*7^3 + 4*7^4 + 3*7^5 + 3*7^6 + 4*7^8 + 4*7^10 + 4*7^12 + 4*7^14 + 4*7^16 + 4*7^18 + O(7^20), 4*7 + 4*7^2 + 7^4 + 6*7^5 + 5*7^6 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + O(7^21)))]
    random_dict[(7, 2)] = [Vs[(7, 2)]((0, 4 + 5*7 + 6*7^2 + 4*7^3 + 6*7^4 + 2*7^5 + O(7^20), 4 + 4*7 + 6*7^2 + 7^3 + 4*7^4 + 2*7^6 + O(7^20), 4*7^2 + 3*7^3 + 7^4 + 7^5 + 6*7^6 + O(7^22), 6 + 7^2 + 5*7^3 + 7^4 + 6*7^5 + 7^6 + O(7^20), 2*7 + 5*7^2 + 4*7^3 + 5*7^5 + O(7^21), 7^2 + 4*7^3 + 2*7^4 + 7^5 + 2*7^6 + O(7^22))), VQs[(7, 2)][-1]((4 + 5*7 + 6*7^2 + 4*7^3 + 6*7^4 + 2*7^5 + O(7^20), 3*7 + 3*7^2 + 5*7^3 + 5*7^4 + 5*7^5 + O(7^21), 1 + 2*7 + 7^3 + 4*7^4 + 7^6 + O(7^20), 6 + 4*7 + 7^2 + 5*7^3 + 7^5 + 3*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + O(7^20), 2 + 3*7 + 3*7^2 + 7^3 + 4*7^4 + 6*7^5 + 7^6 + 2*7^7 + 6*7^8 + 4*7^9 + 2*7^11 + 6*7^12 + 4*7^13 + 2*7^15 + 6*7^16 + 4*7^17 + 2*7^19 + O(7^20), 1 + 5*7^2 + 6*7^3 + 3*7^4 + 2*7^5 + 2*7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + O(7^20), 3*7^-1 + 4 + 5*7 + 5*7^2 + 5*7^4 + 7^5 + 5*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + O(7^19)))]
    random_dict[(7, 3)] = [Vs[(7, 3)]((0, 5 + 5*7 + 4*7^2 + 4*7^3 + 3*7^4 + 6*7^5 + 3*7^6 + O(7^20), 4 + 7 + 4*7^2 + 5*7^3 + 6*7^4 + 7^5 + 4*7^6 + O(7^20), 3 + 2*7 + 6*7^2 + 4*7^3 + 5*7^4 + 4*7^5 + 3*7^6 + O(7^20), 4 + 5*7 + 3*7^2 + 6*7^3 + 6*7^5 + 4*7^6 + O(7^20), 4 + 2*7 + 3*7^2 + 6*7^3 + 4*7^4 + O(7^20), 1 + 5*7 + 7^2 + 6*7^3 + 2*7^4 + 2*7^5 + 5*7^6 + O(7^20))), VQs[(7, 3)][-1]((5 + 5*7 + 4*7^2 + 4*7^3 + 3*7^4 + 6*7^5 + 3*7^6 + O(7^20), 3 + 7 + 3*7^2 + 5*7^4 + 4*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 1 + 2*7 + 4*7^2 + 6*7^3 + 4*7^4 + 7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 4 + 4*7^2 + 6*7^4 + 4*7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + O(7^20), 5 + 3*7 + 3*7^2 + 6*7^3 + 3*7^4 + 4*7^7 + 5*7^8 + 2*7^9 + 7^10 + 4*7^11 + 5*7^12 + 2*7^13 + 7^14 + 4*7^15 + 5*7^16 + 2*7^17 + 7^18 + 4*7^19 + O(7^20), 3 + 6*7 + 3*7^2 + 3*7^3 + 2*7^4 + 5*7^5 + 2*7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + O(7^20), 2*7^-1 + 4 + 2*7 + 6*7^2 + 6*7^3 + 6*7^4 + 5*7^5 + 3*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + O(7^19)))]
    random_dict[(7, 4)] = [Vs[(7, 4)]((0, 3 + 3*7 + 5*7^2 + 6*7^3 + 3*7^4 + 6*7^5 + 4*7^6 + O(7^20), 5 + 4*7 + 2*7^2 + 3*7^3 + 7^4 + 3*7^5 + 7^6 + O(7^20), 2 + 2*7 + 3*7^2 + 7^3 + 7^4 + 5*7^5 + 7^6 + O(7^20), 4*7 + 3*7^2 + 6*7^3 + 5*7^4 + 7^5 + 6*7^6 + O(7^21), 3 + 2*7^2 + 6*7^4 + 6*7^5 + O(7^20), 5 + 4*7 + 2*7^2 + 5*7^3 + 7^4 + 7^5 + 2*7^6 + O(7^20))), VQs[(7, 4)][-1]((3 + 3*7 + 5*7^2 + 6*7^3 + 3*7^4 + 6*7^5 + 4*7^6 + O(7^20), 1 + 4*7 + 5*7^2 + 7^3 + 2*7^4 + 5*7^5 + 7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 1 + 3*7^2 + 3*7^3 + 7^4 + 7^5 + 4*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 2 + 6*7 + 6*7^2 + 6*7^3 + 2*7^4 + 7^6 + O(7^20), 2*7 + 3*7^2 + 5*7^3 + 7^4 + 7^5 + 5*7^6 + 7^7 + 6*7^8 + 4*7^9 + 2*7^11 + 6*7^12 + 4*7^13 + 2*7^15 + 6*7^16 + 4*7^17 + 2*7^19 + 6*7^20 + O(7^21), 3 + 2*7 + 5*7^2 + 3*7^3 + 2*7^4 + 7^5 + 7^6 + 6*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20), 4*7^-1 + 1 + 4*7 + 2*7^2 + 7^3 + 4*7^4 + 7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + O(7^19)))]
    random_dict[(7, 5)] = [Vs[(7, 5)]((0, 2 + 7 + 7^2 + 7^3 + 3*7^5 + 4*7^6 + O(7^20), 3 + 7^2 + 4*7^3 + 7^4 + 5*7^5 + 6*7^6 + O(7^20), 5 + 4*7 + 5*7^2 + 5*7^3 + 2*7^4 + 2*7^5 + 4*7^6 + O(7^20), 5 + 2*7 + 5*7^3 + 2*7^4 + 5*7^5 + 4*7^6 + O(7^20), 4 + 2*7 + 7^2 + 5*7^3 + 3*7^4 + 3*7^5 + 4*7^6 + O(7^20), 2 + 7 + 3*7^4 + 6*7^5 + 3*7^6 + O(7^20))), VQs[(7, 5)][-1]((2 + 7 + 7^2 + 7^3 + 3*7^5 + 4*7^6 + O(7^20), 4 + 6*7 + 6*7^2 + 4*7^3 + 7^5 + 7^6 + O(7^20), 4 + 7 + 6*7^2 + 5*7^3 + 4*7^4 + 5*7^5 + 5*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + O(7^20), 3 + 5*7 + 2*7^2 + 6*7^3 + 4*7^4 + 6*7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + O(7^20), 2 + 6*7 + 5*7^2 + 4*7^3 + 5*7^4 + 6*7^6 + 4*7^7 + 2*7^9 + 6*7^10 + 4*7^11 + 2*7^13 + 6*7^14 + 4*7^15 + 2*7^17 + 6*7^18 + 4*7^19 + O(7^20), 6 + 5*7 + 5*7^2 + 3*7^3 + 2*7^4 + 6*7^5 + 3*7^6 + 4*7^8 + 4*7^10 + 4*7^12 + 4*7^14 + 4*7^16 + 4*7^18 + O(7^20), 5*7^-1 + 2 + 2*7 + 3*7^2 + 5*7^4 + 4*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + O(7^19)))]
    random_dict[(7, 6)] = [Vs[(7, 6)]((0, 5*7 + 3*7^2 + 2*7^3 + 2*7^4 + 2*7^5 + 5*7^6 + O(7^21), 2 + 5*7 + 7^2 + 5*7^4 + 5*7^5 + 3*7^6 + O(7^20), 1 + 2*7 + 6*7^2 + 5*7^3 + 4*7^4 + 4*7^5 + 3*7^6 + O(7^20), 5 + 2*7 + 3*7^2 + 4*7^3 + 7^4 + 4*7^5 + 4*7^6 + O(7^20), 3 + 4*7 + 6*7^2 + 4*7^3 + 6*7^4 + 5*7^5 + 6*7^6 + O(7^20), 3 + 3*7 + 7^2 + 4*7^3 + 2*7^4 + 7^5 + O(7^20))), VQs[(7, 6)][-1]((5*7 + 3*7^2 + 2*7^3 + 2*7^4 + 2*7^5 + 5*7^6 + O(7^21), 1 + 6*7^2 + 5*7^3 + 4*7^4 + 7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + O(7^20), 4 + 3*7 + 6*7^2 + 6*7^3 + 2*7^4 + 7^5 + O(7^20), 3 + 4*7 + 7^2 + 5*7^3 + 2*7^4 + 5*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20), 1 + 6*7 + 4*7^2 + 6*7^3 + 6*7^4 + 4*7^5 + 5*7^6 + 2*7^7 + 7^8 + 4*7^9 + 5*7^10 + 2*7^11 + 7^12 + 4*7^13 + 5*7^14 + 2*7^15 + 7^16 + 4*7^17 + 5*7^18 + 2*7^19 + O(7^20), 5 + 3*7 + 2*7^4 + 4*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20), 3 + 5*7 + 2*7^3 + 6*7^4 + 5*7^5 + 2*7^6 + O(7^20)))]
    random_dict[(13, 0)] = [Vs[(13, 0)]((0, 6 + 13 + 3*13^2 + 2*13^3 + 10*13^4 + 13^5 + O(13^20), 11 + 4*13 + 11*13^2 + 8*13^3 + 8*13^5 + 4*13^6 + O(13^20), 9 + 2*13^2 + 4*13^3 + 13^4 + 5*13^5 + 5*13^6 + O(13^20), 2 + 13 + 4*13^2 + 9*13^3 + 9*13^4 + 13^6 + O(13^20), 12 + 11*13 + 9*13^2 + 3*13^3 + 8*13^4 + 9*13^5 + 12*13^6 + O(13^20), 2 + 10*13 + 3*13^2 + 9*13^3 + 10*13^4 + 3*13^5 + 3*13^6 + O(13^20))), VQs[(13, 0)][-1]((6 + 13 + 3*13^2 + 2*13^3 + 10*13^4 + 13^5 + O(13^20), 9 + 13 + 4*13^2 + 3*13^3 + 8*13^4 + 9*13^5 + 8*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 5 + 2*13 + 4*13^2 + 10*13^3 + 13^4 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 2 + 13 + 6*13^2 + 2*13^3 + 5*13^4 + 9*13^5 + 11*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 12 + 8*13 + 2*13^2 + 5*13^3 + 3*13^4 + 9*13^5 + 7*13^6 + 13^7 + 9*13^8 + 11*13^9 + 3*13^10 + 13^11 + 9*13^12 + 11*13^13 + 3*13^14 + 13^15 + 9*13^16 + 11*13^17 + 3*13^18 + 13^19 + O(13^20), 4 + 2*13 + 6*13^2 + 11*13^3 + 4*13^4 + 7*13^5 + 11*13^6 + 3*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 12 + 7*13 + 9*13^2 + 7*13^3 + 13^4 + 6*13^5 + 8*13^6 + 8*13^7 + 4*13^8 + 8*13^9 + 4*13^10 + 8*13^11 + 4*13^12 + 8*13^13 + 4*13^14 + 8*13^15 + 4*13^16 + 8*13^17 + 4*13^18 + 8*13^19 + O(13^20)))]
    random_dict[(13, 1)] = [Vs[(13, 1)]((0, 8 + 13 + 5*13^2 + 11*13^3 + 7*13^4 + 3*13^5 + 3*13^6 + O(13^20), 12 + 8*13 + 5*13^3 + 7*13^4 + 10*13^5 + 8*13^6 + O(13^20), 2 + 6*13 + 9*13^2 + 7*13^3 + 8*13^4 + 9*13^5 + 2*13^6 + O(13^20), 3 + 8*13 + 11*13^2 + 13^3 + 2*13^5 + 12*13^6 + O(13^20), 8 + 13 + 11*13^2 + 4*13^3 + 4*13^4 + 10*13^6 + O(13^20), 11 + 6*13 + 3*13^2 + 12*13^3 + 5*13^4 + 9*13^5 + 11*13^6 + O(13^20))), VQs[(13, 1)][-1]((8 + 13 + 5*13^2 + 11*13^3 + 7*13^4 + 3*13^5 + 3*13^6 + O(13^20), 2 + 10*13 + 10*13^2 + 9*13^3 + 12*13^4 + 9*13^5 + 2*13^6 + O(13^20), 9 + 8*13 + 3*13^2 + 6*13^3 + 5*13^5 + 13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 6 + 4*13 + 11*13^2 + 10*13^3 + 8*13^5 + 10*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 7 + 2*13 + 7*13^2 + 6*13^3 + 12*13^4 + 9*13^5 + 12*13^6 + 7*13^7 + 5*13^8 + 3*13^10 + 8*13^11 + 5*13^12 + 3*13^14 + 8*13^15 + 5*13^16 + 3*13^18 + 8*13^19 + O(13^20), 10 + 12*13 + 13^2 + 2*13^3 + 10*13^4 + 6*13^5 + 4*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20), 3 + 7*13 + 12*13^2 + 7*13^3 + 2*13^4 + 3*13^5 + 13^6 + 6*13^7 + 2*13^8 + 6*13^9 + 2*13^10 + 6*13^11 + 2*13^12 + 6*13^13 + 2*13^14 + 6*13^15 + 2*13^16 + 6*13^17 + 2*13^18 + 6*13^19 + O(13^20)))]
    random_dict[(13, 2)] = [Vs[(13, 2)]((0, 7 + 2*13 + 10*13^2 + 13^3 + 4*13^4 + 2*13^5 + 5*13^6 + O(13^20), 11 + 13 + 3*13^2 + 3*13^3 + 3*13^4 + 4*13^5 + 8*13^6 + O(13^20), 6 + 11*13 + 13^2 + 10*13^3 + 7*13^4 + 4*13^5 + 2*13^6 + O(13^20), 11 + 9*13 + 6*13^2 + 5*13^3 + 7*13^4 + 2*13^5 + O(13^20), 9 + 2*13^2 + 4*13^4 + 6*13^5 + 10*13^6 + O(13^20), 10 + 4*13 + 9*13^2 + 4*13^4 + 9*13^5 + 5*13^6 + O(13^20))), VQs[(13, 2)][-1]((7 + 2*13 + 10*13^2 + 13^3 + 4*13^4 + 2*13^5 + 5*13^6 + O(13^20), 2 + 6*13 + 9*13^2 + 6*13^4 + 7*13^5 + 13^6 + O(13^20), 2 + 13 + 5*13^2 + 6*13^3 + 12*13^4 + 13^5 + 6*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20), 9 + 3*13 + 11*13^2 + 6*13^3 + 8*13^4 + 2*13^5 + 4*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20), 5 + 12*13 + 2*13^2 + 6*13^3 + 6*13^4 + 7*13^5 + 12*13^6 + 4*13^7 + 7*13^8 + 12*13^9 + 9*13^10 + 4*13^11 + 7*13^12 + 12*13^13 + 9*13^14 + 4*13^15 + 7*13^16 + 12*13^17 + 9*13^18 + 4*13^19 + O(13^20), 3 + 2*13 + 4*13^2 + 5*13^3 + 11*13^5 + 4*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 3 + 3*13 + 5*13^2 + 2*13^3 + 2*13^4 + 10*13^5 + 10*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20)))]
    random_dict[(13, 3)] = [Vs[(13, 3)]((0, 8 + 7*13 + 6*13^2 + 8*13^3 + 6*13^4 + 10*13^5 + 12*13^6 + O(13^20), 2*13 + 7*13^2 + 5*13^3 + 13^4 + 7*13^5 + 8*13^6 + O(13^21), 5 + 4*13 + 9*13^3 + 4*13^4 + 2*13^5 + 10*13^6 + O(13^20), 10*13 + 11*13^2 + 9*13^3 + 8*13^6 + O(13^21), 8 + 10*13 + 10*13^2 + 3*13^3 + 9*13^4 + 10*13^5 + 7*13^6 + O(13^20), 1 + 13 + 8*13^2 + 2*13^3 + 10*13^4 + 8*13^5 + 11*13^6 + O(13^20))), VQs[(13, 3)][-1]((8 + 7*13 + 6*13^2 + 8*13^3 + 6*13^4 + 10*13^5 + 12*13^6 + O(13^20), 9 + 3*13 + 5*13^3 + 10*13^4 + 4*13^5 + 4*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 3 + 8*13 + 10*13^2 + 3*13^3 + 6*13^4 + 5*13^5 + 3*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + O(13^20), 4 + 7*13 + 4*13^2 + 12*13^3 + 7*13^4 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 3 + 2*13 + 9*13^2 + 11*13^4 + 3*13^5 + 5*13^6 + 7*13^7 + 12*13^8 + 9*13^9 + 4*13^10 + 7*13^11 + 12*13^12 + 9*13^13 + 4*13^14 + 7*13^15 + 12*13^16 + 9*13^17 + 4*13^18 + 7*13^19 + O(13^20), 7 + 7*13 + 4*13^2 + 4*13^3 + 11*13^4 + 12*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 1 + 6*13 + 13^2 + 6*13^3 + 11*13^5 + 11*13^6 + 13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + O(13^20)))]
    random_dict[(13, 4)] = [Vs[(13, 4)]((0, 4 + 8*13 + 3*13^2 + 13^3 + 13^4 + 11*13^5 + 9*13^6 + O(13^20), 9 + 7*13 + 10*13^2 + 10*13^3 + 8*13^4 + 8*13^5 + 13^6 + O(13^20), 9 + 13 + 12*13^2 + 12*13^3 + 8*13^4 + 12*13^5 + 3*13^6 + O(13^20), 9 + 3*13 + 6*13^2 + 13^3 + 8*13^4 + 11*13^5 + 9*13^6 + O(13^20), 5 + 10*13 + 7*13^3 + 4*13^4 + 7*13^5 + 5*13^6 + O(13^20), 9 + 10*13 + 11*13^2 + 10*13^3 + 5*13^4 + 5*13^5 + 13^6 + O(13^20))), VQs[(13, 4)][-1]((4 + 8*13 + 3*13^2 + 13^3 + 13^4 + 11*13^5 + 9*13^6 + O(13^20), 9 + 12*13 + 9*13^2 + 4*13^3 + 10*13^4 + 11*13^5 + 8*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 10 + 6*13 + 13^2 + 12*13^3 + 6*13^5 + 6*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 2*13 + 11*13^2 + 12*13^3 + 2*13^4 + 5*13^5 + 7*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21), 5 + 13 + 3*13^2 + 6*13^3 + 8*13^4 + 11*13^5 + 11*13^6 + 11*13^7 + 6*13^8 + 9*13^9 + 13^10 + 12*13^11 + 6*13^12 + 9*13^13 + 13^14 + 12*13^15 + 6*13^16 + 9*13^17 + 13^18 + 12*13^19 + O(13^20), 2 + 6*13 + 5*13^2 + 3*13^3 + 10*13^5 + 5*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 13 + 3*13^2 + 5*13^3 + 8*13^4 + 5*13^6 + 5*13^7 + 3*13^8 + 5*13^9 + 3*13^10 + 5*13^11 + 3*13^12 + 5*13^13 + 3*13^14 + 5*13^15 + 3*13^16 + 5*13^17 + 3*13^18 + 5*13^19 + 3*13^20 + O(13^21)))]
    random_dict[(13, 5)] = [Vs[(13, 5)]((0, 2 + 11*13 + 3*13^2 + 8*13^3 + 9*13^5 + 8*13^6 + O(13^20), 2 + 12*13^2 + 6*13^3 + 4*13^4 + 4*13^5 + 13^6 + O(13^20), 6 + 12*13 + 10*13^2 + 6*13^3 + 4*13^4 + 4*13^5 + 6*13^6 + O(13^20), 11 + 11*13 + 9*13^2 + 8*13^3 + 8*13^4 + 2*13^5 + 6*13^6 + O(13^20), 9 + 13 + 11*13^2 + 3*13^3 + 6*13^4 + 12*13^5 + 8*13^6 + O(13^20), 9 + 12*13 + 2*13^2 + 11*13^3 + 3*13^4 + 13^5 + 13^6 + O(13^20))), VQs[(13, 5)][-1]((2 + 11*13 + 3*13^2 + 8*13^3 + 9*13^5 + 8*13^6 + O(13^20), 13 + 4*13^2 + 12*13^3 + 13^4 + 4*13^5 + 9*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + O(13^21), 10 + 3*13 + 11*13^2 + 8*13^3 + 3*13^4 + 7*13^5 + 11*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20), 10 + 9*13 + 9*13^2 + 3*13^3 + 4*13^4 + 9*13^5 + 11*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 3 + 13 + 2*13^2 + 3*13^3 + 9*13^4 + 12*13^5 + 3*13^6 + 11*13^7 + 6*13^9 + 3*13^10 + 11*13^11 + 6*13^13 + 3*13^14 + 11*13^15 + 6*13^17 + 3*13^18 + 11*13^19 + O(13^20), 9 + 12*13 + 9*13^2 + 12*13^3 + 3*13^4 + 2*13^5 + 11*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 4 + 6*13 + 4*13^3 + 11*13^4 + 7*13^5 + 7*13^7 + 10*13^8 + 6*13^9 + 10*13^10 + 6*13^11 + 10*13^12 + 6*13^13 + 10*13^14 + 6*13^15 + 10*13^16 + 6*13^17 + 10*13^18 + 6*13^19 + O(13^20)))]
    random_dict[(13, 6)] = [Vs[(13, 6)]((0, 10 + 10*13 + 12*13^2 + 5*13^3 + 6*13^4 + 4*13^5 + 8*13^6 + O(13^20), 7 + 10*13 + 8*13^2 + 7*13^3 + 10*13^4 + 10*13^5 + 8*13^6 + O(13^20), 7 + 2*13 + 12*13^2 + 2*13^3 + 2*13^4 + 9*13^5 + 9*13^6 + O(13^20), 3 + 4*13 + 4*13^2 + 3*13^3 + 11*13^4 + 7*13^5 + 13^6 + O(13^20), 5 + 2*13 + 4*13^2 + 9*13^3 + 3*13^4 + 4*13^5 + 8*13^6 + O(13^20), 9 + 11*13 + 12*13^2 + 11*13^3 + 2*13^4 + 7*13^5 + 10*13^6 + O(13^20))), VQs[(13, 6)][-1]((10 + 10*13 + 12*13^2 + 5*13^3 + 6*13^4 + 4*13^5 + 8*13^6 + O(13^20), 5 + 6*13 + 4*13^2 + 7*13^3 + 8*13^4 + 9*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 7 + 12*13 + 3*13^2 + 3*13^4 + 9*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 12 + 8*13 + 3*13^2 + 13^3 + 13^4 + 13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20), 8 + 3*13 + 12*13^2 + 10*13^3 + 8*13^5 + 11*13^6 + 2*13^7 + 5*13^8 + 10*13^9 + 7*13^10 + 2*13^11 + 5*13^12 + 10*13^13 + 7*13^14 + 2*13^15 + 5*13^16 + 10*13^17 + 7*13^18 + 2*13^19 + O(13^20), 4 + 10*13 + 9*13^2 + 6*13^3 + 3*13^4 + 12*13^5 + 2*13^6 + 5*13^7 + 5*13^8 + 5*13^9 + 5*13^10 + 5*13^11 + 5*13^12 + 5*13^13 + 5*13^14 + 5*13^15 + 5*13^16 + 5*13^17 + 5*13^18 + 5*13^19 + O(13^20), 11 + 3*13 + 6*13^2 + 2*13^4 + 5*13^5 + 11*13^6 + 11*13^7 + 12*13^9 + 12*13^11 + 12*13^13 + 12*13^15 + 12*13^17 + 12*13^19 + O(13^20)))]
    random_dict[(13, 7)] = [Vs[(13, 7)]((0, 10 + 9*13^2 + 7*13^3 + 3*13^4 + 13^5 + 12*13^6 + O(13^20), 4 + 10*13 + 9*13^2 + 11*13^3 + 4*13^4 + 12*13^5 + 6*13^6 + O(13^20), 9 + 8*13 + 2*13^2 + 9*13^4 + 12*13^6 + O(13^20), 5 + 3*13 + 5*13^2 + 6*13^3 + 9*13^4 + 8*13^5 + 7*13^6 + O(13^20), 1 + 6*13 + 3*13^2 + 11*13^4 + 10*13^5 + O(13^20), 11 + 13 + 9*13^2 + 8*13^3 + 7*13^4 + 9*13^5 + O(13^20))), VQs[(13, 7)][-1]((10 + 9*13^2 + 7*13^3 + 3*13^4 + 13^5 + 12*13^6 + O(13^20), 10 + 4*13 + 2*13^3 + 7*13^4 + 5*13^5 + 10*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 7 + 6*13 + 10*13^2 + 12*13^3 + 11*13^4 + 2*13^5 + 11*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20), 1 + 12*13 + 8*13^2 + 7*13^3 + 5*13^4 + 11*13^5 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20), 6 + 8*13 + 11*13^2 + 4*13^3 + 3*13^4 + 9*13^5 + 4*13^6 + 7*13^7 + 12*13^8 + 9*13^9 + 4*13^10 + 7*13^11 + 12*13^12 + 9*13^13 + 4*13^14 + 7*13^15 + 12*13^16 + 9*13^17 + 4*13^18 + 7*13^19 + O(13^20), 2 + 2*13 + 13^2 + 4*13^3 + 12*13^4 + 12*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 12 + 13 + 7*13^2 + 9*13^3 + 2*13^4 + 9*13^5 + 10*13^6 + 4*13^7 + 12*13^8 + 4*13^9 + 12*13^10 + 4*13^11 + 12*13^12 + 4*13^13 + 12*13^14 + 4*13^15 + 12*13^16 + 4*13^17 + 12*13^18 + 4*13^19 + O(13^20)))]
    random_dict[(13, 8)] = [Vs[(13, 8)]((0, 10 + 5*13 + 7*13^3 + 13^4 + 2*13^5 + 8*13^6 + O(13^20), 6 + 3*13 + 6*13^2 + 4*13^3 + 10*13^4 + 10*13^5 + 10*13^6 + O(13^20), 10 + 2*13 + 10*13^4 + 10*13^5 + 12*13^6 + O(13^20), 10 + 6*13 + 12*13^2 + 12*13^3 + 4*13^4 + 4*13^5 + 12*13^6 + O(13^20), 4 + 11*13 + 3*13^2 + 12*13^3 + 8*13^5 + 9*13^6 + O(13^20), 2 + 4*13 + 3*13^2 + 5*13^3 + 7*13^4 + 10*13^5 + 2*13^6 + O(13^20))), VQs[(13, 8)][-1]((10 + 5*13 + 7*13^3 + 13^4 + 2*13^5 + 8*13^6 + O(13^20), 11 + 11*13 + 2*13^2 + 5*13^3 + 4*13^4 + 4*13^5 + 13^6 + O(13^20), 2 + 10*13^2 + 9*13^3 + 2*13^4 + 7*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 12 + 10*13 + 7*13^2 + 7*13^3 + 8*13^4 + 13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20), 4 + 11*13 + 8*13^2 + 2*13^3 + 9*13^4 + 7*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + O(13^20), 2 + 5*13 + 4*13^2 + 7*13^3 + 9*13^4 + 12*13^5 + 13^7 + 13^8 + 13^9 + 13^10 + 13^11 + 13^12 + 13^13 + 13^14 + 13^15 + 13^16 + 13^17 + 13^18 + 13^19 + O(13^20), 7 + 12*13 + 3*13^2 + 4*13^3 + 13^4 + 3*13^6 + 7*13^7 + 13^8 + 7*13^9 + 13^10 + 7*13^11 + 13^12 + 7*13^13 + 13^14 + 7*13^15 + 13^16 + 7*13^17 + 13^18 + 7*13^19 + O(13^20)))]
    random_dict[(13, 9)] = [Vs[(13, 9)]((0, 5 + 3*13 + 13^2 + 12*13^4 + 6*13^5 + 10*13^6 + O(13^20), 3 + 8*13^2 + 12*13^3 + 13^4 + 9*13^5 + 7*13^6 + O(13^20), 10 + 4*13 + 13^2 + 3*13^3 + 4*13^4 + 6*13^5 + 10*13^6 + O(13^20), 10 + 9*13 + 3*13^2 + 4*13^3 + 8*13^4 + 8*13^5 + 12*13^6 + O(13^20), 7 + 5*13 + 2*13^2 + 2*13^3 + 2*13^4 + 5*13^5 + 13^6 + O(13^20), 5 + 12*13 + 12*13^2 + 2*13^3 + 2*13^4 + 6*13^5 + O(13^20))), VQs[(13, 9)][-1]((5 + 3*13 + 13^2 + 12*13^4 + 6*13^5 + 10*13^6 + O(13^20), 12 + 4*13 + 3*13^2 + 6*13^3 + 13^4 + 13^5 + 5*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 7 + 8*13 + 9*13^2 + 7*13^3 + 4*13^4 + 7*13^5 + 3*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + O(13^20), 8 + 6*13 + 5*13^2 + 12*13^3 + 6*13^4 + 4*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 12*13 + 2*13^2 + 3*13^3 + 7*13^4 + 8*13^5 + 9*13^6 + 9*13^7 + 4*13^8 + 7*13^9 + 12*13^10 + 9*13^11 + 4*13^12 + 7*13^13 + 12*13^14 + 9*13^15 + 4*13^16 + 7*13^17 + 12*13^18 + 9*13^19 + 4*13^20 + O(13^21), 11 + 9*13 + 12*13^3 + 6*13^4 + 4*13^5 + 8*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 1 + 6*13 + 8*13^2 + 4*13^3 + 6*13^4 + 4*13^5 + 11*13^6 + 4*13^7 + 12*13^8 + 4*13^9 + 12*13^10 + 4*13^11 + 12*13^12 + 4*13^13 + 12*13^14 + 4*13^15 + 12*13^16 + 4*13^17 + 12*13^18 + 4*13^19 + O(13^20)))]
    random_dict[(13, 10)] = [Vs[(13, 10)]((0, 11 + 7*13 + 11*13^2 + 4*13^3 + 9*13^4 + 10*13^5 + O(13^20), 11 + 12*13 + 3*13^2 + 2*13^3 + 5*13^4 + 9*13^5 + 11*13^6 + O(13^20), 3 + 4*13 + 9*13^2 + 10*13^3 + 10*13^4 + 10*13^5 + 2*13^6 + O(13^20), 6 + 9*13 + 9*13^2 + 9*13^3 + 5*13^4 + 9*13^5 + O(13^20), 12 + 13 + 7*13^2 + 10*13^3 + 8*13^4 + 3*13^5 + 4*13^6 + O(13^20), 9 + 8*13 + 6*13^2 + 7*13^3 + 11*13^4 + 3*13^5 + 3*13^6 + O(13^20))), VQs[(13, 10)][-1]((11 + 7*13 + 11*13^2 + 4*13^3 + 9*13^4 + 10*13^5 + O(13^20), 9*13 + 2*13^2 + 5*13^3 + 4*13^4 + 12*13^5 + 11*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21), 6 + 11*13 + 13^3 + 9*13^4 + 6*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + O(13^20), 6 + 3*13 + 5*13^2 + 7*13^3 + 9*13^5 + 13^6 + O(13^20), 10 + 6*13 + 7*13^2 + 7*13^3 + 12*13^4 + 10*13^5 + 13^6 + 3*13^7 + 8*13^8 + 5*13^9 + 3*13^11 + 8*13^12 + 5*13^13 + 3*13^15 + 8*13^16 + 5*13^17 + 3*13^19 + O(13^20), 9 + 7*13 + 5*13^2 + 7*13^3 + 3*13^5 + 4*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 9 + 5*13 + 13^2 + 5*13^3 + 5*13^4 + 10*13^5 + 11*13^6 + 9*13^7 + 11*13^8 + 9*13^9 + 11*13^10 + 9*13^11 + 11*13^12 + 9*13^13 + 11*13^14 + 9*13^15 + 11*13^16 + 9*13^17 + 11*13^18 + 9*13^19 + O(13^20)))]
    random_dict[(13, 11)] = [Vs[(13, 11)]((0, 6 + 13 + 6*13^2 + 6*13^3 + 6*13^4 + 5*13^5 + 2*13^6 + O(13^20), 8 + 6*13 + 13^2 + 12*13^3 + 2*13^4 + 9*13^5 + 10*13^6 + O(13^20), 7*13 + 9*13^2 + 4*13^3 + 2*13^4 + 2*13^5 + 3*13^6 + O(13^21), 12 + 6*13 + 7*13^2 + 4*13^3 + 9*13^4 + 8*13^5 + 10*13^6 + O(13^20), 9 + 12*13 + 5*13^2 + 2*13^3 + 11*13^5 + 12*13^6 + O(13^20), 11*13 + 8*13^2 + 13^3 + 2*13^4 + 12*13^5 + 2*13^6 + O(13^21))), VQs[(13, 11)][-1]((6 + 13 + 6*13^2 + 6*13^3 + 6*13^4 + 5*13^5 + 2*13^6 + O(13^20), 1 + 9*13 + 10*13^2 + 2*13^3 + 11*13^4 + 13^5 + 4*13^6 + O(13^20), 10 + 5*13 + 3*13^2 + 5*13^3 + 10*13^5 + 4*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20), 5 + 6*13 + 10*13^2 + 13^3 + 5*13^4 + 3*13^5 + 10*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 6 + 10*13 + 10*13^2 + 10*13^3 + 12*13^4 + 12*13^6 + 5*13^7 + 3*13^8 + 11*13^9 + 6*13^11 + 3*13^12 + 11*13^13 + 6*13^15 + 3*13^16 + 11*13^17 + 6*13^19 + O(13^20), 2 + 2*13 + 10*13^2 + 10*13^3 + 2*13^4 + 10*13^5 + 12*13^6 + 13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + O(13^20), 9*13 + 2*13^2 + 11*13^3 + 10*13^4 + 3*13^5 + 11*13^6 + 10*13^7 + 6*13^8 + 10*13^9 + 6*13^10 + 10*13^11 + 6*13^12 + 10*13^13 + 6*13^14 + 10*13^15 + 6*13^16 + 10*13^17 + 6*13^18 + 10*13^19 + 6*13^20 + O(13^21)))]
    random_dict[(13, 12)] = [Vs[(13, 12)]((0, 9 + 4*13 + 9*13^2 + 2*13^3 + 7*13^4 + 10*13^5 + 6*13^6 + O(13^20), 8 + 9*13 + 3*13^2 + 3*13^3 + 9*13^4 + 9*13^5 + 5*13^6 + O(13^20), 10 + 6*13 + 5*13^2 + 3*13^3 + 7*13^4 + 7*13^5 + 8*13^6 + O(13^20), 6 + 9*13 + 5*13^3 + 7*13^4 + 9*13^5 + 6*13^6 + O(13^20), 3 + 12*13 + 6*13^2 + 6*13^3 + 5*13^4 + 8*13^5 + 5*13^6 + O(13^20), 3 + 5*13 + 3*13^2 + 7*13^3 + 2*13^4 + 13^5 + O(13^20))), VQs[(13, 12)][-1]((9 + 4*13 + 9*13^2 + 2*13^3 + 7*13^4 + 10*13^5 + 6*13^6 + O(13^20), 6 + 2*13 + 10*13^2 + 6*13^3 + 7*13^4 + 12*13^5 + 5*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20), 3 + 11*13 + 5*13^2 + 6*13^3 + 5*13^4 + 12*13^5 + 11*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + O(13^20), 5 + 13 + 8*13^2 + 3*13^3 + 10*13^4 + 10*13^5 + 11*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20), 8 + 7*13 + 5*13^2 + 2*13^3 + 2*13^4 + 8*13^5 + 8*13^6 + 5*13^7 + 3*13^9 + 8*13^10 + 5*13^11 + 3*13^13 + 8*13^14 + 5*13^15 + 3*13^17 + 8*13^18 + 5*13^19 + O(13^20), 3 + 2*13 + 11*13^2 + 13^4 + 11*13^5 + 3*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20), 10 + 11*13 + 11*13^2 + 13^3 + 4*13^4 + 6*13^5 + 10*13^6 + 12*13^7 + 8*13^8 + 12*13^9 + 8*13^10 + 12*13^11 + 8*13^12 + 12*13^13 + 8*13^14 + 12*13^15 + 8*13^16 + 12*13^17 + 8*13^18 + 12*13^19 + O(13^20)))]
    ######################
    for pk in pks:
        print "\n{0}".format(pk)
        mu = Ds[pk](random_dict[pk][0])
        mu.normalize()
        nu = mu.solve_diff_eqn()
        nu.normalize()
        nuM = nu.precision_relative()
        print "# of moments of nu =", nuM
        nuV = VQs[pk][nuM]([nu.moment(j) for j in range(nuM)])
        old_nuV = random_dict[pk][1][:nuM]
        print nuV == old_nuV
        print nuV
        print old_nuV
        old_nuV_norm = add_bigohs_dist(old_nuV)
        print nuV == old_nuV_norm
        print nuV
        print old_nuV_norm

def add_bigohs_dist(nu):
    M = len(nu)
    print M
    for i in range(M):
        nu[i] = nu[i].add_bigoh(M-i)
    return nu

def test_Dist_fam_solve_vs_old_code():
    ps = [3,5,7,13]
    Ds = dict([((p, k), FamiliesOfOverconvergentDistributions(k, base=PowerSeriesRing(ZpCA(p, 7), 'w', default_prec=6))) for p in ps for k in range(p)])
    pks = Ds.keys()
    pks.sort()
    Vs = dict([(a, Ds[a].approx_module()) for a in pks])
    VQs = dict([(a, [Ds[a].approx_module(i).base_extend(PowerSeriesRing(Qp(a[0], 7), 'w', default_prec=6)) for i in range(7+1)]) for a in pks]) 
    random_dict = {}
    ########################
    w = VQs[(3, 0)][-1].base_ring().gen()
    random_dict[(3, 0)] = [Vs[(3, 0)]((0, 2 + 3^2 + O(3^20) + (2*3 + 2*3^2 + O(3^21))*w + (3^2 + O(3^22))*w^2 + (2*3^2 + O(3^22))*w^4, 2 + 3 + 2*3^2 + O(3^20) + (3^2 + O(3^22))*w + (2*3 + O(3^21))*w^2 + (2*3^2 + O(3^22))*w^3 + (2*3^2 + O(3^22))*w^4, 1 + 2*3 + O(3^20) + (2*3 + O(3^21))*w + (3 + O(3^21))*w^2, 2 + 2*3 + O(3^20) + (2*3 + O(3^21))*w + (3 + O(3^21))*w^2, 0, 1 + O(3^20))), VQs[(3, 0)][-1]((2 + 3^2 + O(3^20) + (2*3 + 2*3^2 + O(3^21))*w + (3^2 + O(3^22))*w^2 + (2*3^2 + O(3^22))*w^4, 2*3 + O(3^21) + (2*3 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21))*w + (3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21))*w^2 + (3^2 + O(3^22))*w^3, 2*3^-1 + 1 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + O(3^19) + (2*3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21))*w + (1 + 3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + O(3^20))*w^2 + (2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + 2*3^20 + 2*3^21 + O(3^22))*w^3 + (3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + 2*3^20 + O(3^21))*w^4, 2 + 3^2 + 2*3^3 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + O(3^20) + (3 + 2*3^2 + 2*3^4 + 2*3^6 + 2*3^8 + 2*3^10 + 2*3^12 + 2*3^14 + 2*3^16 + 2*3^18 + 2*3^20 + O(3^21))*w + (3 + 2*3^2 + 2*3^4 + 2*3^6 + 2*3^8 + 2*3^10 + 2*3^12 + 2*3^14 + 2*3^16 + 2*3^18 + 2*3^20 + O(3^21))*w^2 + (2*3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + 3^21 + O(3^22))*w^3 + (2*3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + 3^21 + O(3^22))*w^4, 2*3^-1 + 2*3^3 + 2*3^4 + 2*3^7 + 2*3^8 + 2*3^11 + 2*3^12 + 2*3^15 + 2*3^16 + O(3^19) + (3^2 + 2*3^3 + 3^4 + 3^6 + 2*3^7 + 3^8 + 3^10 + 2*3^11 + 3^12 + 3^14 + 2*3^15 + 3^16 + 3^18 + 2*3^19 + 3^20 + O(3^22))*w + (1 + 3^2 + 2*3^3 + 3^4 + 3^6 + 2*3^7 + 3^8 + 3^10 + 2*3^11 + 3^12 + 3^14 + 2*3^15 + 3^16 + 3^18 + 2*3^19 + O(3^20))*w^2 + (3 + 2*3^2 + 3^3 + 3^5 + 2*3^6 + 3^7 + 3^9 + 2*3^10 + 3^11 + 3^13 + 2*3^14 + 3^15 + 3^17 + 2*3^18 + 3^19 + O(3^21))*w^4, 3^-1 + 2 + 2*3 + 2*3^3 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + O(3^19) + (1 + 3 + 2*3^2 + 2*3^4 + 2*3^6 + 2*3^8 + 2*3^10 + 2*3^12 + 2*3^14 + 2*3^16 + 2*3^18 + O(3^20))*w + (3 + 2*3^2 + 2*3^4 + 2*3^6 + 2*3^8 + 2*3^10 + 2*3^12 + 2*3^14 + 2*3^16 + 2*3^18 + 2*3^20 + O(3^21))*w^2 + (3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21))*w^3 + (3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21))*w^4, 2*3^-1 + 2 + 3 + 2*3^2 + 3^3 + 3^6 + 2*3^7 + 2*3^8 + 3^9 + 3^12 + 2*3^13 + 2*3^14 + 3^15 + 3^18 + O(3^19) + (2*3 + 3^2 + 2*3^3 + 3^5 + 2*3^7 + 3^8 + 2*3^9 + 3^11 + 2*3^13 + 3^14 + 2*3^15 + 3^17 + 2*3^19 + 3^20 + O(3^21))*w + (1 + 2*3^2 + 3^3 + 2*3^4 + 3^6 + 2*3^8 + 3^9 + 2*3^10 + 3^12 + 2*3^14 + 3^15 + 2*3^16 + 3^18 + O(3^20))*w^2 + (3 + 3^2 + 2*3^4 + 3^5 + 2*3^6 + 3^8 + 2*3^10 + 3^11 + 2*3^12 + 3^14 + 2*3^16 + 3^17 + 2*3^18 + 3^20 + O(3^21))*w^4))]
    w = VQs[(3, 1)][-1].base_ring().gen()
    random_dict[(3, 1)] = [Vs[(3, 1)]((0, 2*3^2 + O(3^22) + (3^2 + O(3^22))*w + (2*3 + 2*3^2 + O(3^21))*w^2 + (2*3^2 + O(3^22))*w^3 + (3^2 + O(3^22))*w^4, 2 + 2*3^2 + O(3^20) + (2*3 + 3^2 + O(3^21))*w + (2*3 + 3^2 + O(3^21))*w^2 + (2*3^2 + O(3^22))*w^3 + (3^2 + O(3^22))*w^4, (2*3 + O(3^21))*w + (2*3 + O(3^21))*w^2, (3 + O(3^21))*w + (2*3 + O(3^21))*w^2, 0, 2 + O(3^20))), VQs[(3, 1)][-1]((2*3^2 + O(3^22) + (3^2 + O(3^22))*w + (2*3 + 2*3^2 + O(3^21))*w^2 + (2*3^2 + O(3^22))*w^3 + (3^2 + O(3^22))*w^4, 1 + O(3^20) + (3 + O(3^21))*w + (3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + 3^21 + O(3^22))*w^2, 2 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + O(3^20) + (2 + 3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + O(3^20))*w + (3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21))*w^2 + (3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + 2*3^20 + O(3^21))*w^3 + (2*3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + 2*3^20 + O(3^21))*w^4, 2 + 3 + O(3^20) + (2*3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21))*w + (3^2 + 2*3^3 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + 2*3^21 + O(3^22))*w^2 + (2*3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + 3^21 + O(3^22))*w^3 + (3^2 + 2*3^3 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + 2*3^21 + O(3^22))*w^4, 3 + 2*3^2 + 3^3 + 3^5 + 2*3^6 + 3^7 + 3^9 + 2*3^10 + 3^11 + 3^13 + 2*3^14 + 3^15 + 3^17 + 2*3^18 + 3^19 + O(3^21) + (2 + 3^2 + 2*3^3 + 3^4 + 3^6 + 2*3^7 + 3^8 + 3^10 + 2*3^11 + 3^12 + 3^14 + 2*3^15 + 3^16 + 3^18 + 2*3^19 + O(3^20))*w + (3^2 + 2*3^3 + 3^4 + 3^6 + 2*3^7 + 3^8 + 3^10 + 2*3^11 + 3^12 + 3^14 + 2*3^15 + 3^16 + 3^18 + 2*3^19 + 3^20 + O(3^22))*w^2 + (3 + 2*3^2 + 3^3 + 3^5 + 2*3^6 + 3^7 + 3^9 + 2*3^10 + 3^11 + 3^13 + 2*3^14 + 3^15 + 3^17 + 2*3^18 + 3^19 + O(3^21))*w^3 + (2*3 + 2*3^2 + 2*3^5 + 2*3^6 + 2*3^9 + 2*3^10 + 2*3^13 + 2*3^14 + 2*3^17 + 2*3^18 + O(3^21))*w^4, 2*3^-1 + 1 + 2*3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + O(3^19) + (2 + 2*3 + 2*3^3 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + O(3^20))*w^2 + (3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21))*w^3 + (2*3 + 2*3^3 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + O(3^21))*w^4, 2 + 3^2 + 2*3^4 + 3^5 + 2*3^6 + 3^8 + 2*3^10 + 3^11 + 2*3^12 + 3^14 + 2*3^16 + 3^17 + 2*3^18 + O(3^20) + (2 + 3 + 3^4 + 2*3^5 + 2*3^6 + 3^7 + 3^10 + 2*3^11 + 2*3^12 + 3^13 + 3^16 + 2*3^17 + 2*3^18 + 3^19 + O(3^20))*w + (2*3 + 3^2 + 2*3^3 + 3^5 + 2*3^7 + 3^8 + 2*3^9 + 3^11 + 2*3^13 + 3^14 + 2*3^15 + 3^17 + 2*3^19 + 3^20 + O(3^21))*w^2 + (3 + 3^2 + 2*3^4 + 3^5 + 2*3^6 + 3^8 + 2*3^10 + 3^11 + 2*3^12 + 3^14 + 2*3^16 + 3^17 + 2*3^18 + 3^20 + O(3^21))*w^3 + (2*3 + 3^4 + 2*3^5 + 2*3^6 + 3^7 + 3^10 + 2*3^11 + 2*3^12 + 3^13 + 3^16 + 2*3^17 + 2*3^18 + 3^19 + O(3^21))*w^4))]
    w = VQs[(3, 2)][-1].base_ring().gen()
    random_dict[(3, 2)] = [Vs[(3, 2)]((0, 1 + 2*3 + 3^2 + O(3^20) + (2*3^2 + O(3^22))*w + (3 + 2*3^2 + O(3^21))*w^2 + (2*3^2 + O(3^22))*w^3 + (3^2 + O(3^22))*w^4, (2*3^2 + O(3^22))*w + (2*3 + 3^2 + O(3^21))*w^2 + (3^2 + O(3^22))*w^3, (2*3 + O(3^21))*w, 2 + 2*3 + O(3^20) + (3 + O(3^21))*w + (3 + O(3^21))*w^2, 1 + O(3^20), 1 + O(3^20))), VQs[(3, 2)][-1]((1 + 2*3 + 3^2 + O(3^20) + (2*3^2 + O(3^22))*w + (3 + 2*3^2 + O(3^21))*w^2 + (2*3^2 + O(3^22))*w^3 + (3^2 + O(3^22))*w^4, 1 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + O(3^20) + (2*3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + 2*3^20 + O(3^21))*w^2 + (3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + 3^21 + O(3^22))*w^3 + (3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + 3^21 + O(3^22))*w^4, 2*3^-1 + 2 + O(3^19) + (2 + 3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + O(3^20))*w + (2 + 3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + 2*3^19 + O(3^20))*w^2 + (3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21))*w^3 + (2*3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + O(3^21))*w^4, 2 + O(3^20) + (3^2 + 2*3^3 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + 2*3^21 + O(3^22))*w + (2*3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + 3^20 + 3^21 + O(3^22))*w^2 + (3^2 + 2*3^3 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + 2*3^21 + O(3^22))*w^3, 2*3^-1 + 1 + 3 + 2*3^2 + 2*3^3 + 2*3^4 + 2*3^5 + 2*3^6 + 2*3^7 + 2*3^8 + 2*3^9 + 2*3^10 + 2*3^11 + 2*3^12 + 2*3^13 + 2*3^14 + 2*3^15 + 2*3^16 + 2*3^17 + 2*3^18 + O(3^19) + (2 + 2*3 + 2*3^4 + 2*3^5 + 2*3^8 + 2*3^9 + 2*3^12 + 2*3^13 + 2*3^16 + 2*3^17 + O(3^20))*w + (2 + 3 + 3^2 + 3^4 + 2*3^5 + 3^6 + 3^8 + 2*3^9 + 3^10 + 3^12 + 2*3^13 + 3^14 + 3^16 + 2*3^17 + 3^18 + O(3^20))*w^2 + (3 + 2*3^2 + 3^3 + 3^5 + 2*3^6 + 3^7 + 3^9 + 2*3^10 + 3^11 + 3^13 + 2*3^14 + 3^15 + 3^17 + 2*3^18 + 3^19 + O(3^21))*w^3 + (2*3 + 2*3^2 + 2*3^5 + 2*3^6 + 2*3^9 + 2*3^10 + 2*3^13 + 2*3^14 + 2*3^17 + 2*3^18 + O(3^21))*w^4, 3 + O(3^21) + (2 + 2*3^2 + 2*3^4 + 2*3^6 + 2*3^8 + 2*3^10 + 2*3^12 + 2*3^14 + 2*3^16 + 2*3^18 + O(3^20))*w + (2*3 + 2*3^3 + 2*3^5 + 2*3^7 + 2*3^9 + 2*3^11 + 2*3^13 + 2*3^15 + 2*3^17 + 2*3^19 + O(3^21))*w^3, 2*3^-1 + 1 + 2*3^2 + 3^3 + 2*3^4 + 3^6 + 2*3^8 + 3^9 + 2*3^10 + 3^12 + 2*3^14 + 3^15 + 2*3^16 + 3^18 + O(3^19) + (2 + 3^2 + 2*3^4 + 3^5 + 2*3^6 + 3^8 + 2*3^10 + 3^11 + 2*3^12 + 3^14 + 2*3^16 + 3^17 + 2*3^18 + O(3^20))*w + (2 + 3 + 3^2 + 3^3 + 3^4 + 3^5 + 3^6 + 3^7 + 3^8 + 3^9 + 3^10 + 3^11 + 3^12 + 3^13 + 3^14 + 3^15 + 3^16 + 3^17 + 3^18 + 3^19 + O(3^20))*w^2 + (3 + 3^2 + 2*3^4 + 3^5 + 2*3^6 + 3^8 + 2*3^10 + 3^11 + 2*3^12 + 3^14 + 2*3^16 + 3^17 + 2*3^18 + 3^20 + O(3^21))*w^3 + (2*3 + 3^4 + 2*3^5 + 2*3^6 + 3^7 + 3^10 + 2*3^11 + 2*3^12 + 3^13 + 3^16 + 2*3^17 + 2*3^18 + 3^19 + O(3^21))*w^4))]
    w = VQs[(5, 0)][-1].base_ring().gen()
    random_dict[(5, 0)] = [Vs[(5, 0)]((0, 4*5 + 3*5^3 + 3*5^4 + O(5^21) + (2*5 + 2*5^2 + 3*5^4 + O(5^21))*w + (4*5^2 + 4*5^3 + 2*5^4 + O(5^22))*w^2 + (5^3 + 3*5^4 + O(5^23))*w^3 + (5^3 + 2*5^4 + O(5^23))*w^4 + (5^4 + O(5^24))*w^5, 2 + 4*5 + 2*5^3 + O(5^20) + (3*5 + 3*5^2 + 2*5^3 + O(5^21))*w + (2*5^2 + 4*5^3 + O(5^22))*w^2 + (3*5^3 + O(5^23))*w^3 + (5^3 + O(5^23))*w^4, 5 + 3*5^2 + O(5^21) + (5^2 + O(5^22))*w + (2*5^2 + O(5^22))*w^2, 4*5 + O(5^21) + (2*5 + 4*5^2 + O(5^21))*w, 2 + 5 + O(5^20) + (2*5 + O(5^21))*w, 0)), VQs[(5, 0)][-1]((4*5 + 3*5^3 + 3*5^4 + O(5^21) + (2*5 + 2*5^2 + 3*5^4 + O(5^21))*w + (4*5^2 + 4*5^3 + 2*5^4 + O(5^22))*w^2 + (5^3 + 3*5^4 + O(5^23))*w^3 + (5^3 + 2*5^4 + O(5^23))*w^4 + (5^4 + O(5^24))*w^5, 1 + 2*5^3 + 3*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + O(5^20) + (3*5 + 5^3 + 5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + O(5^21))*w + (4*5^2 + 4*5^3 + 3*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + O(5^22))*w^2 + (5^3 + 5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^3 + (4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + 4*5^22 + 4*5^23 + O(5^24))*w^4 + (2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + 2*5^23 + O(5^24))*w^5, 4 + 3*5 + 2*5^3 + O(5^20) + (3*5 + 2*5^3 + 4*5^4 + 4*5^6 + 4*5^8 + 4*5^10 + 4*5^12 + 4*5^14 + 4*5^16 + 4*5^18 + 4*5^20 + O(5^21))*w + (2*5^2 + O(5^22))*w^2 + (2*5^3 + 4*5^4 + 4*5^6 + 4*5^8 + 4*5^10 + 4*5^12 + 4*5^14 + 4*5^16 + 4*5^18 + 4*5^20 + 4*5^22 + O(5^23))*w^3 + (3*5^3 + 3*5^4 + 5^5 + 3*5^6 + 5^7 + 3*5^8 + 5^9 + 3*5^10 + 5^11 + 3*5^12 + 5^13 + 3*5^14 + 5^15 + 3*5^16 + 5^17 + 3*5^18 + 5^19 + 3*5^20 + 5^21 + 3*5^22 + O(5^23))*w^4 + (5^4 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + 4*5^23 + O(5^24))*w^5, 3 + 5 + 5^2 + O(5^20) + (4*5^2 + O(5^22))*w + (2*5^2 + 3*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + O(5^22))*w^2 + (2*5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + 5^22 + O(5^23))*w^3 + (4*5^3 + 3*5^4 + 3*5^5 + 3*5^6 + 3*5^7 + 3*5^8 + 3*5^9 + 3*5^10 + 3*5^11 + 3*5^12 + 3*5^13 + 3*5^14 + 3*5^15 + 3*5^16 + 3*5^17 + 3*5^18 + 3*5^19 + 3*5^20 + 3*5^21 + 3*5^22 + O(5^23))*w^4, 2*5^-1 + 2 + 3*5 + 2*5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + O(5^19) + (4*5 + 4*5^2 + 4*5^3 + 3*5^4 + 4*5^6 + 4*5^8 + 4*5^10 + 4*5^12 + 4*5^14 + 4*5^16 + 4*5^18 + 4*5^20 + O(5^21))*w + (5 + 3*5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + O(5^21))*w^2 + (4*5^2 + 2*5^3 + 5^4 + 3*5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + 5^20 + 3*5^21 + O(5^22))*w^3 + (4*5^2 + 3*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + O(5^22))*w^4 + (4*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + O(5^23))*w^5, 3 + 4*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + O(5^20) + (3*5^2 + 2*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + O(5^22))*w + (4*5^2 + 3*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + O(5^22))*w^2 + (5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + 5^22 + O(5^23))*w^3 + (2*5^3 + 2*5^5 + 2*5^7 + 2*5^9 + 2*5^11 + 2*5^13 + 2*5^15 + 2*5^17 + 2*5^19 + 2*5^21 + O(5^23))*w^4, 1 + 4*5 + 2*5^2 + 3*5^3 + 4*5^4 + 3*5^5 + 5^6 + 5^8 + 3*5^9 + 4*5^10 + 3*5^11 + 5^12 + 5^14 + 3*5^15 + 4*5^16 + 3*5^17 + 5^18 + O(5^20) + (2*5 + 5^2 + 2*5^3 + 2*5^4 + 3*5^6 + 2*5^7 + 4*5^8 + 5^9 + 2*5^10 + 3*5^12 + 2*5^13 + 4*5^14 + 5^15 + 2*5^16 + 3*5^18 + 2*5^19 + 4*5^20 + O(5^21))*w + (5^3 + 2*5^4 + 5^5 + 4*5^6 + 2*5^7 + 3*5^8 + 2*5^10 + 5^11 + 4*5^12 + 2*5^13 + 3*5^14 + 2*5^16 + 5^17 + 4*5^18 + 2*5^19 + 3*5^20 + 2*5^22 + O(5^23))*w^2 + (3*5^3 + 4*5^4 + 5^5 + 2*5^6 + 3*5^8 + 2*5^9 + 4*5^10 + 5^11 + 2*5^12 + 3*5^14 + 2*5^15 + 4*5^16 + 5^17 + 2*5^18 + 3*5^20 + 2*5^21 + 4*5^22 + O(5^23))*w^3 + (3*5^3 + 5^4 + 5^5 + 2*5^6 + 3*5^7 + 3*5^8 + 2*5^9 + 5^10 + 5^11 + 2*5^12 + 3*5^13 + 3*5^14 + 2*5^15 + 5^16 + 5^17 + 2*5^18 + 3*5^19 + 3*5^20 + 2*5^21 + 5^22 + O(5^23))*w^4 + (3*5^4 + 2*5^7 + 4*5^8 + 4*5^9 + 2*5^10 + 2*5^13 + 4*5^14 + 4*5^15 + 2*5^16 + 2*5^19 + 4*5^20 + 4*5^21 + 2*5^22 + O(5^24))*w^5))]
    w = VQs[(5, 1)][-1].base_ring().gen()
    random_dict[(5, 1)] = [Vs[(5, 1)]((0, 3*5 + 2*5^3 + O(5^21) + (4*5^2 + 2*5^4 + O(5^22))*w + (5^2 + O(5^22))*w^2 + (3*5^4 + O(5^24))*w^3 + (4*5^3 + 4*5^4 + O(5^23))*w^4 + (3*5^4 + O(5^24))*w^5, 2*5 + 5^3 + O(5^21) + (4*5 + 2*5^2 + 3*5^3 + O(5^21))*w + (2*5^2 + 2*5^3 + O(5^22))*w^2 + (2*5^3 + O(5^23))*w^3 + (2*5^3 + O(5^23))*w^4, 2*5 + O(5^21) + (2*5 + 2*5^2 + O(5^21))*w + (2*5^2 + O(5^22))*w^2, 3*5 + O(5^21) + (4*5 + O(5^21))*w + (3*5^2 + O(5^22))*w^2, 2 + 3*5 + O(5^20) + (3*5 + O(5^21))*w, 0)), VQs[(5, 1)][-1]((3*5 + 2*5^3 + O(5^21) + (4*5^2 + 2*5^4 + O(5^22))*w + (5^2 + O(5^22))*w^2 + (3*5^4 + O(5^24))*w^3 + (4*5^3 + 4*5^4 + O(5^23))*w^4 + (3*5^4 + O(5^24))*w^5, 2*5 + 2*5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + O(5^21) + (2*5 + 4*5^2 + 3*5^3 + 5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + O(5^21))*w + (3*5^2 + 3*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + O(5^22))*w^2 + (5^3 + 5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^3 + (4*5^3 + 2*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + 4*5^22 + O(5^23))*w^4 + (5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + 2*5^23 + O(5^24))*w^5, 5 + 4*5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + O(5^21) + (2*5 + 3*5^2 + 2*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + O(5^21))*w + (4*5^2 + 4*5^3 + 3*5^4 + 4*5^6 + 4*5^8 + 4*5^10 + 4*5^12 + 4*5^14 + 4*5^16 + 4*5^18 + 4*5^20 + O(5^22))*w^2 + (4*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^3 + (3*5^3 + O(5^23))*w^4 + (3*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + 2*5^23 + O(5^24))*w^5, 4*5 + 3*5^2 + 2*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + O(5^21) + (5 + 2*5^2 + 4*5^3 + 3*5^4 + 3*5^5 + 3*5^6 + 3*5^7 + 3*5^8 + 3*5^9 + 3*5^10 + 3*5^11 + 3*5^12 + 3*5^13 + 3*5^14 + 3*5^15 + 3*5^16 + 3*5^17 + 3*5^18 + 3*5^19 + 3*5^20 + O(5^21))*w + (4*5^2 + 5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + O(5^22))*w^2 + (3*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^3 + (3*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^4, 2*5^-1 + 3*5 + 4*5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + O(5^19) + (3 + 3*5 + 3*5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + O(5^20))*w + (4*5 + 3*5^3 + 5^4 + 3*5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + 5^20 + O(5^21))*w^2 + (2*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^3 + (5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + O(5^22))*w^4 + (2*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^5, 4 + 4*5 + 5^2 + 2*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + O(5^20) + (4*5 + 4*5^2 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + O(5^21))*w + (4*5^2 + 3*5^3 + 3*5^4 + 3*5^5 + 3*5^6 + 3*5^7 + 3*5^8 + 3*5^9 + 3*5^10 + 3*5^11 + 3*5^12 + 3*5^13 + 3*5^14 + 3*5^15 + 3*5^16 + 3*5^17 + 3*5^18 + 3*5^19 + 3*5^20 + 3*5^21 + O(5^22))*w^2 + (4*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + O(5^23))*w^3 + (4*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + O(5^23))*w^4, 1 + 5 + 5^2 + 2*5^3 + 5^4 + 4*5^5 + 2*5^6 + 3*5^7 + 2*5^9 + 5^10 + 4*5^11 + 2*5^12 + 3*5^13 + 2*5^15 + 5^16 + 4*5^17 + 2*5^18 + 3*5^19 + O(5^20) + (2*5 + 4*5^2 + 4*5^3 + 3*5^4 + 5^5 + 5^7 + 3*5^8 + 4*5^9 + 3*5^10 + 5^11 + 5^13 + 3*5^14 + 4*5^15 + 3*5^16 + 5^17 + 5^19 + 3*5^20 + O(5^21))*w + (5^2 + 2*5^3 + 3*5^4 + 3*5^5 + 2*5^6 + 5^7 + 5^8 + 2*5^9 + 3*5^10 + 3*5^11 + 2*5^12 + 5^13 + 5^14 + 2*5^15 + 3*5^16 + 3*5^17 + 2*5^18 + 5^19 + 5^20 + 2*5^21 + O(5^22))*w^2 + (4*5^4 + 5^5 + 5^7 + 3*5^8 + 4*5^9 + 3*5^10 + 5^11 + 5^13 + 3*5^14 + 4*5^15 + 3*5^16 + 5^17 + 5^19 + 3*5^20 + 4*5^21 + 3*5^22 + 5^23 + O(5^24))*w^3 + (2*5^3 + 4*5^4 + 2*5^5 + 3*5^6 + 2*5^8 + 5^9 + 4*5^10 + 2*5^11 + 3*5^12 + 2*5^14 + 5^15 + 4*5^16 + 2*5^17 + 3*5^18 + 2*5^20 + 5^21 + 4*5^22 + O(5^23))*w^4 + (4*5^4 + 5^5 + 5^7 + 3*5^8 + 4*5^9 + 3*5^10 + 5^11 + 5^13 + 3*5^14 + 4*5^15 + 3*5^16 + 5^17 + 5^19 + 3*5^20 + 4*5^21 + 3*5^22 + 5^23 + O(5^24))*w^5))]
    w = VQs[(5, 2)][-1].base_ring().gen()
    random_dict[(5, 2)] = [Vs[(5, 2)]((0, 3 + 3*5^4 + O(5^20) + (2*5 + 3*5^2 + 4*5^3 + 2*5^4 + O(5^21))*w + (2*5^2 + 5^3 + 4*5^4 + O(5^22))*w^2 + (4*5^3 + 4*5^4 + O(5^23))*w^3 + (3*5^4 + O(5^24))*w^4 + (5^4 + O(5^24))*w^5, 2 + 3*5 + 5^2 + 5^3 + O(5^20) + (5 + 2*5^3 + O(5^21))*w + (4*5^2 + 3*5^3 + O(5^22))*w^2 + (3*5^3 + O(5^23))*w^4, 1 + 5 + O(5^20) + (4*5 + O(5^21))*w + (5^2 + O(5^22))*w^2, 4 + 3*5^2 + O(5^20) + (5 + O(5^21))*w + (2*5^2 + O(5^22))*w^2, 3 + 4*5 + O(5^20) + (5 + O(5^21))*w, 3 + O(5^20))), VQs[(5, 2)][-1]((3 + 3*5^4 + O(5^20) + (2*5 + 3*5^2 + 4*5^3 + 2*5^4 + O(5^21))*w + (2*5^2 + 5^3 + 4*5^4 + O(5^22))*w^2 + (4*5^3 + 4*5^4 + O(5^23))*w^3 + (3*5^4 + O(5^24))*w^4 + (5^4 + O(5^24))*w^5, 2 + 5 + 3*5^2 + 5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + O(5^20) + (2*5 + 3*5^2 + 3*5^3 + 3*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + O(5^21))*w + (5^2 + 5^3 + 3*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + O(5^22))*w^2 + (3*5^3 + 2*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + 4*5^22 + O(5^23))*w^3 + (4*5^3 + 3*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + 4*5^22 + O(5^23))*w^4 + (2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + 2*5^23 + O(5^24))*w^5, 4 + 3*5 + 5^2 + 4*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + O(5^20) + (2*5 + 2*5^2 + 5^3 + O(5^21))*w + (2*5^2 + 3*5^3 + 3*5^4 + 5^5 + 3*5^6 + 5^7 + 3*5^8 + 5^9 + 3*5^10 + 5^11 + 3*5^12 + 5^13 + 3*5^14 + 5^15 + 3*5^16 + 5^17 + 3*5^18 + 5^19 + 3*5^20 + 5^21 + O(5^22))*w^2 + (4*5^3 + O(5^23))*w^3 + (5^3 + O(5^23))*w^4 + (5^4 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + 4*5^23 + O(5^24))*w^5, 1 + 4*5 + 4*5^2 + 2*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + O(5^20) + (5 + 2*5^2 + O(5^21))*w + (5^2 + 2*5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + O(5^22))*w^2 + (2*5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + 5^22 + O(5^23))*w^4, 2 + 3*5 + 3*5^2 + 5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + O(5^20) + (4 + 3*5 + 2*5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + O(5^20))*w + (3*5 + 5^2 + 3*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + O(5^21))*w^2 + (5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + O(5^22))*w^3 + (2*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^4 + (4*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + O(5^23))*w^5, 3 + 5 + O(5^20) + (4*5 + 3*5^3 + 5^4 + 3*5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + 5^20 + O(5^21))*w + (3*5^2 + 3*5^3 + 3*5^4 + 3*5^5 + 3*5^6 + 3*5^7 + 3*5^8 + 3*5^9 + 3*5^10 + 3*5^11 + 3*5^12 + 3*5^13 + 3*5^14 + 3*5^15 + 3*5^16 + 3*5^17 + 3*5^18 + 3*5^19 + 3*5^20 + 3*5^21 + O(5^22))*w^2 + (5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + 5^22 + O(5^23))*w^4, 3 + 3*5 + 5^3 + 2*5^4 + 5^5 + 4*5^6 + 2*5^7 + 3*5^8 + 2*5^10 + 5^11 + 4*5^12 + 2*5^13 + 3*5^14 + 2*5^16 + 5^17 + 4*5^18 + 2*5^19 + O(5^20) + (5^2 + 3*5^3 + 3*5^4 + 2*5^6 + 5^7 + 4*5^8 + 2*5^9 + 3*5^10 + 2*5^12 + 5^13 + 4*5^14 + 2*5^15 + 3*5^16 + 2*5^18 + 5^19 + 4*5^20 + 2*5^21 + O(5^22))*w + (2*5^4 + 2*5^5 + 3*5^7 + 2*5^8 + 4*5^9 + 5^10 + 2*5^11 + 3*5^13 + 2*5^14 + 4*5^15 + 5^16 + 2*5^17 + 3*5^19 + 2*5^20 + 4*5^21 + 5^22 + 2*5^23 + O(5^24))*w^2 + (2*5^3 + 4*5^4 + 2*5^5 + 3*5^6 + 2*5^8 + 5^9 + 4*5^10 + 2*5^11 + 3*5^12 + 2*5^14 + 5^15 + 4*5^16 + 2*5^17 + 3*5^18 + 2*5^20 + 5^21 + 4*5^22 + O(5^23))*w^3 + (4*5^4 + 5^5 + 5^7 + 3*5^8 + 4*5^9 + 3*5^10 + 5^11 + 5^13 + 3*5^14 + 4*5^15 + 3*5^16 + 5^17 + 5^19 + 3*5^20 + 4*5^21 + 3*5^22 + 5^23 + O(5^24))*w^4 + (3*5^4 + 2*5^7 + 4*5^8 + 4*5^9 + 2*5^10 + 2*5^13 + 4*5^14 + 4*5^15 + 2*5^16 + 2*5^19 + 4*5^20 + 4*5^21 + 2*5^22 + O(5^24))*w^5))]
    w = VQs[(5, 3)][-1].base_ring().gen()
    random_dict[(5, 3)] = [Vs[(5, 3)]((0, 3 + 5 + 3*5^2 + 3*5^4 + O(5^20) + (3*5^2 + 3*5^3 + 5^4 + O(5^22))*w + (2*5^2 + 5^4 + O(5^22))*w^2 + (2*5^3 + O(5^23))*w^4 + (2*5^4 + O(5^24))*w^5, 2*5^3 + O(5^23) + (5 + 5^2 + 5^3 + O(5^21))*w + (3*5^2 + O(5^22))*w^2 + (5^3 + O(5^23))*w^3 + (2*5^3 + O(5^23))*w^4, 1 + 5 + 5^2 + O(5^20) + (3*5 + O(5^21))*w + (4*5^2 + O(5^22))*w^2, 2 + 5^2 + O(5^20) + (2*5^2 + O(5^22))*w + (2*5^2 + O(5^22))*w^2, 1 + 5 + O(5^20), 1 + O(5^20))), VQs[(5, 3)][-1]((3 + 5 + 3*5^2 + 3*5^4 + O(5^20) + (3*5^2 + 3*5^3 + 5^4 + O(5^22))*w + (2*5^2 + 5^4 + O(5^22))*w^2 + (2*5^3 + O(5^23))*w^4 + (2*5^4 + O(5^24))*w^5, 1 + 4*5 + 3*5^3 + 3*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + O(5^20) + (3*5 + 5^2 + 5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + O(5^21))*w + (3*5^2 + 2*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + O(5^22))*w^2 + (3*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^3 + (4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + 4*5^21 + 4*5^22 + 4*5^23 + O(5^24))*w^5, 4*5 + 5^2 + 3*5^3 + 3*5^4 + 5^5 + 3*5^6 + 5^7 + 3*5^8 + 5^9 + 3*5^10 + 5^11 + 3*5^12 + 5^13 + 3*5^14 + 5^15 + 3*5^16 + 5^17 + 3*5^18 + 5^19 + 3*5^20 + O(5^21) + (3*5 + 2*5^2 + 2*5^3 + 3*5^4 + 5^5 + 3*5^6 + 5^7 + 3*5^8 + 5^9 + 3*5^10 + 5^11 + 3*5^12 + 5^13 + 3*5^14 + 5^15 + 3*5^16 + 5^17 + 3*5^18 + 5^19 + 3*5^20 + O(5^21))*w + (5^2 + 4*5^3 + 5^4 + 3*5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + 5^20 + 3*5^21 + O(5^22))*w^2 + (2*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^3 + (5^3 + 3*5^4 + 5^5 + 3*5^6 + 5^7 + 3*5^8 + 5^9 + 3*5^10 + 5^11 + 3*5^12 + 5^13 + 3*5^14 + 5^15 + 3*5^16 + 5^17 + 3*5^18 + 5^19 + 3*5^20 + 5^21 + 3*5^22 + O(5^23))*w^4 + (2*5^4 + 3*5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + 5^20 + 3*5^21 + 5^22 + 3*5^23 + O(5^24))*w^5, 2*5 + 3*5^2 + 5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + O(5^21) + (3*5^2 + 5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + O(5^22))*w + (3*5^2 + 3*5^3 + 3*5^4 + 3*5^5 + 3*5^6 + 3*5^7 + 3*5^8 + 3*5^9 + 3*5^10 + 3*5^11 + 3*5^12 + 3*5^13 + 3*5^14 + 3*5^15 + 3*5^16 + 3*5^17 + 3*5^18 + 3*5^19 + 3*5^20 + 3*5^21 + O(5^22))*w^2 + (4*5^3 + 3*5^4 + 3*5^5 + 3*5^6 + 3*5^7 + 3*5^8 + 3*5^9 + 3*5^10 + 3*5^11 + 3*5^12 + 3*5^13 + 3*5^14 + 3*5^15 + 3*5^16 + 3*5^17 + 3*5^18 + 3*5^19 + 3*5^20 + 3*5^21 + 3*5^22 + O(5^23))*w^3 + (3*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^4, 3*5^-1 + 3 + 3*5^2 + 3*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + O(5^19) + (3*5 + 3*5^2 + 3*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + O(5^21))*w + (3*5 + 3*5^2 + 4*5^4 + 4*5^6 + 4*5^8 + 4*5^10 + 4*5^12 + 4*5^14 + 4*5^16 + 4*5^18 + 4*5^20 + O(5^21))*w^2 + (3*5^2 + 5^3 + 3*5^4 + 5^5 + 3*5^6 + 5^7 + 3*5^8 + 5^9 + 3*5^10 + 5^11 + 3*5^12 + 5^13 + 3*5^14 + 5^15 + 3*5^16 + 5^17 + 3*5^18 + 5^19 + 3*5^20 + 5^21 + O(5^22))*w^4 + (3*5^3 + 5^4 + 3*5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + 5^20 + 3*5^21 + 5^22 + O(5^23))*w^5, 3 + 4*5 + 4*5^2 + 5^3 + 2*5^5 + 2*5^7 + 2*5^9 + 2*5^11 + 2*5^13 + 2*5^15 + 2*5^17 + 2*5^19 + O(5^20) + (2*5 + 2*5^2 + 2*5^4 + 2*5^6 + 2*5^8 + 2*5^10 + 2*5^12 + 2*5^14 + 2*5^16 + 2*5^18 + 2*5^20 + O(5^21))*w + (5^2 + 2*5^3 + 2*5^5 + 2*5^7 + 2*5^9 + 2*5^11 + 2*5^13 + 2*5^15 + 2*5^17 + 2*5^19 + 2*5^21 + O(5^22))*w^2 + (2*5^3 + 2*5^5 + 2*5^7 + 2*5^9 + 2*5^11 + 2*5^13 + 2*5^15 + 2*5^17 + 2*5^19 + 2*5^21 + O(5^23))*w^3 + (4*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + O(5^23))*w^4, 3 + 2*5 + 5^2 + 5^3 + 5^4 + 4*5^6 + 3*5^7 + 4*5^8 + 5^10 + 4*5^12 + 3*5^13 + 4*5^14 + 5^16 + 4*5^18 + 3*5^19 + O(5^20) + (2*5 + 5^2 + 3*5^3 + 2*5^4 + 4*5^5 + 5^6 + 2*5^7 + 3*5^9 + 2*5^10 + 4*5^11 + 5^12 + 2*5^13 + 3*5^15 + 2*5^16 + 4*5^17 + 5^18 + 2*5^19 + O(5^21))*w + (2*5^2 + 4*5^3 + 4*5^4 + 2*5^5 + 2*5^8 + 4*5^9 + 4*5^10 + 2*5^11 + 2*5^14 + 4*5^15 + 4*5^16 + 2*5^17 + 2*5^20 + 4*5^21 + O(5^22))*w^2 + (5^3 + 5^4 + 4*5^6 + 3*5^7 + 4*5^8 + 5^10 + 4*5^12 + 3*5^13 + 4*5^14 + 5^16 + 4*5^18 + 3*5^19 + 4*5^20 + 5^22 + O(5^23))*w^4 + (5^4 + 5^5 + 4*5^7 + 3*5^8 + 4*5^9 + 5^11 + 4*5^13 + 3*5^14 + 4*5^15 + 5^17 + 4*5^19 + 3*5^20 + 4*5^21 + 5^23 + O(5^24))*w^5))]
    w = VQs[(5, 4)][-1].base_ring().gen()
    random_dict[(5, 4)] = [Vs[(5, 4)]((0, 4 + 2*5 + 3*5^3 + 4*5^4 + O(5^20) + (3*5 + 3*5^3 + O(5^21))*w + (4*5^2 + 3*5^4 + O(5^22))*w^2 + (3*5^3 + 4*5^4 + O(5^23))*w^3 + (4*5^3 + O(5^23))*w^4 + (5^4 + O(5^24))*w^5, 4 + 5 + 3*5^2 + 3*5^3 + O(5^20) + (2*5 + 5^2 + O(5^21))*w + (4*5^2 + O(5^22))*w^2 + (3*5^3 + O(5^23))*w^4, 2 + 5 + O(5^20) + (3*5^2 + O(5^22))*w + (5^2 + O(5^22))*w^2, 2 + O(5^20) + (2*5 + 4*5^2 + O(5^21))*w + (5^2 + O(5^22))*w^2, 2 + 3*5 + O(5^20), 4 + O(5^20))), VQs[(5, 4)][-1]((4 + 2*5 + 3*5^3 + 4*5^4 + O(5^20) + (3*5 + 3*5^3 + O(5^21))*w + (4*5^2 + 3*5^4 + O(5^22))*w^2 + (3*5^3 + 4*5^4 + O(5^23))*w^3 + (4*5^3 + O(5^23))*w^4 + (5^4 + O(5^24))*w^5, 2*5 + 5^2 + 3*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + O(5^21) + (2*5 + 5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + O(5^21))*w + (5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + 2*5^23 + O(5^24))*w^2 + (5^3 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^3 + (2*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + O(5^23))*w^4 + (2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + 2*5^22 + 2*5^23 + O(5^24))*w^5, 1 + 4*5 + 5^2 + 2*5^4 + 3*5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + O(5^20) + (2*5 + 3*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + O(5^21))*w + (4*5^2 + 4*5^3 + 2*5^4 + 2*5^5 + 2*5^6 + 2*5^7 + 2*5^8 + 2*5^9 + 2*5^10 + 2*5^11 + 2*5^12 + 2*5^13 + 2*5^14 + 2*5^15 + 2*5^16 + 2*5^17 + 2*5^18 + 2*5^19 + 2*5^20 + 2*5^21 + O(5^22))*w^2 + (3*5^3 + 5^4 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + O(5^23))*w^3 + (4*5^4 + 4*5^6 + 4*5^8 + 4*5^10 + 4*5^12 + 4*5^14 + 4*5^16 + 4*5^18 + 4*5^20 + 4*5^22 + O(5^24))*w^4 + (5^4 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + 4*5^23 + O(5^24))*w^5, 3 + 3*5 + 2*5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + O(5^20) + (5 + 5^2 + 5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + O(5^21))*w + (2*5^2 + 5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + O(5^22))*w^2 + (2*5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + 5^22 + O(5^23))*w^4, 3*5^-1 + 2 + 2*5 + 4*5^4 + 4*5^6 + 4*5^8 + 4*5^10 + 4*5^12 + 4*5^14 + 4*5^16 + 4*5^18 + O(5^19) + (2 + 5 + 3*5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + O(5^20))*w + (5 + 2*5^2 + 4*5^3 + 4*5^4 + 4*5^5 + 4*5^6 + 4*5^7 + 4*5^8 + 4*5^9 + 4*5^10 + 4*5^11 + 4*5^12 + 4*5^13 + 4*5^14 + 4*5^15 + 4*5^16 + 4*5^17 + 4*5^18 + 4*5^19 + 4*5^20 + O(5^21))*w^2 + (2*5^2 + 3*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + O(5^22))*w^3 + (5^2 + 3*5^3 + 5^4 + 3*5^5 + 5^6 + 3*5^7 + 5^8 + 3*5^9 + 5^10 + 3*5^11 + 5^12 + 3*5^13 + 5^14 + 3*5^15 + 5^16 + 3*5^17 + 5^18 + 3*5^19 + 5^20 + 3*5^21 + O(5^22))*w^4 + (4*5^3 + 4*5^5 + 4*5^7 + 4*5^9 + 4*5^11 + 4*5^13 + 4*5^15 + 4*5^17 + 4*5^19 + 4*5^21 + O(5^23))*w^5, 1 + 2*5 + 4*5^2 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + O(5^20) + (4*5 + 3*5^2 + 2*5^4 + 2*5^6 + 2*5^8 + 2*5^10 + 2*5^12 + 2*5^14 + 2*5^16 + 2*5^18 + 2*5^20 + O(5^21))*w + (3*5^2 + 4*5^3 + 2*5^4 + 4*5^5 + 2*5^6 + 4*5^7 + 2*5^8 + 4*5^9 + 2*5^10 + 4*5^11 + 2*5^12 + 4*5^13 + 2*5^14 + 4*5^15 + 2*5^16 + 4*5^17 + 2*5^18 + 4*5^19 + 2*5^20 + 4*5^21 + O(5^22))*w^2 + (5^3 + 5^4 + 5^5 + 5^6 + 5^7 + 5^8 + 5^9 + 5^10 + 5^11 + 5^12 + 5^13 + 5^14 + 5^15 + 5^16 + 5^17 + 5^18 + 5^19 + 5^20 + 5^21 + 5^22 + O(5^23))*w^4, 4 + 2*5 + 3*5^2 + 2*5^4 + 4*5^5 + 4*5^6 + 2*5^7 + 2*5^10 + 4*5^11 + 4*5^12 + 2*5^13 + 2*5^16 + 4*5^17 + 4*5^18 + 2*5^19 + O(5^20) + (4*5 + 3*5^2 + 5^3 + 5^5 + 3*5^6 + 4*5^7 + 3*5^8 + 5^9 + 5^11 + 3*5^12 + 4*5^13 + 3*5^14 + 5^15 + 5^17 + 3*5^18 + 4*5^19 + 3*5^20 + O(5^21))*w + (5^2 + 3*5^3 + 3*5^4 + 2*5^6 + 5^7 + 4*5^8 + 2*5^9 + 3*5^10 + 2*5^12 + 5^13 + 4*5^14 + 2*5^15 + 3*5^16 + 2*5^18 + 5^19 + 4*5^20 + 2*5^21 + O(5^22))*w^2 + (4*5^3 + 3*5^4 + 2*5^5 + 5^6 + 5^7 + 2*5^8 + 3*5^9 + 3*5^10 + 2*5^11 + 5^12 + 5^13 + 2*5^14 + 3*5^15 + 3*5^16 + 2*5^17 + 5^18 + 5^19 + 2*5^20 + 3*5^21 + 3*5^22 + O(5^23))*w^3 + (2*5^3 + 2*5^4 + 3*5^6 + 2*5^7 + 4*5^8 + 5^9 + 2*5^10 + 3*5^12 + 2*5^13 + 4*5^14 + 5^15 + 2*5^16 + 3*5^18 + 2*5^19 + 4*5^20 + 5^21 + 2*5^22 + O(5^23))*w^4 + (3*5^4 + 2*5^7 + 4*5^8 + 4*5^9 + 2*5^10 + 2*5^13 + 4*5^14 + 4*5^15 + 2*5^16 + 2*5^19 + 4*5^20 + 4*5^21 + 2*5^22 + O(5^24))*w^5))]
    w = VQs[(7, 0)][-1].base_ring().gen()
    random_dict[(7, 0)] = [Vs[(7, 0)]((0, 4*7 + 4*7^2 + 6*7^4 + O(7^21) + (3*7 + 5*7^2 + 5*7^4 + O(7^21))*w + (7^2 + 3*7^3 + O(7^22))*w^2 + (3*7^3 + 3*7^4 + O(7^23))*w^3 + (4*7^4 + O(7^24))*w^4, 5 + 7^2 + 4*7^3 + 7^4 + O(7^20) + (3*7 + 3*7^3 + 2*7^4 + O(7^21))*w + (3*7^2 + 2*7^3 + 4*7^4 + O(7^22))*w^2 + (5*7^3 + 6*7^4 + O(7^23))*w^3 + (4*7^4 + O(7^24))*w^4, 3 + 2*7 + 5*7^2 + 6*7^3 + O(7^20) + (2*7 + 4*7^2 + 2*7^3 + O(7^21))*w + (5*7^2 + 5*7^3 + O(7^22))*w^2 + (4*7^3 + O(7^23))*w^3, 6 + 5*7 + 6*7^2 + O(7^20) + (4*7 + 6*7^2 + O(7^21))*w + (7^2 + O(7^22))*w^2, 5 + 2*7 + O(7^20) + (7 + O(7^21))*w, 2 + O(7^20))), VQs[(7, 0)][-1]((4*7 + 4*7^2 + 6*7^4 + O(7^21) + (3*7 + 5*7^2 + 5*7^4 + O(7^21))*w + (7^2 + 3*7^3 + O(7^22))*w^2 + (3*7^3 + 3*7^4 + O(7^23))*w^3 + (4*7^4 + O(7^24))*w^4, 6 + 7 + 5*7^2 + 7^3 + 7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20) + (7^2 + 7^3 + 2*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w + (7^2 + 3*7^3 + 5*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w^2 + (7^3 + 5*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^3, 2 + 2*7 + 4*7^2 + 2*7^3 + 6*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20) + (2*7 + 3*7^2 + 6*7^3 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + O(7^21))*w + (5*7^2 + 4*7^3 + 7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w^2 + (4*7^3 + 5*7^4 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + 7^21 + 7^22 + O(7^23))*w^3 + (7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + 2*7^22 + 2*7^23 + O(7^24))*w^4, 3 + 7^2 + 3*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20) + (6*7 + 4*7^2 + 6*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + O(7^21))*w + (2*7^2 + 7^3 + 4*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w^2 + (7^3 + 3*7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + 5*7^21 + 7^22 + O(7^23))*w^3 + (7^4 + O(7^24))*w^4, 6 + 4*7^2 + 3*7^4 + 4*7^5 + 7^6 + 3*7^8 + 4*7^9 + 7^10 + 3*7^12 + 4*7^13 + 7^14 + 3*7^16 + 4*7^17 + 7^18 + O(7^20) + (6*7 + 6*7^2 + 5*7^3 + 3*7^4 + 2*7^5 + 5*7^6 + 6*7^7 + 3*7^8 + 2*7^9 + 5*7^10 + 6*7^11 + 3*7^12 + 2*7^13 + 5*7^14 + 6*7^15 + 3*7^16 + 2*7^17 + 5*7^18 + 6*7^19 + 3*7^20 + O(7^21))*w + (3*7^2 + 2*7^3 + 2*7^4 + 6*7^5 + 4*7^6 + 2*7^8 + 6*7^9 + 4*7^10 + 2*7^12 + 6*7^13 + 4*7^14 + 2*7^16 + 6*7^17 + 4*7^18 + 2*7^20 + 6*7^21 + O(7^22))*w^2 + (7^3 + 6*7^4 + 7^5 + 3*7^6 + 6*7^8 + 7^9 + 3*7^10 + 6*7^12 + 7^13 + 3*7^14 + 6*7^16 + 7^17 + 3*7^18 + 6*7^20 + 7^21 + 3*7^22 + O(7^23))*w^3 + (5*7^4 + 3*7^5 + 6*7^6 + 5*7^8 + 3*7^9 + 6*7^10 + 5*7^12 + 3*7^13 + 6*7^14 + 5*7^16 + 3*7^17 + 6*7^18 + 5*7^20 + 3*7^21 + 6*7^22 + O(7^24))*w^4, 4 + 4*7 + 6*7^2 + 2*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20) + (5*7 + 6*7^2 + 5*7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + O(7^21))*w + (6*7^2 + 6*7^3 + 7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + O(7^22))*w^2 + (6*7^3 + 5*7^4 + 2*7^5 + 6*7^6 + 2*7^7 + 6*7^8 + 2*7^9 + 6*7^10 + 2*7^11 + 6*7^12 + 2*7^13 + 6*7^14 + 2*7^15 + 6*7^16 + 2*7^17 + 6*7^18 + 2*7^19 + 6*7^20 + 2*7^21 + 6*7^22 + O(7^23))*w^3 + (2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + 2*7^22 + 2*7^23 + O(7^24))*w^4, 4 + 7 + 5*7^2 + 5*7^3 + 5*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20) + (4 + 4*7 + 5*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + O(7^20))*w + (6*7 + 6*7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + O(7^21))*w^2 + (4*7^2 + 4*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + 4*7^20 + 4*7^21 + O(7^22))*w^3 + (3*7^3 + 2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + 2*7^22 + O(7^23))*w^4))]
    w = VQs[(7, 1)][-1].base_ring().gen()
    random_dict[(7, 1)] = [Vs[(7, 1)]((0, 5 + 2*7 + 7^2 + 7^3 + 5*7^4 + O(7^20) + (7 + 7^2 + 5*7^3 + 7^4 + O(7^21))*w + (4*7^2 + 2*7^3 + 5*7^4 + O(7^22))*w^2 + (7^3 + 3*7^4 + O(7^23))*w^3 + (3*7^4 + O(7^24))*w^4, 3 + 4*7 + 2*7^2 + 4*7^4 + O(7^20) + (7 + 3*7^3 + 2*7^4 + O(7^21))*w + (3*7^2 + 2*7^3 + 7^4 + O(7^22))*w^2 + (4*7^3 + 3*7^4 + O(7^23))*w^3 + (7^4 + O(7^24))*w^4, 1 + 5*7 + 5*7^2 + 2*7^3 + O(7^20) + (5*7 + 6*7^2 + O(7^21))*w + (4*7^2 + 3*7^3 + O(7^22))*w^2 + (7^3 + O(7^23))*w^3, 5 + 6*7 + 5*7^2 + O(7^20) + (7 + O(7^21))*w + (5*7^2 + O(7^22))*w^2, 4 + 5*7 + O(7^20) + (6*7 + O(7^21))*w, 4 + O(7^20))), VQs[(7, 1)][-1]((5 + 2*7 + 7^2 + 7^3 + 5*7^4 + O(7^20) + (7 + 7^2 + 5*7^3 + 7^4 + O(7^21))*w + (4*7^2 + 2*7^3 + 5*7^4 + O(7^22))*w^2 + (7^3 + 3*7^4 + O(7^23))*w^3 + (3*7^4 + O(7^24))*w^4, 6 + 4*7^2 + 6*7^3 + 2*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20) + (3*7^2 + 2*7^3 + O(7^22))*w + (3*7^2 + 3*7^3 + 7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w^2 + (5*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^3 + (6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + 6*7^21 + 6*7^22 + 6*7^23 + O(7^24))*w^4, 2 + 2*7 + 4*7^2 + 5*7^3 + 4*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20) + (6*7 + 5*7^2 + 6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + O(7^21))*w + (4*7^2 + 7^3 + 6*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + 5*7^20 + 5*7^21 + O(7^22))*w^2 + (2*7^3 + 2*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^3, 5 + 3*7 + 4*7^2 + 6*7^4 + 7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + O(7^20) + (5*7 + 3*7^2 + 5*7^3 + 5*7^4 + 7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + 5*7^20 + O(7^21))*w + (6*7^3 + 7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + 5*7^21 + 7^22 + O(7^23))*w^2 + (4*7^3 + 2*7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + 5*7^21 + 7^22 + O(7^23))*w^3 + (2*7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + 5*7^21 + 7^22 + 5*7^23 + O(7^24))*w^4, 5 + 7 + 3*7^2 + 4*7^3 + 3*7^4 + 6*7^5 + 5*7^7 + 3*7^8 + 6*7^9 + 5*7^11 + 3*7^12 + 6*7^13 + 5*7^15 + 3*7^16 + 6*7^17 + 5*7^19 + O(7^20) + (3*7^2 + 3*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w + (5*7^2 + 4*7^3 + 3*7^4 + 6*7^5 + 5*7^7 + 3*7^8 + 6*7^9 + 5*7^11 + 3*7^12 + 6*7^13 + 5*7^15 + 3*7^16 + 6*7^17 + 5*7^19 + 3*7^20 + 6*7^21 + O(7^22))*w^2 + (7^3 + 4*7^4 + 5*7^5 + 2*7^6 + 7^7 + 4*7^8 + 5*7^9 + 2*7^10 + 7^11 + 4*7^12 + 5*7^13 + 2*7^14 + 7^15 + 4*7^16 + 5*7^17 + 2*7^18 + 7^19 + 4*7^20 + 5*7^21 + 2*7^22 + O(7^23))*w^3 + (2*7^4 + 6*7^5 + 4*7^6 + 2*7^8 + 6*7^9 + 4*7^10 + 2*7^12 + 6*7^13 + 4*7^14 + 2*7^16 + 6*7^17 + 4*7^18 + 2*7^20 + 6*7^21 + 4*7^22 + O(7^24))*w^4, 4 + 5*7 + 4*7^2 + 6*7^3 + 4*7^4 + 7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + O(7^20) + (2*7 + 4*7^2 + 2*7^3 + 4*7^5 + 4*7^7 + 4*7^9 + 4*7^11 + 4*7^13 + 4*7^15 + 4*7^17 + 4*7^19 + O(7^21))*w + (3*7^2 + 2*7^3 + 6*7^4 + 2*7^5 + 6*7^6 + 2*7^7 + 6*7^8 + 2*7^9 + 6*7^10 + 2*7^11 + 6*7^12 + 2*7^13 + 6*7^14 + 2*7^15 + 6*7^16 + 2*7^17 + 6*7^18 + 2*7^19 + 6*7^20 + 2*7^21 + O(7^22))*w^2 + (2*7^3 + 4*7^5 + 4*7^7 + 4*7^9 + 4*7^11 + 4*7^13 + 4*7^15 + 4*7^17 + 4*7^19 + 4*7^21 + O(7^23))*w^3 + (4*7^4 + 4*7^6 + 4*7^8 + 4*7^10 + 4*7^12 + 4*7^14 + 4*7^16 + 4*7^18 + 4*7^20 + 4*7^22 + O(7^24))*w^4, 2*7^-1 + 3*7 + 5*7^2 + 2*7^3 + 2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + O(7^19) + (6 + 5*7 + 4*7^2 + 3*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20))*w + (3*7 + 4*7^2 + 2*7^3 + 2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + O(7^21))*w^2 + (6*7^2 + 3*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w^3 + (4*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^4))]
    w = VQs[(7, 2)][-1].base_ring().gen()
    random_dict[(7, 2)] = [Vs[(7, 2)]((0, 3 + 3*7^2 + 3*7^3 + 7^4 + O(7^20) + (4*7 + 6*7^2 + 7^3 + 4*7^4 + O(7^21))*w + (3*7^3 + O(7^23))*w^2 + (7^3 + 3*7^4 + O(7^23))*w^3 + (2*7^4 + O(7^24))*w^4, 3 + 4*7 + 3*7^2 + 5*7^3 + 5*7^4 + O(7^20) + (5*7 + 7^2 + 7^3 + 4*7^4 + O(7^21))*w + (3*7^2 + 7^3 + 4*7^4 + O(7^22))*w^2 + (6*7^3 + 2*7^4 + O(7^23))*w^3 + (4*7^4 + O(7^24))*w^4, 3 + 6*7 + 7^2 + 5*7^3 + O(7^20) + (3*7 + 3*7^3 + O(7^21))*w + (6*7^2 + 5*7^3 + O(7^22))*w^2, 5 + 6*7 + 4*7^2 + O(7^20) + (4*7 + 3*7^2 + O(7^21))*w + (6*7^2 + O(7^22))*w^2, 7 + O(7^21) + (3*7 + O(7^21))*w, 1 + O(7^20))), VQs[(7, 2)][-1]((3 + 3*7^2 + 3*7^3 + 7^4 + O(7^20) + (4*7 + 6*7^2 + 7^3 + 4*7^4 + O(7^21))*w + (3*7^3 + O(7^23))*w^2 + (7^3 + 3*7^4 + O(7^23))*w^3 + (2*7^4 + O(7^24))*w^4, 2*7 + 7^3 + 2*7^4 + O(7^21) + (4*7 + 4*7^2 + 6*7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + O(7^21))*w + (5*7^2 + 2*7^3 + 5*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w^2 + (6*7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + 6*7^21 + 6*7^22 + O(7^23))*w^3 + (7^4 + O(7^24))*w^4, 4*7^2 + 6*7^3 + 6*7^4 + 7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + O(7^22) + (5*7 + 2*7^2 + 5*7^3 + 5*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + O(7^21))*w + (4*7^2 + 4*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + 5*7^20 + 5*7^21 + O(7^22))*w^2 + (3*7^3 + 7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + 2*7^22 + O(7^23))*w^3 + (3*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + 4*7^20 + 4*7^21 + 4*7^22 + 4*7^23 + O(7^24))*w^4, 4 + 6*7 + 2*7^2 + 2*7^3 + 6*7^4 + 7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + O(7^20) + (6*7 + 2*7^2 + 2*7^3 + 4*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + O(7^21))*w + (7^2 + 7^3 + 4*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w^2 + (5*7^3 + O(7^23))*w^3 + (7^4 + O(7^24))*w^4, 4 + 4*7 + 4*7^3 + 4*7^4 + 7^5 + 3*7^7 + 4*7^8 + 7^9 + 3*7^11 + 4*7^12 + 7^13 + 3*7^15 + 4*7^16 + 7^17 + 3*7^19 + O(7^20) + (6*7 + 6*7^2 + 3*7^3 + 5*7^4 + 2*7^5 + 7^6 + 4*7^7 + 5*7^8 + 2*7^9 + 7^10 + 4*7^11 + 5*7^12 + 2*7^13 + 7^14 + 4*7^15 + 5*7^16 + 2*7^17 + 7^18 + 4*7^19 + 5*7^20 + O(7^21))*w + (6*7^2 + 5*7^3 + 7^4 + 3*7^6 + 4*7^7 + 7^8 + 3*7^10 + 4*7^11 + 7^12 + 3*7^14 + 4*7^15 + 7^16 + 3*7^18 + 4*7^19 + 7^20 + O(7^22))*w^2 + (3*7^3 + 6*7^4 + 5*7^6 + 3*7^7 + 6*7^8 + 5*7^10 + 3*7^11 + 6*7^12 + 5*7^14 + 3*7^15 + 6*7^16 + 5*7^18 + 3*7^19 + 6*7^20 + 5*7^22 + O(7^23))*w^3 + (6*7^4 + 7^5 + 3*7^6 + 6*7^8 + 7^9 + 3*7^10 + 6*7^12 + 7^13 + 3*7^14 + 6*7^16 + 7^17 + 3*7^18 + 6*7^20 + 7^21 + 3*7^22 + O(7^24))*w^4, 2 + 4*7 + 4*7^2 + 5*7^3 + 4*7^4 + 7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + O(7^20) + (5*7 + 7^2 + 7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + O(7^21))*w + (4*7^2 + 2*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + 4*7^20 + 4*7^21 + O(7^22))*w^2 + (3*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + 4*7^20 + 4*7^21 + 4*7^22 + O(7^23))*w^3 + (2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + 2*7^22 + 2*7^23 + O(7^24))*w^4, 4*7^-1 + 2 + 3*7 + 7^2 + 5*7^3 + 5*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + O(7^19) + (3 + 4*7 + 7^2 + O(7^20))*w + (3*7^2 + 7^3 + 2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + O(7^22))*w^2 + (6*7^2 + 2*7^3 + 2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + O(7^22))*w^3 + (5*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + 4*7^20 + 4*7^21 + 4*7^22 + O(7^23))*w^4))]
    w = VQs[(7, 3)][-1].base_ring().gen()
    random_dict[(7, 3)] = [Vs[(7, 3)]((0, 6*7 + 6*7^2 + 4*7^3 + 2*7^4 + O(7^21) + (7 + 7^2 + 7^4 + O(7^21))*w + (6*7^2 + 6*7^3 + O(7^22))*w^2 + (3*7^3 + 2*7^4 + O(7^23))*w^3 + (3*7^4 + O(7^24))*w^4, 6 + 6*7^2 + 3*7^4 + O(7^20) + (7^3 + 5*7^4 + O(7^23))*w + (7^2 + 7^3 + 4*7^4 + O(7^22))*w^2 + (2*7^3 + O(7^23))*w^3 + (5*7^4 + O(7^24))*w^4, 4 + 4*7^2 + 6*7^3 + O(7^20) + (7 + 6*7^2 + 7^3 + O(7^21))*w + (7^2 + 5*7^3 + O(7^22))*w^2 + (3*7^3 + O(7^23))*w^3, 3 + 6*7 + O(7^20) + (7 + 4*7^2 + O(7^21))*w + (5*7^2 + O(7^22))*w^2, 5 + O(7^20) + (3*7 + O(7^21))*w, 6 + O(7^20))), VQs[(7, 3)][-1]((6*7 + 6*7^2 + 4*7^3 + 2*7^4 + O(7^21) + (7 + 7^2 + 7^4 + O(7^21))*w + (6*7^2 + 6*7^3 + O(7^22))*w^2 + (3*7^3 + 2*7^4 + O(7^23))*w^3 + (3*7^4 + O(7^24))*w^4, 3 + 4*7 + 6*7^2 + 4*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20) + (3*7 + 6*7^2 + 3*7^3 + 5*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + O(7^21))*w + (7^2 + 4*7^3 + 7^4 + O(7^22))*w^2 + (3*7^3 + 2*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^3 + (7^4 + O(7^24))*w^4, 3 + 5*7 + 7^2 + 5*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20) + (4*7 + 4*7^2 + 3*7^3 + 3*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + 5*7^20 + O(7^21))*w + (2*7^2 + 2*7^3 + 5*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + 6*7^21 + O(7^22))*w^2 + (4*7^3 + 7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + 7^21 + 7^22 + O(7^23))*w^3 + (5*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + 6*7^21 + 6*7^22 + 6*7^23 + O(7^24))*w^4, 2 + 3*7 + 7^2 + 2*7^3 + O(7^20) + (5*7 + 6*7^2 + 2*7^3 + 6*7^4 + 7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + 5*7^20 + O(7^21))*w + (7^2 + 3*7^3 + 2*7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + 5*7^21 + O(7^22))*w^2 + (6*7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + 6*7^21 + 6*7^22 + O(7^23))*w^3 + (3*7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + 5*7^21 + 7^22 + 5*7^23 + O(7^24))*w^4, 2 + 2*7 + 2*7^2 + 6*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20) + (6*7 + 5*7^2 + 3*7^3 + 6*7^4 + 5*7^6 + 3*7^7 + 6*7^8 + 5*7^10 + 3*7^11 + 6*7^12 + 5*7^14 + 3*7^15 + 6*7^16 + 5*7^18 + 3*7^19 + 6*7^20 + O(7^21))*w + (3*7^2 + 5*7^4 + 2*7^6 + 6*7^7 + 4*7^8 + 2*7^10 + 6*7^11 + 4*7^12 + 2*7^14 + 6*7^15 + 4*7^16 + 2*7^18 + 6*7^19 + 4*7^20 + O(7^22))*w^2 + (3*7^3 + 5*7^4 + 6*7^5 + 3*7^6 + 2*7^7 + 5*7^8 + 6*7^9 + 3*7^10 + 2*7^11 + 5*7^12 + 6*7^13 + 3*7^14 + 2*7^15 + 5*7^16 + 6*7^17 + 3*7^18 + 2*7^19 + 5*7^20 + 6*7^21 + 3*7^22 + O(7^23))*w^3 + (2*7^4 + 6*7^5 + 4*7^6 + 2*7^8 + 6*7^9 + 4*7^10 + 2*7^12 + 6*7^13 + 4*7^14 + 2*7^16 + 6*7^17 + 4*7^18 + 2*7^20 + 6*7^21 + 4*7^22 + O(7^24))*w^4, 1 + 4*7 + 7^2 + 5*7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + O(7^20) + (3*7 + 4*7^2 + 3*7^3 + 2*7^4 + 6*7^5 + 2*7^6 + 6*7^7 + 2*7^8 + 6*7^9 + 2*7^10 + 6*7^11 + 2*7^12 + 6*7^13 + 2*7^14 + 6*7^15 + 2*7^16 + 6*7^17 + 2*7^18 + 6*7^19 + 2*7^20 + O(7^21))*w + (2*7^2 + 4*7^3 + 2*7^4 + 6*7^5 + 2*7^6 + 6*7^7 + 2*7^8 + 6*7^9 + 2*7^10 + 6*7^11 + 2*7^12 + 6*7^13 + 2*7^14 + 6*7^15 + 2*7^16 + 6*7^17 + 2*7^18 + 6*7^19 + 2*7^20 + 6*7^21 + O(7^22))*w^2 + (7^3 + 7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + 7^21 + 7^22 + O(7^23))*w^3 + (6*7^4 + 2*7^5 + 6*7^6 + 2*7^7 + 6*7^8 + 2*7^9 + 6*7^10 + 2*7^11 + 6*7^12 + 2*7^13 + 6*7^14 + 2*7^15 + 6*7^16 + 2*7^17 + 6*7^18 + 2*7^19 + 6*7^20 + 2*7^21 + 6*7^22 + 2*7^23 + O(7^24))*w^4, 1 + 2*7 + 7^2 + 5*7^3 + 5*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + O(7^20) + (6 + 3*7 + 7^2 + 2*7^3 + 2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + O(7^20))*w + (7 + 2*7^2 + 6*7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + O(7^21))*w^2 + (4*7^2 + 4*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + 4*7^20 + 4*7^21 + O(7^22))*w^3 + (4*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^4))]
    w = VQs[(7, 4)][-1].base_ring().gen()
    random_dict[(7, 4)] = [Vs[(7, 4)]((0, 2 + 7 + 5*7^2 + 7^3 + 2*7^4 + O(7^20) + (2*7 + 3*7^2 + 2*7^3 + 5*7^4 + O(7^21))*w + (6*7^3 + 3*7^4 + O(7^23))*w^2 + (5*7^3 + O(7^23))*w^3, 1 + 3*7 + 6*7^2 + 6*7^3 + O(7^20) + (6*7 + 5*7^4 + O(7^21))*w + (6*7^2 + 6*7^3 + O(7^22))*w^2 + (6*7^3 + 6*7^4 + O(7^23))*w^3 + (6*7^4 + O(7^24))*w^4, 3*7 + 7^2 + 2*7^3 + O(7^21) + (2*7^2 + 2*7^3 + O(7^22))*w + (4*7^2 + O(7^22))*w^2 + (5*7^3 + O(7^23))*w^3, 3*7 + 7^2 + O(7^21) + (3*7 + 4*7^2 + O(7^21))*w + (7^2 + O(7^22))*w^2, 3*7 + O(7^21) + (2*7 + O(7^21))*w, 6 + O(7^20))), VQs[(7, 4)][-1]((2 + 7 + 5*7^2 + 7^3 + 2*7^4 + O(7^20) + (2*7 + 3*7^2 + 2*7^3 + 5*7^4 + O(7^21))*w + (6*7^3 + 3*7^4 + O(7^23))*w^2 + (5*7^3 + O(7^23))*w^3, 3 + 4*7 + 6*7^3 + 2*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20) + (2*7 + 2*7^2 + 2*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + O(7^21))*w + (3*7^2 + 2*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w^2 + (4*7^3 + 6*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^3 + (3*7^4 + O(7^24))*w^4, 1 + 3*7 + 7^3 + 7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + O(7^20) + (2*7 + 4*7^2 + 4*7^3 + 6*7^4 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + O(7^21))*w + (3*7^2 + 2*7^3 + 7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + 7^21 + O(7^22))*w^2 + (3*7^3 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^3 + (4*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + 6*7^21 + 6*7^22 + 6*7^23 + O(7^24))*w^4, 2 + 5*7 + 4*7^2 + O(7^20) + (4*7 + 5*7^2 + 7^4 + O(7^21))*w + (5*7^2 + 6*7^3 + 7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + 5*7^21 + O(7^22))*w^2 + (6*7^3 + 4*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^3 + (5*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + 3*7^23 + O(7^24))*w^4, 6 + 2*7 + 3*7^2 + 5*7^3 + 6*7^4 + 3*7^5 + 2*7^6 + 5*7^7 + 6*7^8 + 3*7^9 + 2*7^10 + 5*7^11 + 6*7^12 + 3*7^13 + 2*7^14 + 5*7^15 + 6*7^16 + 3*7^17 + 2*7^18 + 5*7^19 + O(7^20) + (4*7^2 + 4*7^3 + 6*7^4 + 3*7^5 + 2*7^6 + 5*7^7 + 6*7^8 + 3*7^9 + 2*7^10 + 5*7^11 + 6*7^12 + 3*7^13 + 2*7^14 + 5*7^15 + 6*7^16 + 3*7^17 + 2*7^18 + 5*7^19 + 6*7^20 + 3*7^21 + O(7^22))*w + (2*7^2 + 5*7^3 + 7^4 + 3*7^5 + 6*7^7 + 7^8 + 3*7^9 + 6*7^11 + 7^12 + 3*7^13 + 6*7^15 + 7^16 + 3*7^17 + 6*7^19 + 7^20 + 3*7^21 + O(7^22))*w^2 + (5*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^3, 5 + 3*7 + 4*7^2 + 7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + O(7^20) + (5*7 + 5*7^2 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + O(7^21))*w + (4*7^2 + 3*7^3 + 4*7^5 + 4*7^7 + 4*7^9 + 4*7^11 + 4*7^13 + 4*7^15 + 4*7^17 + 4*7^19 + 4*7^21 + O(7^22))*w^2 + (3*7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + 6*7^21 + 6*7^22 + O(7^23))*w^3 + (3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + 3*7^23 + O(7^24))*w^4, 5*7^-1 + 6*7 + 4*7^2 + 4*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + O(7^19) + (5 + 2*7 + 7^2 + 5*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + O(7^20))*w + (5*7^2 + 7^3 + 7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + 7^21 + O(7^22))*w^2 + (2*7^2 + 6*7^3 + 6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + 6*7^21 + O(7^22))*w^3))]
    w = VQs[(7, 5)][-1].base_ring().gen()
    random_dict[(7, 5)] = [Vs[(7, 5)]((0, 3 + 6*7 + 5*7^2 + 4*7^3 + 5*7^4 + O(7^20) + (7 + 2*7^2 + 4*7^3 + 7^4 + O(7^21))*w + (2*7^2 + 5*7^4 + O(7^22))*w^2 + (2*7^3 + O(7^23))*w^3 + (6*7^4 + O(7^24))*w^4, 2 + 5*7 + 2*7^2 + 2*7^3 + 5*7^4 + O(7^20) + (7 + 3*7^3 + 5*7^4 + O(7^21))*w + (2*7^2 + 2*7^3 + 6*7^4 + O(7^22))*w^2 + (2*7^3 + 5*7^4 + O(7^23))*w^3 + (4*7^4 + O(7^24))*w^4, 2 + 2*7 + 2*7^3 + O(7^20) + (2*7 + 5*7^2 + 2*7^3 + O(7^21))*w + (6*7^2 + 5*7^3 + O(7^22))*w^2 + (7^3 + O(7^23))*w^3, 5 + 6*7^2 + O(7^20) + (3*7 + 4*7^2 + O(7^21))*w + (7^2 + O(7^22))*w^2, 3 + 2*7 + O(7^20) + (4*7 + O(7^21))*w, 4 + O(7^20))), VQs[(7, 5)][-1]((3 + 6*7 + 5*7^2 + 4*7^3 + 5*7^4 + O(7^20) + (7 + 2*7^2 + 4*7^3 + 7^4 + O(7^21))*w + (2*7^2 + 5*7^4 + O(7^22))*w^2 + (2*7^3 + O(7^23))*w^3 + (6*7^4 + O(7^24))*w^4, 3 + 6*7 + 7^2 + 2*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20) + (6*7^2 + 2*7^3 + 5*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w + (7^3 + 4*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + O(7^23))*w^2 + (6*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + 3*7^23 + O(7^24))*w^3 + (6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + 6*7^21 + 6*7^22 + 6*7^23 + O(7^24))*w^4, 6 + 3*7 + 5*7^2 + 3*7^3 + 6*7^4 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + O(7^20) + (5*7 + 6*7^2 + 5*7^3 + 5*7^4 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + O(7^21))*w + (6*7^2 + 6*7^4 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + 7^21 + O(7^22))*w^2 + (2*7^3 + 3*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + 5*7^20 + 5*7^21 + 5*7^22 + O(7^23))*w^3 + (6*7^4 + 6*7^5 + 6*7^6 + 6*7^7 + 6*7^8 + 6*7^9 + 6*7^10 + 6*7^11 + 6*7^12 + 6*7^13 + 6*7^14 + 6*7^15 + 6*7^16 + 6*7^17 + 6*7^18 + 6*7^19 + 6*7^20 + 6*7^21 + 6*7^22 + 6*7^23 + O(7^24))*w^4, 6 + 3*7 + 5*7^2 + 6*7^3 + 2*7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + O(7^20) + (2*7^2 + 7^3 + 7^4 + O(7^22))*w + (3*7^2 + 6*7^3 + 2*7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + 5*7^21 + O(7^22))*w^2 + (3*7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + 5*7^21 + 7^22 + 5*7^23 + O(7^24))*w^3 + (7^4 + O(7^24))*w^4, 1 + 7 + 4*7^2 + 3*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + O(7^20) + (6*7 + 2*7^2 + 7^3 + 7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + O(7^21))*w + (4*7^2 + 2*7^3 + 3*7^4 + 6*7^6 + 7^7 + 3*7^8 + 6*7^10 + 7^11 + 3*7^12 + 6*7^14 + 7^15 + 3*7^16 + 6*7^18 + 7^19 + 3*7^20 + O(7^22))*w^2 + (4*7^3 + 6*7^4 + 5*7^6 + 3*7^7 + 6*7^8 + 5*7^10 + 3*7^11 + 6*7^12 + 5*7^14 + 3*7^15 + 6*7^16 + 5*7^18 + 3*7^19 + 6*7^20 + 5*7^22 + O(7^23))*w^3 + (4*7^4 + 5*7^5 + 2*7^6 + 7^7 + 4*7^8 + 5*7^9 + 2*7^10 + 7^11 + 4*7^12 + 5*7^13 + 2*7^14 + 7^15 + 4*7^16 + 5*7^17 + 2*7^18 + 7^19 + 4*7^20 + 5*7^21 + 2*7^22 + 7^23 + O(7^24))*w^4, 4 + 4*7 + 5*7^2 + 4*7^3 + 3*7^4 + 4*7^6 + 4*7^8 + 4*7^10 + 4*7^12 + 4*7^14 + 4*7^16 + 4*7^18 + O(7^20) + (5*7 + 2*7^2 + 6*7^3 + 7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + O(7^21))*w + (2*7^2 + 6*7^3 + 5*7^4 + 2*7^5 + 6*7^6 + 2*7^7 + 6*7^8 + 2*7^9 + 6*7^10 + 2*7^11 + 6*7^12 + 2*7^13 + 6*7^14 + 2*7^15 + 6*7^16 + 2*7^17 + 6*7^18 + 2*7^19 + 6*7^20 + 2*7^21 + O(7^22))*w^2 + (7^3 + 4*7^5 + 4*7^7 + 4*7^9 + 4*7^11 + 4*7^13 + 4*7^15 + 4*7^17 + 4*7^19 + 4*7^21 + O(7^23))*w^3 + (2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + 2*7^22 + 2*7^23 + O(7^24))*w^4, 4*7^-1 + 2 + 2*7^2 + 5*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + O(7^19) + (6 + 7^3 + 7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + O(7^20))*w + (5*7 + 3*7^2 + 4*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + 4*7^20 + O(7^21))*w^2 + (5*7^2 + 5*7^3 + 5*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + 5*7^20 + 5*7^21 + O(7^22))*w^3 + (7^3 + O(7^23))*w^4))]
    w = VQs[(7, 6)][-1].base_ring().gen()
    random_dict[(7, 6)] = [Vs[(7, 6)]((0, 1 + 2*7 + 7^3 + 3*7^4 + O(7^20) + (3*7 + 3*7^2 + 2*7^4 + O(7^21))*w + (5*7^2 + 7^3 + 7^4 + O(7^22))*w^2 + (6*7^3 + 7^4 + O(7^23))*w^3 + (5*7^4 + O(7^24))*w^4, 4 + 3*7 + 5*7^2 + 7^3 + 7^4 + O(7^20) + (3*7 + 3*7^2 + 3*7^4 + O(7^21))*w + (2*7^3 + 6*7^4 + O(7^23))*w^2 + (5*7^3 + 4*7^4 + O(7^23))*w^3, 2*7 + 6*7^2 + 2*7^3 + O(7^21) + (4*7 + 3*7^2 + 5*7^3 + O(7^21))*w + (3*7^2 + 6*7^3 + O(7^22))*w^2 + (3*7^3 + O(7^23))*w^3, 4 + 3*7 + 5*7^2 + O(7^20) + (2*7 + 3*7^2 + O(7^21))*w + (7^2 + O(7^22))*w^2, 1 + 4*7 + O(7^20) + (3*7 + O(7^21))*w, 2 + O(7^20))), VQs[(7, 6)][-1]((1 + 2*7 + 7^3 + 3*7^4 + O(7^20) + (3*7 + 3*7^2 + 2*7^4 + O(7^21))*w + (5*7^2 + 7^3 + 7^4 + O(7^22))*w^2 + (6*7^3 + 7^4 + O(7^23))*w^3 + (5*7^4 + O(7^24))*w^4, 5 + 6*7^2 + 3*7^3 + 2*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20) + (4*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + 3*7^23 + O(7^24))*w + (7^2 + 6*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + O(7^22))*w^2 + (3*7^3 + 7^4 + O(7^23))*w^3 + (7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + 3*7^20 + 3*7^21 + 3*7^22 + 3*7^23 + O(7^24))*w^4, 4 + 7 + 5*7^2 + 3*7^3 + 3*7^4 + 3*7^5 + 3*7^6 + 3*7^7 + 3*7^8 + 3*7^9 + 3*7^10 + 3*7^11 + 3*7^12 + 3*7^13 + 3*7^14 + 3*7^15 + 3*7^16 + 3*7^17 + 3*7^18 + 3*7^19 + O(7^20) + (5*7 + 4*7^2 + 7^3 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + O(7^21))*w + (3*7^2 + 7^3 + 3*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + 5*7^20 + 5*7^21 + O(7^22))*w^2 + (3*7^3 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + 2*7^22 + O(7^23))*w^3 + (2*7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + 7^21 + 7^22 + 7^23 + O(7^24))*w^4, 2 + 4*7 + 6*7^2 + O(7^20) + (7 + 5*7^2 + 2*7^3 + O(7^21))*w + (4*7^2 + 2*7^3 + 6*7^4 + 7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + 5*7^20 + 7^21 + O(7^22))*w^2 + (5*7^3 + 2*7^4 + 5*7^5 + 7^6 + 5*7^7 + 7^8 + 5*7^9 + 7^10 + 5*7^11 + 7^12 + 5*7^13 + 7^14 + 5*7^15 + 7^16 + 5*7^17 + 7^18 + 5*7^19 + 7^20 + 5*7^21 + 7^22 + O(7^23))*w^3, 4 + 7^2 + 6*7^3 + 4*7^4 + 2*7^6 + 6*7^7 + 4*7^8 + 2*7^10 + 6*7^11 + 4*7^12 + 2*7^14 + 6*7^15 + 4*7^16 + 2*7^18 + 6*7^19 + O(7^20) + (2*7 + 6*7^2 + 4*7^4 + 2*7^5 + 5*7^6 + 6*7^7 + 3*7^8 + 2*7^9 + 5*7^10 + 6*7^11 + 3*7^12 + 2*7^13 + 5*7^14 + 6*7^15 + 3*7^16 + 2*7^17 + 5*7^18 + 6*7^19 + 3*7^20 + O(7^21))*w + (5*7^2 + 2*7^3 + 5*7^4 + 3*7^5 + 6*7^6 + 5*7^8 + 3*7^9 + 6*7^10 + 5*7^12 + 3*7^13 + 6*7^14 + 5*7^16 + 3*7^17 + 6*7^18 + 5*7^20 + 3*7^21 + O(7^22))*w^2 + (5*7^3 + 7^4 + 3*7^6 + 4*7^7 + 7^8 + 3*7^10 + 4*7^11 + 7^12 + 3*7^14 + 4*7^15 + 7^16 + 3*7^18 + 4*7^19 + 7^20 + 3*7^22 + O(7^23))*w^3 + (7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + 7^21 + 7^22 + 7^23 + O(7^24))*w^4, 5*7 + 2*7^2 + 5*7^3 + 5*7^4 + 5*7^5 + 5*7^6 + 5*7^7 + 5*7^8 + 5*7^9 + 5*7^10 + 5*7^11 + 5*7^12 + 5*7^13 + 5*7^14 + 5*7^15 + 5*7^16 + 5*7^17 + 5*7^18 + 5*7^19 + 5*7^20 + O(7^21) + (2*7 + 3*7^3 + 4*7^4 + 4*7^5 + 4*7^6 + 4*7^7 + 4*7^8 + 4*7^9 + 4*7^10 + 4*7^11 + 4*7^12 + 4*7^13 + 4*7^14 + 4*7^15 + 4*7^16 + 4*7^17 + 4*7^18 + 4*7^19 + 4*7^20 + O(7^21))*w + (7^2 + 5*7^3 + 4*7^4 + 7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + 5*7^20 + 7^21 + O(7^22))*w^2 + (6*7^3 + 4*7^4 + 7^5 + 5*7^6 + 7^7 + 5*7^8 + 7^9 + 5*7^10 + 7^11 + 5*7^12 + 7^13 + 5*7^14 + 7^15 + 5*7^16 + 7^17 + 5*7^18 + 7^19 + 5*7^20 + 7^21 + 5*7^22 + O(7^23))*w^3, 6*7^-1 + 6 + 3*7 + O(7^19) + (4 + 2*7 + 4*7^2 + 7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + O(7^20))*w + (2*7 + 3*7^2 + 7^3 + 2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + O(7^21))*w^2 + (7^2 + 2*7^3 + 2*7^4 + 2*7^5 + 2*7^6 + 2*7^7 + 2*7^8 + 2*7^9 + 2*7^10 + 2*7^11 + 2*7^12 + 2*7^13 + 2*7^14 + 2*7^15 + 2*7^16 + 2*7^17 + 2*7^18 + 2*7^19 + 2*7^20 + 2*7^21 + O(7^22))*w^3 + (2*7^3 + 7^4 + 7^5 + 7^6 + 7^7 + 7^8 + 7^9 + 7^10 + 7^11 + 7^12 + 7^13 + 7^14 + 7^15 + 7^16 + 7^17 + 7^18 + 7^19 + 7^20 + 7^21 + 7^22 + O(7^23))*w^4))]
    w = VQs[(13, 0)][-1].base_ring().gen()
    random_dict[(13, 0)] = [Vs[(13, 0)]((0, 3 + 2*13 + 7*13^2 + 11*13^3 + O(13^20) + (4*13 + 2*13^2 + 12*13^5 + O(13^21))*w + (7*13^3 + 11*13^4 + 6*13^5 + O(13^23))*w^2 + (7*13^3 + 10*13^4 + 3*13^5 + O(13^23))*w^3 + (13^4 + O(13^24))*w^4 + (2*13^5 + O(13^25))*w^5, 9 + 7*13 + 12*13^2 + 4*13^3 + 8*13^4 + O(13^20) + (10*13 + 9*13^3 + 4*13^4 + O(13^21))*w + (6*13^2 + 11*13^3 + 8*13^4 + O(13^22))*w^2 + (12*13^3 + 12*13^4 + O(13^23))*w^3 + (10*13^4 + O(13^24))*w^4, 3 + 6*13 + 12*13^2 + 6*13^3 + O(13^20) + (13 + 4*13^2 + 12*13^3 + O(13^21))*w + (3*13^2 + 8*13^3 + O(13^22))*w^2 + (11*13^3 + O(13^23))*w^3, 6 + 8*13 + O(13^20) + (9*13 + 12*13^2 + O(13^21))*w + (11*13^2 + O(13^22))*w^2, 2*13 + O(13^21) + (6*13 + O(13^21))*w, 11 + O(13^20))), VQs[(13, 0)][-1]((3 + 2*13 + 7*13^2 + 11*13^3 + O(13^20) + (4*13 + 2*13^2 + 12*13^5 + O(13^21))*w + (7*13^3 + 11*13^4 + 6*13^5 + O(13^23))*w^2 + (7*13^3 + 10*13^4 + 3*13^5 + O(13^23))*w^3 + (13^4 + O(13^24))*w^4 + (2*13^5 + O(13^25))*w^5, 3 + 9*13 + 2*13^2 + 3*13^3 + 10*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (3*13 + 12*13^2 + 10*13^3 + 8*13^4 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (3*13^2 + 2*13^3 + 5*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (9*13^3 + 7*13^4 + 11*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (11*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4 + (12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + 12*13^24 + O(13^25))*w^5, 10 + 12*13^2 + 3*13^3 + 11*13^4 + 13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + O(13^20) + (9*13 + 5*13^2 + 10*13^3 + 8*13^4 + 12*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + O(13^21))*w + (11*13^2 + 6*13^3 + 8*13^4 + 11*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + 10*13^21 + O(13^22))*w^2 + (13^3 + 2*13^4 + O(13^23))*w^3 + (6*13^4 + 10*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + 10*13^21 + 10*13^22 + 10*13^23 + O(13^24))*w^4 + (9*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + 8*13^23 + 8*13^24 + O(13^25))*w^5, 12 + 10*13^2 + 10*13^3 + 13^4 + O(13^20) + (13 + 11*13^2 + 2*13^3 + 7*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (6*13^2 + 5*13^3 + 8*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (4*13^3 + 9*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + O(13^23))*w^3 + (9*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4, 7 + 5*13 + 11*13^2 + 11*13^3 + 4*13^4 + 7*13^5 + 12*13^6 + 9*13^7 + 4*13^8 + 7*13^9 + 12*13^10 + 9*13^11 + 4*13^12 + 7*13^13 + 12*13^14 + 9*13^15 + 4*13^16 + 7*13^17 + 12*13^18 + 9*13^19 + O(13^20) + (6*13 + 8*13^2 + 6*13^3 + 8*13^4 + 2*13^5 + 8*13^6 + 5*13^7 + 3*13^9 + 8*13^10 + 5*13^11 + 3*13^13 + 8*13^14 + 5*13^15 + 3*13^17 + 8*13^18 + 5*13^19 + O(13^21))*w + (2*13^2 + 8*13^3 + 10*13^4 + 2*13^5 + 8*13^6 + 5*13^7 + 3*13^9 + 8*13^10 + 5*13^11 + 3*13^13 + 8*13^14 + 5*13^15 + 3*13^17 + 8*13^18 + 5*13^19 + 3*13^21 + O(13^22))*w^2 + (3*13^3 + 13^4 + 5*13^5 + 10*13^6 + 7*13^7 + 2*13^8 + 5*13^9 + 10*13^10 + 7*13^11 + 2*13^12 + 5*13^13 + 10*13^14 + 7*13^15 + 2*13^16 + 5*13^17 + 10*13^18 + 7*13^19 + 2*13^20 + 5*13^21 + 10*13^22 + O(13^23))*w^3 + (3*13^4 + 8*13^5 + 5*13^6 + 3*13^8 + 8*13^9 + 5*13^10 + 3*13^12 + 8*13^13 + 5*13^14 + 3*13^16 + 8*13^17 + 5*13^18 + 3*13^20 + 8*13^21 + 5*13^22 + O(13^24))*w^4 + (6*13^5 + 3*13^6 + 11*13^7 + 6*13^9 + 3*13^10 + 11*13^11 + 6*13^13 + 3*13^14 + 11*13^15 + 6*13^17 + 3*13^18 + 11*13^19 + 6*13^21 + 3*13^22 + 11*13^23 + O(13^25))*w^5, 9 + 10*13 + 7*13^2 + 12*13^3 + 7*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20) + (13 + 6*13^2 + 10*13^3 + 13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + O(13^21))*w + (3*13^2 + 10*13^3 + 5*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (12*13^3 + 11*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (10*13^4 + 10*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + 10*13^21 + 10*13^22 + 10*13^23 + O(13^24))*w^4, 8 + 3*13 + 9*13^2 + 8*13^3 + 7*13^4 + 9*13^5 + 7*13^6 + 9*13^7 + 7*13^8 + 9*13^9 + 7*13^10 + 9*13^11 + 7*13^12 + 9*13^13 + 7*13^14 + 9*13^15 + 7*13^16 + 9*13^17 + 7*13^18 + 9*13^19 + O(13^20) + (2*13 + 13^2 + 5*13^3 + 13^4 + 11*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + O(13^21))*w + (6*13^2 + 7*13^3 + 3*13^4 + 7*13^5 + 13^6 + 7*13^7 + 13^8 + 7*13^9 + 13^10 + 7*13^11 + 13^12 + 7*13^13 + 13^14 + 7*13^15 + 13^16 + 7*13^17 + 13^18 + 7*13^19 + 13^20 + 7*13^21 + O(13^22))*w^2 + (7*13^3 + 7*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + O(13^23))*w^3 + (9*13^4 + 12*13^5 + 8*13^6 + 12*13^7 + 8*13^8 + 12*13^9 + 8*13^10 + 12*13^11 + 8*13^12 + 12*13^13 + 8*13^14 + 12*13^15 + 8*13^16 + 12*13^17 + 8*13^18 + 12*13^19 + 8*13^20 + 12*13^21 + 8*13^22 + 12*13^23 + O(13^24))*w^4 + (5*13^5 + 12*13^6 + 4*13^7 + 12*13^8 + 4*13^9 + 12*13^10 + 4*13^11 + 12*13^12 + 4*13^13 + 12*13^14 + 4*13^15 + 12*13^16 + 4*13^17 + 12*13^18 + 4*13^19 + 12*13^20 + 4*13^21 + 12*13^22 + 4*13^23 + 12*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 1)][-1].base_ring().gen()
    random_dict[(13, 1)] = [Vs[(13, 1)]((0, 2*13 + 7*13^2 + 3*13^3 + 9*13^4 + 10*13^5 + O(13^21) + (4*13^2 + 10*13^3 + 9*13^4 + O(13^22))*w + (4*13^2 + 11*13^3 + 2*13^4 + 4*13^5 + O(13^22))*w^2 + (9*13^3 + 5*13^4 + 4*13^5 + O(13^23))*w^3 + (13^4 + 8*13^5 + O(13^24))*w^4 + (3*13^5 + O(13^25))*w^5, 4 + 6*13 + 9*13^2 + 6*13^3 + 13^4 + O(13^20) + (6*13 + 2*13^2 + 3*13^4 + O(13^21))*w + (13^2 + 9*13^3 + 6*13^4 + O(13^22))*w^2 + (12*13^3 + 12*13^4 + O(13^23))*w^3 + (3*13^4 + O(13^24))*w^4, 11 + 3*13 + 9*13^2 + 2*13^3 + O(13^20) + (2*13 + 7*13^2 + O(13^21))*w + (2*13^2 + 2*13^3 + O(13^22))*w^2 + (6*13^3 + O(13^23))*w^3, 2 + 2*13 + 9*13^2 + O(13^20) + (10*13^2 + O(13^22))*w, 11 + 3*13 + O(13^20) + (2*13 + O(13^21))*w, 4 + O(13^20))), VQs[(13, 1)][-1]((2*13 + 7*13^2 + 3*13^3 + 9*13^4 + 10*13^5 + O(13^21) + (4*13^2 + 10*13^3 + 9*13^4 + O(13^22))*w + (4*13^2 + 11*13^3 + 2*13^4 + 4*13^5 + O(13^22))*w^2 + (9*13^3 + 5*13^4 + 4*13^5 + O(13^23))*w^3 + (13^4 + 8*13^5 + O(13^24))*w^4 + (3*13^5 + O(13^25))*w^5, 2 + 2*13 + 13^2 + 8*13^3 + 2*13^4 + 13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (3*13 + 12*13^2 + 7*13^3 + 9*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + O(13^21))*w + (5*13^2 + 5*13^3 + 8*13^4 + 4*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (8*13^3 + 3*13^4 + 11*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (13^4 + 9*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + O(13^24))*w^4 + (5*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 6 + 11*13 + 3*13^2 + 3*13^4 + 8*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (2*13 + 6*13^2 + 10*13^3 + 8*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + O(13^21))*w + (3*13^2 + 8*13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + O(13^22))*w^2 + (4*13^3 + 3*13^4 + O(13^23))*w^3 + (3*13^4 + 13^5 + O(13^24))*w^4 + (7*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 9 + 6*13 + 6*13^2 + 10*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20) + (7*13 + 12*13^2 + 12*13^3 + 3*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + O(13^21))*w + (9*13^2 + 7*13^3 + 13^4 + O(13^22))*w^2 + (3*13^4 + O(13^24))*w^3 + (4*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + 3*13^22 + 3*13^23 + O(13^24))*w^4, 4 + 11*13 + 7*13^2 + 2*13^3 + 3*13^4 + 2*13^5 + 5*13^6 + 10*13^7 + 7*13^8 + 2*13^9 + 5*13^10 + 10*13^11 + 7*13^12 + 2*13^13 + 5*13^14 + 10*13^15 + 7*13^16 + 2*13^17 + 5*13^18 + 10*13^19 + O(13^20) + (8*13 + 13^2 + 8*13^3 + 9*13^4 + 4*13^5 + 7*13^6 + 12*13^7 + 9*13^8 + 4*13^9 + 7*13^10 + 12*13^11 + 9*13^12 + 4*13^13 + 7*13^14 + 12*13^15 + 9*13^16 + 4*13^17 + 7*13^18 + 12*13^19 + 9*13^20 + O(13^21))*w + (4*13^2 + 10*13^3 + 10*13^4 + 9*13^5 + 4*13^6 + 7*13^7 + 12*13^8 + 9*13^9 + 4*13^10 + 7*13^11 + 12*13^12 + 9*13^13 + 4*13^14 + 7*13^15 + 12*13^16 + 9*13^17 + 4*13^18 + 7*13^19 + 12*13^20 + 9*13^21 + O(13^22))*w^2 + (3*13^3 + 11*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (3*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4 + (9*13^5 + 11*13^6 + 3*13^7 + 13^8 + 9*13^9 + 11*13^10 + 3*13^11 + 13^12 + 9*13^13 + 11*13^14 + 3*13^15 + 13^16 + 9*13^17 + 11*13^18 + 3*13^19 + 13^20 + 9*13^21 + 11*13^22 + 3*13^23 + 13^24 + O(13^25))*w^5, 5*13 + 9*13^2 + 12*13^3 + 13^5 + 13^6 + 13^7 + 13^8 + 13^9 + 13^10 + 13^11 + 13^12 + 13^13 + 13^14 + 13^15 + 13^16 + 13^17 + 13^18 + 13^19 + 13^20 + O(13^21) + (5*13 + 10*13^2 + 6*13^3 + 9*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + O(13^21))*w + (13^2 + 10*13^3 + 3*13^4 + 4*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + O(13^22))*w^2 + (12*13^3 + 11*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (3*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + 3*13^22 + 3*13^23 + O(13^24))*w^4, 6 + 10*13 + 6*13^2 + 5*13^3 + 13^4 + 2*13^5 + 11*13^6 + 13^7 + 11*13^8 + 13^9 + 11*13^10 + 13^11 + 11*13^12 + 13^13 + 11*13^14 + 13^15 + 11*13^16 + 13^17 + 11*13^18 + 13^19 + O(13^20) + (5*13 + 2*13^2 + 4*13^3 + 3*13^4 + 13^5 + 3*13^6 + 13^7 + 3*13^8 + 13^9 + 3*13^10 + 13^11 + 3*13^12 + 13^13 + 3*13^14 + 13^15 + 3*13^16 + 13^17 + 3*13^18 + 13^19 + 3*13^20 + O(13^21))*w + (13^2 + 2*13^3 + 7*13^4 + 11*13^5 + 5*13^6 + 11*13^7 + 5*13^8 + 11*13^9 + 5*13^10 + 11*13^11 + 5*13^12 + 11*13^13 + 5*13^14 + 11*13^15 + 5*13^16 + 11*13^17 + 5*13^18 + 11*13^19 + 5*13^20 + 11*13^21 + O(13^22))*w^2 + (2*13^3 + 3*13^4 + 11*13^5 + 13^6 + 11*13^7 + 13^8 + 11*13^9 + 13^10 + 11*13^11 + 13^12 + 11*13^13 + 13^14 + 11*13^15 + 13^16 + 11*13^17 + 13^18 + 11*13^19 + 13^20 + 11*13^21 + 13^22 + O(13^23))*w^3 + (9*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4 + (13^5 + 12*13^6 + 12*13^8 + 12*13^10 + 12*13^12 + 12*13^14 + 12*13^16 + 12*13^18 + 12*13^20 + 12*13^22 + 12*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 2)][-1].base_ring().gen()
    random_dict[(13, 2)] = [Vs[(13, 2)]((0, 12 + 6*13 + 11*13^2 + 11*13^3 + 4*13^5 + O(13^20) + (8*13 + 5*13^2 + 2*13^3 + 13^5 + O(13^21))*w + (6*13^2 + 7*13^3 + 3*13^4 + 6*13^5 + O(13^22))*w^2 + (2*13^3 + 9*13^4 + 6*13^5 + O(13^23))*w^3 + (11*13^4 + 6*13^5 + O(13^24))*w^4 + (5*13^5 + O(13^25))*w^5, 6 + 7*13 + 10*13^2 + 12*13^3 + 7*13^4 + O(13^20) + (10*13 + 10*13^2 + 4*13^3 + 5*13^4 + O(13^21))*w + (2*13^2 + 13^3 + 2*13^4 + O(13^22))*w^2 + (12*13^3 + 10*13^4 + O(13^23))*w^3 + (9*13^4 + O(13^24))*w^4, 4 + 8*13 + 13^2 + 12*13^3 + O(13^20) + (8*13 + 3*13^2 + 4*13^3 + O(13^21))*w + (8*13^2 + 3*13^3 + O(13^22))*w^2 + (9*13^3 + O(13^23))*w^3, 11 + 3*13 + 3*13^2 + O(13^20) + (6*13 + 7*13^2 + O(13^21))*w + (10*13^2 + O(13^22))*w^2, 1 + 5*13 + O(13^20) + (13 + O(13^21))*w, 5 + O(13^20))), VQs[(13, 2)][-1]((12 + 6*13 + 11*13^2 + 11*13^3 + 4*13^5 + O(13^20) + (8*13 + 5*13^2 + 2*13^3 + 13^5 + O(13^21))*w + (6*13^2 + 7*13^3 + 3*13^4 + 6*13^5 + O(13^22))*w^2 + (2*13^3 + 9*13^4 + 6*13^5 + O(13^23))*w^3 + (11*13^4 + 6*13^5 + O(13^24))*w^4 + (5*13^5 + O(13^25))*w^5, 10 + 6*13 + 12*13^2 + 6*13^3 + 3*13^4 + 11*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20) + (13 + 9*13^2 + 7*13^3 + 2*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (11*13^2 + 9*13^3 + 5*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (5*13^3 + 7*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + O(13^23))*w^3 + (12*13^4 + 9*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + O(13^24))*w^4 + (4*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 9 + 6*13 + 13^2 + 6*13^3 + 9*13^4 + 4*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20) + (12*13 + 11*13^2 + 5*13^3 + 10*13^4 + 10*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + O(13^21))*w + (7*13^2 + 10*13^3 + 13^4 + 3*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + O(13^22))*w^2 + (6*13^3 + 11*13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + O(13^23))*w^3 + (6*13^4 + 9*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + 8*13^23 + O(13^24))*w^4 + (3*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + 2*13^23 + 2*13^24 + O(13^25))*w^5, 12 + 13 + 9*13^2 + 3*13^3 + 11*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20) + (6*13^2 + 2*13^3 + 13^4 + O(13^22))*w + (12*13^2 + 13^3 + 10*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + O(13^22))*w^2 + (5*13^3 + 2*13^4 + O(13^23))*w^3 + (12*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + 9*13^23 + O(13^24))*w^4, 3 + 4*13 + 10*13^3 + 6*13^4 + 5*13^5 + 3*13^7 + 8*13^8 + 5*13^9 + 3*13^11 + 8*13^12 + 5*13^13 + 3*13^15 + 8*13^16 + 5*13^17 + 3*13^19 + O(13^20) + (10*13 + 13^3 + 3*13^5 + 8*13^6 + 5*13^7 + 3*13^9 + 8*13^10 + 5*13^11 + 3*13^13 + 8*13^14 + 5*13^15 + 3*13^17 + 8*13^18 + 5*13^19 + O(13^21))*w + (7*13^2 + 10*13^3 + 11*13^5 + 6*13^7 + 3*13^8 + 11*13^9 + 6*13^11 + 3*13^12 + 11*13^13 + 6*13^15 + 3*13^16 + 11*13^17 + 6*13^19 + 3*13^20 + 11*13^21 + O(13^22))*w^2 + (9*13^3 + 4*13^4 + 12*13^5 + 9*13^6 + 4*13^7 + 7*13^8 + 12*13^9 + 9*13^10 + 4*13^11 + 7*13^12 + 12*13^13 + 9*13^14 + 4*13^15 + 7*13^16 + 12*13^17 + 9*13^18 + 4*13^19 + 7*13^20 + 12*13^21 + 9*13^22 + O(13^23))*w^3 + (7*13^4 + 4*13^5 + 7*13^6 + 12*13^7 + 9*13^8 + 4*13^9 + 7*13^10 + 12*13^11 + 9*13^12 + 4*13^13 + 7*13^14 + 12*13^15 + 9*13^16 + 4*13^17 + 7*13^18 + 12*13^19 + 9*13^20 + 4*13^21 + 7*13^22 + 12*13^23 + O(13^24))*w^4 + (2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + 2*13^23 + 2*13^24 + O(13^25))*w^5, 12 + 3*13 + 12*13^3 + 6*13^4 + 7*13^5 + 7*13^6 + 7*13^7 + 7*13^8 + 7*13^9 + 7*13^10 + 7*13^11 + 7*13^12 + 7*13^13 + 7*13^14 + 7*13^15 + 7*13^16 + 7*13^17 + 7*13^18 + 7*13^19 + O(13^20) + (12*13 + 11*13^2 + 6*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (4*13^2 + 13^3 + 3*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + O(13^22))*w^2 + (12*13^3 + 9*13^4 + 10*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + 10*13^21 + 10*13^22 + O(13^23))*w^3 + (9*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + 9*13^23 + O(13^24))*w^4, 10 + 5*13 + 5*13^2 + 9*13^3 + 13^4 + 8*13^5 + 8*13^7 + 8*13^9 + 8*13^11 + 8*13^13 + 8*13^15 + 8*13^17 + 8*13^19 + O(13^20) + (4*13 + 7*13^2 + 9*13^3 + 2*13^4 + 6*13^5 + 2*13^6 + 6*13^7 + 2*13^8 + 6*13^9 + 2*13^10 + 6*13^11 + 2*13^12 + 6*13^13 + 2*13^14 + 6*13^15 + 2*13^16 + 6*13^17 + 2*13^18 + 6*13^19 + 2*13^20 + O(13^21))*w + (5*13^2 + 6*13^3 + 11*13^4 + 7*13^5 + 9*13^6 + 7*13^7 + 9*13^8 + 7*13^9 + 9*13^10 + 7*13^11 + 9*13^12 + 7*13^13 + 9*13^14 + 7*13^15 + 9*13^16 + 7*13^17 + 9*13^18 + 7*13^19 + 9*13^20 + 7*13^21 + O(13^22))*w^2 + (10*13^3 + 8*13^4 + 10*13^5 + 6*13^6 + 10*13^7 + 6*13^8 + 10*13^9 + 6*13^10 + 10*13^11 + 6*13^12 + 10*13^13 + 6*13^14 + 10*13^15 + 6*13^16 + 10*13^17 + 6*13^18 + 10*13^19 + 6*13^20 + 10*13^21 + 6*13^22 + O(13^23))*w^3 + (8*13^4 + 11*13^5 + 5*13^6 + 11*13^7 + 5*13^8 + 11*13^9 + 5*13^10 + 11*13^11 + 5*13^12 + 11*13^13 + 5*13^14 + 11*13^15 + 5*13^16 + 11*13^17 + 5*13^18 + 11*13^19 + 5*13^20 + 11*13^21 + 5*13^22 + 11*13^23 + O(13^24))*w^4 + (6*13^5 + 11*13^6 + 5*13^7 + 11*13^8 + 5*13^9 + 11*13^10 + 5*13^11 + 11*13^12 + 5*13^13 + 11*13^14 + 5*13^15 + 11*13^16 + 5*13^17 + 11*13^18 + 5*13^19 + 11*13^20 + 5*13^21 + 11*13^22 + 5*13^23 + 11*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 3)][-1].base_ring().gen()
    random_dict[(13, 3)] = [Vs[(13, 3)]((0, 4 + 7*13 + 3*13^2 + 12*13^3 + 13^4 + 13^5 + O(13^20) + (4*13 + 11*13^2 + 5*13^4 + 7*13^5 + O(13^21))*w + (11*13^2 + 8*13^3 + 8*13^4 + 5*13^5 + O(13^22))*w^2 + (8*13^3 + 6*13^4 + 10*13^5 + O(13^23))*w^3 + (11*13^4 + 6*13^5 + O(13^24))*w^4 + (3*13^5 + O(13^25))*w^5, 3 + 5*13 + 11*13^2 + 11*13^3 + O(13^20) + (9*13 + 9*13^2 + 2*13^3 + 11*13^4 + O(13^21))*w + (5*13^2 + 12*13^3 + 2*13^4 + O(13^22))*w^2 + (11*13^3 + 12*13^4 + O(13^23))*w^3 + (6*13^4 + O(13^24))*w^4, 12 + 13 + 12*13^2 + 13^3 + O(13^20) + (8*13^2 + 7*13^3 + O(13^22))*w + (11*13^2 + 5*13^3 + O(13^22))*w^2 + (7*13^3 + O(13^23))*w^3, 3 + 6*13 + 11*13^2 + O(13^20) + (2*13^2 + O(13^22))*w + (9*13^2 + O(13^22))*w^2, 2*13 + O(13^21) + (12*13 + O(13^21))*w, 5 + O(13^20))), VQs[(13, 3)][-1]((4 + 7*13 + 3*13^2 + 12*13^3 + 13^4 + 13^5 + O(13^20) + (4*13 + 11*13^2 + 5*13^4 + 7*13^5 + O(13^21))*w + (11*13^2 + 8*13^3 + 8*13^4 + 5*13^5 + O(13^22))*w^2 + (8*13^3 + 6*13^4 + 10*13^5 + O(13^23))*w^3 + (11*13^4 + 6*13^5 + O(13^24))*w^4 + (3*13^5 + O(13^25))*w^5, 6 + 5*13 + 10*13^2 + 12*13^3 + 5*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20) + (9*13 + 5*13^2 + 7*13^3 + 9*13^4 + 9*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + O(13^21))*w + (10*13^2 + 13^3 + 10*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (8*13^3 + 9*13^4 + 13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + O(13^23))*w^3 + (4*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4 + (5*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 1 + 10*13 + 9*13^2 + 9*13^3 + 10*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20) + (7*13 + 10*13^2 + 7*13^3 + 10*13^4 + O(13^21))*w + (3*13^2 + 10*13^3 + 8*13^4 + 11*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + 10*13^21 + O(13^22))*w^2 + (9*13^3 + 5*13^4 + 3*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + O(13^23))*w^3 + (13^4 + 3*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + 2*13^23 + O(13^24))*w^4 + (7*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 2 + 5*13 + 9*13^2 + 8*13^3 + 6*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (12*13 + 11*13^2 + 9*13^3 + 5*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + O(13^21))*w + (11*13^2 + 6*13^3 + O(13^22))*w^2 + (9*13^3 + 12*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + O(13^23))*w^3 + (8*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4, 8 + 4*13 + 10*13^2 + 12*13^3 + 2*13^4 + 11*13^5 + 6*13^7 + 3*13^8 + 11*13^9 + 6*13^11 + 3*13^12 + 11*13^13 + 6*13^15 + 3*13^16 + 11*13^17 + 6*13^19 + O(13^20) + (4*13 + 12*13^2 + 8*13^3 + 8*13^4 + 3*13^5 + 13^6 + 9*13^7 + 11*13^8 + 3*13^9 + 13^10 + 9*13^11 + 11*13^12 + 3*13^13 + 13^14 + 9*13^15 + 11*13^16 + 3*13^17 + 13^18 + 9*13^19 + 11*13^20 + O(13^21))*w + (4*13^2 + 13^3 + 11*13^4 + 2*13^5 + 8*13^6 + 5*13^7 + 3*13^9 + 8*13^10 + 5*13^11 + 3*13^13 + 8*13^14 + 5*13^15 + 3*13^17 + 8*13^18 + 5*13^19 + 3*13^21 + O(13^22))*w^2 + (9*13^3 + 13^4 + 3*13^5 + 11*13^6 + 6*13^8 + 3*13^9 + 11*13^10 + 6*13^12 + 3*13^13 + 11*13^14 + 6*13^16 + 3*13^17 + 11*13^18 + 6*13^20 + 3*13^21 + 11*13^22 + O(13^23))*w^3 + (7*13^4 + 4*13^5 + 7*13^6 + 12*13^7 + 9*13^8 + 4*13^9 + 7*13^10 + 12*13^11 + 9*13^12 + 4*13^13 + 7*13^14 + 12*13^15 + 9*13^16 + 4*13^17 + 7*13^18 + 12*13^19 + 9*13^20 + 4*13^21 + 7*13^22 + 12*13^23 + O(13^24))*w^4 + (9*13^5 + 11*13^6 + 3*13^7 + 13^8 + 9*13^9 + 11*13^10 + 3*13^11 + 13^12 + 9*13^13 + 11*13^14 + 3*13^15 + 13^16 + 9*13^17 + 11*13^18 + 3*13^19 + 13^20 + 9*13^21 + 11*13^22 + 3*13^23 + 13^24 + O(13^25))*w^5, 4 + 2*13 + 9*13^2 + 3*13^3 + 4*13^4 + 4*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20) + (3*13 + 8*13^2 + 10*13^3 + 8*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + O(13^21))*w + (12*13^2 + 7*13^3 + 10*13^4 + 10*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + 10*13^21 + O(13^22))*w^2 + (11*13^3 + 10*13^4 + 11*13^5 + 11*13^6 + 11*13^7 + 11*13^8 + 11*13^9 + 11*13^10 + 11*13^11 + 11*13^12 + 11*13^13 + 11*13^14 + 11*13^15 + 11*13^16 + 11*13^17 + 11*13^18 + 11*13^19 + 11*13^20 + 11*13^21 + 11*13^22 + O(13^23))*w^3 + (6*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4, 12 + 5*13 + 2*13^2 + 10*13^3 + 11*13^4 + 5*13^5 + 11*13^6 + 5*13^7 + 11*13^8 + 5*13^9 + 11*13^10 + 5*13^11 + 11*13^12 + 5*13^13 + 11*13^14 + 5*13^15 + 11*13^16 + 5*13^17 + 11*13^18 + 5*13^19 + O(13^20) + (3*13 + 10*13^2 + 11*13^3 + 5*13^4 + 9*13^5 + 3*13^6 + 9*13^7 + 3*13^8 + 9*13^9 + 3*13^10 + 9*13^11 + 3*13^12 + 9*13^13 + 3*13^14 + 9*13^15 + 3*13^16 + 9*13^17 + 3*13^18 + 9*13^19 + 3*13^20 + O(13^21))*w + (4*13^2 + 11*13^3 + 7*13^4 + 2*13^5 + 6*13^6 + 2*13^7 + 6*13^8 + 2*13^9 + 6*13^10 + 2*13^11 + 6*13^12 + 2*13^13 + 6*13^14 + 2*13^15 + 6*13^16 + 2*13^17 + 6*13^18 + 2*13^19 + 6*13^20 + 2*13^21 + O(13^22))*w^2 + (8*13^3 + 13^4 + 6*13^5 + 11*13^6 + 5*13^7 + 11*13^8 + 5*13^9 + 11*13^10 + 5*13^11 + 11*13^12 + 5*13^13 + 11*13^14 + 5*13^15 + 11*13^16 + 5*13^17 + 11*13^18 + 5*13^19 + 11*13^20 + 5*13^21 + 11*13^22 + O(13^23))*w^3 + (8*13^4 + 11*13^5 + 5*13^6 + 11*13^7 + 5*13^8 + 11*13^9 + 5*13^10 + 11*13^11 + 5*13^12 + 11*13^13 + 5*13^14 + 11*13^15 + 5*13^16 + 11*13^17 + 5*13^18 + 11*13^19 + 5*13^20 + 11*13^21 + 5*13^22 + 11*13^23 + O(13^24))*w^4 + (13^5 + 12*13^6 + 12*13^8 + 12*13^10 + 12*13^12 + 12*13^14 + 12*13^16 + 12*13^18 + 12*13^20 + 12*13^22 + 12*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 4)][-1].base_ring().gen()
    random_dict[(13, 4)] = [Vs[(13, 4)]((0, 2 + 8*13 + 4*13^2 + 9*13^3 + 9*13^4 + O(13^20) + (12*13^2 + 13^3 + 10*13^4 + 3*13^5 + O(13^22))*w + (3*13^2 + 5*13^3 + 5*13^4 + 12*13^5 + O(13^22))*w^2 + (10*13^3 + 7*13^4 + 9*13^5 + O(13^23))*w^3 + (3*13^4 + 3*13^5 + O(13^24))*w^4 + (10*13^5 + O(13^25))*w^5, 7 + 10*13^2 + 11*13^3 + 3*13^4 + O(13^20) + (9*13 + 2*13^2 + 9*13^4 + O(13^21))*w + (7*13^2 + 8*13^3 + 3*13^4 + O(13^22))*w^2 + (10*13^4 + O(13^24))*w^3 + (13^4 + O(13^24))*w^4, 10 + 3*13 + 13^2 + 3*13^3 + O(13^20) + (10*13 + 11*13^2 + 7*13^3 + O(13^21))*w + (13^2 + 7*13^3 + O(13^22))*w^2 + (7*13^3 + O(13^23))*w^3, 5 + 5*13 + 3*13^2 + O(13^20) + (5*13 + 11*13^2 + O(13^21))*w + (6*13^2 + O(13^22))*w^2, 9 + 8*13 + O(13^20) + (2*13 + O(13^21))*w, 10 + O(13^20))), VQs[(13, 4)][-1]((2 + 8*13 + 4*13^2 + 9*13^3 + 9*13^4 + O(13^20) + (12*13^2 + 13^3 + 10*13^4 + 3*13^5 + O(13^22))*w + (3*13^2 + 5*13^3 + 5*13^4 + 12*13^5 + O(13^22))*w^2 + (10*13^3 + 7*13^4 + 9*13^5 + O(13^23))*w^3 + (3*13^4 + 3*13^5 + O(13^24))*w^4 + (10*13^5 + O(13^25))*w^5, 9 + 2*13 + 9*13^2 + 7*13^3 + 3*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (11*13 + 13^2 + 12*13^3 + 5*13^4 + 11*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + O(13^21))*w + (2*13^2 + 8*13^3 + 5*13^4 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (8*13^3 + 7*13^4 + 8*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (12*13^4 + 4*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4 + (8*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + 12*13^24 + O(13^25))*w^5, 11 + 8*13 + 2*13^2 + 3*13^3 + 6*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (13 + 11*13^2 + 2*13^3 + 8*13^4 + 4*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + O(13^21))*w + (6*13^2 + 5*13^3 + 13^4 + 4*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + O(13^22))*w^2 + (4*13^3 + 7*13^4 + 5*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + 4*13^22 + O(13^23))*w^3 + (7*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^4 + (6*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + 4*13^22 + 4*13^23 + 4*13^24 + O(13^25))*w^5, 11 + 2*13 + 9*13^2 + 4*13^3 + 7*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (5*13 + 7*13^2 + 12*13^3 + 13^4 + O(13^21))*w + (6*13^2 + 8*13^3 + O(13^22))*w^2 + (3*13^3 + 2*13^4 + O(13^23))*w^3 + (10*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + 9*13^23 + O(13^24))*w^4, 3 + 5*13 + 10*13^2 + 5*13^3 + 11*13^4 + 3*13^5 + 13^6 + 9*13^7 + 11*13^8 + 3*13^9 + 13^10 + 9*13^11 + 11*13^12 + 3*13^13 + 13^14 + 9*13^15 + 11*13^16 + 3*13^17 + 13^18 + 9*13^19 + O(13^20) + (6*13 + 6*13^3 + 5*13^4 + 9*13^5 + 13^6 + 12*13^7 + 6*13^8 + 9*13^9 + 13^10 + 12*13^11 + 6*13^12 + 9*13^13 + 13^14 + 12*13^15 + 6*13^16 + 9*13^17 + 13^18 + 12*13^19 + 6*13^20 + O(13^21))*w + (2*13^2 + 7*13^3 + 12*13^4 + 6*13^5 + 12*13^6 + 9*13^7 + 4*13^8 + 7*13^9 + 12*13^10 + 9*13^11 + 4*13^12 + 7*13^13 + 12*13^14 + 9*13^15 + 4*13^16 + 7*13^17 + 12*13^18 + 9*13^19 + 4*13^20 + 7*13^21 + O(13^22))*w^2 + (2*13^3 + 8*13^4 + 6*13^5 + 9*13^6 + 13^7 + 12*13^8 + 6*13^9 + 9*13^10 + 13^11 + 12*13^12 + 6*13^13 + 9*13^14 + 13^15 + 12*13^16 + 6*13^17 + 9*13^18 + 13^19 + 12*13^20 + 6*13^21 + 9*13^22 + O(13^23))*w^3 + (9*13^4 + 7*13^5 + 2*13^6 + 5*13^7 + 10*13^8 + 7*13^9 + 2*13^10 + 5*13^11 + 10*13^12 + 7*13^13 + 2*13^14 + 5*13^15 + 10*13^16 + 7*13^17 + 2*13^18 + 5*13^19 + 10*13^20 + 7*13^21 + 2*13^22 + 5*13^23 + O(13^24))*w^4 + (4*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + 4*13^22 + 4*13^23 + 4*13^24 + O(13^25))*w^5, 3 + 13 + 11*13^2 + 8*13^3 + 12*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20) + (9*13 + 7*13^2 + 3*13^3 + 12*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + O(13^21))*w + (3*13^2 + 9*13^3 + 12*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + O(13^22))*w^2 + (10*13^4 + 10*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + 10*13^21 + 10*13^22 + 10*13^23 + O(13^24))*w^3 + (13^4 + 13^5 + 13^6 + 13^7 + 13^8 + 13^9 + 13^10 + 13^11 + 13^12 + 13^13 + 13^14 + 13^15 + 13^16 + 13^17 + 13^18 + 13^19 + 13^20 + 13^21 + 13^22 + 13^23 + O(13^24))*w^4, 5 + 5*13 + 10*13^2 + 11*13^3 + 3*13^4 + 9*13^5 + 3*13^6 + 9*13^7 + 3*13^8 + 9*13^9 + 3*13^10 + 9*13^11 + 3*13^12 + 9*13^13 + 3*13^14 + 9*13^15 + 3*13^16 + 9*13^17 + 3*13^18 + 9*13^19 + O(13^20) + (8*13 + 8*13^2 + 12*13^3 + 10*13^4 + 11*13^5 + 9*13^6 + 11*13^7 + 9*13^8 + 11*13^9 + 9*13^10 + 11*13^11 + 9*13^12 + 11*13^13 + 9*13^14 + 11*13^15 + 9*13^16 + 11*13^17 + 9*13^18 + 11*13^19 + 9*13^20 + O(13^21))*w + (3*13^2 + 8*13^3 + 9*13^4 + 11*13^5 + 5*13^6 + 11*13^7 + 5*13^8 + 11*13^9 + 5*13^10 + 11*13^11 + 5*13^12 + 11*13^13 + 5*13^14 + 11*13^15 + 5*13^16 + 11*13^17 + 5*13^18 + 11*13^19 + 5*13^20 + 11*13^21 + O(13^22))*w^2 + (10*13^4 + 13^5 + 7*13^6 + 13^7 + 7*13^8 + 13^9 + 7*13^10 + 13^11 + 7*13^12 + 13^13 + 7*13^14 + 13^15 + 7*13^16 + 13^17 + 7*13^18 + 13^19 + 7*13^20 + 13^21 + 7*13^22 + 13^23 + O(13^24))*w^3 + (13^4 + O(13^24))*w^4 + (12*13^5 + 9*13^6 + 11*13^7 + 9*13^8 + 11*13^9 + 9*13^10 + 11*13^11 + 9*13^12 + 11*13^13 + 9*13^14 + 11*13^15 + 9*13^16 + 11*13^17 + 9*13^18 + 11*13^19 + 9*13^20 + 11*13^21 + 9*13^22 + 11*13^23 + 9*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 5)][-1].base_ring().gen()
    random_dict[(13, 5)] = [Vs[(13, 5)]((0, 8 + 9*13 + 13^2 + 2*13^3 + 10*13^4 + 6*13^5 + O(13^20) + (5*13 + 2*13^2 + 4*13^3 + 10*13^5 + O(13^21))*w + (10*13^3 + 6*13^4 + 8*13^5 + O(13^23))*w^2 + (3*13^3 + 10*13^4 + 11*13^5 + O(13^23))*w^3 + (10*13^5 + O(13^25))*w^4 + (9*13^5 + O(13^25))*w^5, 9 + 7*13 + 6*13^2 + 13^3 + 10*13^4 + O(13^20) + (2*13^2 + 12*13^3 + 5*13^4 + O(13^22))*w + (4*13^2 + 7*13^3 + 13^4 + O(13^22))*w^2 + (3*13^3 + 6*13^4 + O(13^23))*w^3 + (4*13^4 + O(13^24))*w^4, 9 + 11*13 + 13^2 + 13^3 + O(13^20) + (10*13 + 11*13^2 + 5*13^3 + O(13^21))*w + (9*13^2 + 9*13^3 + O(13^22))*w^2 + (4*13^3 + O(13^23))*w^3, 4 + 9*13 + 2*13^2 + O(13^20) + (12*13 + O(13^21))*w + (8*13^2 + O(13^22))*w^2, 10 + 7*13 + O(13^20) + (4*13 + O(13^21))*w, 6 + O(13^20))), VQs[(13, 5)][-1]((8 + 9*13 + 13^2 + 2*13^3 + 10*13^4 + 6*13^5 + O(13^20) + (5*13 + 2*13^2 + 4*13^3 + 10*13^5 + O(13^21))*w + (10*13^3 + 6*13^4 + 8*13^5 + O(13^23))*w^2 + (3*13^3 + 10*13^4 + 11*13^5 + O(13^23))*w^3 + (10*13^5 + O(13^25))*w^4 + (9*13^5 + O(13^25))*w^5, 7 + 5*13 + 2*13^2 + 6*13^3 + 6*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (4*13 + 6*13^2 + 10*13^3 + 2*13^4 + 8*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + O(13^21))*w + (2*13^2 + 5*13^3 + 10*13^4 + 8*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + O(13^22))*w^2 + (11*13^4 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^3 + (2*13^4 + 8*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + O(13^24))*w^4 + (2*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 2 + 8*13 + 10*13^2 + 10*13^3 + 11*13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + O(13^20) + (2*13 + 13^2 + 3*13^3 + 10*13^4 + 5*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + O(13^21))*w + (13^2 + 12*13^3 + 4*13^4 + 13^5 + O(13^22))*w^2 + (9*13^3 + 11*13^4 + 3*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + O(13^23))*w^3 + (11*13^4 + 5*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + 4*13^22 + 4*13^23 + O(13^24))*w^4 + (8*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 2 + 8*13 + 4*13^2 + 6*13^3 + 2*13^4 + O(13^20) + (11*13 + 7*13^2 + 6*13^3 + 4*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + O(13^21))*w + (5*13^2 + O(13^22))*w^2 + (2*13^3 + 11*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + O(13^23))*w^3 + (13^4 + O(13^24))*w^4, 1 + 3*13 + 3*13^2 + 3*13^3 + 12*13^4 + 13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + O(13^20) + (13 + 9*13^2 + 5*13^3 + 13^4 + 3*13^6 + 8*13^7 + 5*13^8 + 3*13^10 + 8*13^11 + 5*13^12 + 3*13^14 + 8*13^15 + 5*13^16 + 3*13^18 + 8*13^19 + 5*13^20 + O(13^21))*w + (12*13^2 + 6*13^3 + 9*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + O(13^22))*w^2 + (6*13^3 + 11*13^4 + 10*13^5 + 6*13^7 + 3*13^8 + 11*13^9 + 6*13^11 + 3*13^12 + 11*13^13 + 6*13^15 + 3*13^16 + 11*13^17 + 6*13^19 + 3*13^20 + 11*13^21 + O(13^23))*w^3 + (4*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + 4*13^22 + 4*13^23 + 4*13^24 + O(13^25))*w^4 + (13^5 + 9*13^6 + 11*13^7 + 3*13^8 + 13^9 + 9*13^10 + 11*13^11 + 3*13^12 + 13^13 + 9*13^14 + 11*13^15 + 3*13^16 + 13^17 + 9*13^18 + 11*13^19 + 3*13^20 + 13^21 + 9*13^22 + 11*13^23 + 3*13^24 + O(13^25))*w^5, 11 + 4*13 + 13^2 + 2*13^3 + 12*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20) + (3*13 + 2*13^2 + 13^3 + 7*13^4 + 7*13^5 + 7*13^6 + 7*13^7 + 7*13^8 + 7*13^9 + 7*13^10 + 7*13^11 + 7*13^12 + 7*13^13 + 7*13^14 + 7*13^15 + 7*13^16 + 7*13^17 + 7*13^18 + 7*13^19 + 7*13^20 + O(13^21))*w + (3*13^2 + 7*13^3 + 8*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + O(13^22))*w^2 + (3*13^3 + 9*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + O(13^23))*w^3 + (4*13^4 + 4*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + 4*13^22 + 4*13^23 + O(13^24))*w^4, 1 + 7*13^3 + 6*13^5 + 11*13^6 + 5*13^7 + 11*13^8 + 5*13^9 + 11*13^10 + 5*13^11 + 11*13^12 + 5*13^13 + 11*13^14 + 5*13^15 + 11*13^16 + 5*13^17 + 11*13^18 + 5*13^19 + O(13^20) + (2*13 + 8*13^2 + 5*13^3 + 6*13^4 + 5*13^5 + 3*13^6 + 5*13^7 + 3*13^8 + 5*13^9 + 3*13^10 + 5*13^11 + 3*13^12 + 5*13^13 + 3*13^14 + 5*13^15 + 3*13^16 + 5*13^17 + 3*13^18 + 5*13^19 + 3*13^20 + O(13^21))*w + (5*13^2 + 10*13^3 + 11*13^4 + 3*13^5 + 9*13^6 + 3*13^7 + 9*13^8 + 3*13^9 + 9*13^10 + 3*13^11 + 9*13^12 + 3*13^13 + 9*13^14 + 3*13^15 + 9*13^16 + 3*13^17 + 9*13^18 + 3*13^19 + 9*13^20 + 3*13^21 + O(13^22))*w^2 + (9*13^3 + 6*13^4 + 13^5 + 3*13^6 + 13^7 + 3*13^8 + 13^9 + 3*13^10 + 13^11 + 3*13^12 + 13^13 + 3*13^14 + 13^15 + 3*13^16 + 13^17 + 3*13^18 + 13^19 + 3*13^20 + 13^21 + 3*13^22 + O(13^23))*w^3 + (12*13^5 + 9*13^6 + 11*13^7 + 9*13^8 + 11*13^9 + 9*13^10 + 11*13^11 + 9*13^12 + 11*13^13 + 9*13^14 + 11*13^15 + 9*13^16 + 11*13^17 + 9*13^18 + 11*13^19 + 9*13^20 + 11*13^21 + 9*13^22 + 11*13^23 + 9*13^24 + O(13^25))*w^4 + (3*13^5 + 10*13^6 + 2*13^7 + 10*13^8 + 2*13^9 + 10*13^10 + 2*13^11 + 10*13^12 + 2*13^13 + 10*13^14 + 2*13^15 + 10*13^16 + 2*13^17 + 10*13^18 + 2*13^19 + 10*13^20 + 2*13^21 + 10*13^22 + 2*13^23 + 10*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 6)][-1].base_ring().gen()
    random_dict[(13, 6)] = [Vs[(13, 6)]((0, 4 + 13 + 3*13^2 + 2*13^3 + 8*13^4 + 8*13^5 + O(13^20) + (10*13 + 12*13^2 + 5*13^3 + 4*13^4 + 12*13^5 + O(13^21))*w + (8*13^3 + 3*13^4 + O(13^23))*w^2 + (5*13^3 + 10*13^4 + 4*13^5 + O(13^23))*w^3 + (9*13^4 + 12*13^5 + O(13^24))*w^4 + (6*13^5 + O(13^25))*w^5, 6 + 6*13 + 13^2 + 8*13^3 + 12*13^4 + O(13^20) + (13 + 13^2 + 12*13^3 + 7*13^4 + O(13^21))*w + (10*13^2 + 2*13^3 + 4*13^4 + O(13^22))*w^2 + (9*13^3 + 12*13^4 + O(13^23))*w^3 + (5*13^4 + O(13^24))*w^4, 5*13 + 9*13^2 + 2*13^3 + O(13^21) + (13 + 12*13^2 + 6*13^3 + O(13^21))*w + (3*13^2 + 11*13^3 + O(13^22))*w^2 + (2*13^3 + O(13^23))*w^3, 12 + 6*13 + 4*13^2 + O(13^20) + (7*13 + 5*13^2 + O(13^21))*w + (5*13^2 + O(13^22))*w^2, 8*13 + O(13^21) + (13 + O(13^21))*w, 2 + O(13^20))), VQs[(13, 6)][-1]((4 + 13 + 3*13^2 + 2*13^3 + 8*13^4 + 8*13^5 + O(13^20) + (10*13 + 12*13^2 + 5*13^3 + 4*13^4 + 12*13^5 + O(13^21))*w + (8*13^3 + 3*13^4 + O(13^23))*w^2 + (5*13^3 + 10*13^4 + 4*13^5 + O(13^23))*w^3 + (9*13^4 + 12*13^5 + O(13^24))*w^4 + (6*13^5 + O(13^25))*w^5, 1 + 9*13 + 5*13^2 + 9*13^3 + 8*13^4 + 2*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (2*13 + 7*13^2 + 9*13^3 + 13^4 + 7*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + O(13^21))*w + (5*13^2 + 10*13^3 + 6*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (2*13^3 + 13^4 + 11*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (11*13^4 + 6*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + O(13^24))*w^4 + (10*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + 12*13^24 + O(13^25))*w^5, 2 + 5*13 + 9*13^2 + 3*13^3 + 10*13^4 + 11*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + O(13^20) + (8*13 + 5*13^2 + 12*13^3 + 9*13^4 + 13^5 + O(13^21))*w + (9*13^2 + 3*13^3 + 5*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (10*13^3 + 12*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + O(13^23))*w^3 + (12*13^4 + 13^5 + O(13^24))*w^4 + (13^5 + O(13^25))*w^5, 11 + 4*13^3 + 6*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20) + (8*13 + 8*13^2 + 12*13^3 + 4*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + O(13^21))*w + (12*13^2 + 4*13^3 + 10*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + O(13^22))*w^2 + (11*13^3 + 12*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + O(13^23))*w^3 + (11*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + 9*13^23 + O(13^24))*w^4, 6 + 11*13 + 11*13^3 + 5*13^4 + 13^5 + 12*13^6 + 6*13^7 + 9*13^8 + 13^9 + 12*13^10 + 6*13^11 + 9*13^12 + 13^13 + 12*13^14 + 6*13^15 + 9*13^16 + 13^17 + 12*13^18 + 6*13^19 + O(13^20) + (11*13 + 4*13^3 + 13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (5*13^2 + 12*13^3 + 7*13^4 + 2*13^5 + 5*13^6 + 10*13^7 + 7*13^8 + 2*13^9 + 5*13^10 + 10*13^11 + 7*13^12 + 2*13^13 + 5*13^14 + 10*13^15 + 7*13^16 + 2*13^17 + 5*13^18 + 10*13^19 + 7*13^20 + 2*13^21 + O(13^22))*w^2 + (7*13^3 + 10*13^4 + 9*13^5 + 4*13^6 + 7*13^7 + 12*13^8 + 9*13^9 + 4*13^10 + 7*13^11 + 12*13^12 + 9*13^13 + 4*13^14 + 7*13^15 + 12*13^16 + 9*13^17 + 4*13^18 + 7*13^19 + 12*13^20 + 9*13^21 + 4*13^22 + O(13^23))*w^3 + (13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4 + (5*13^5 + 10*13^6 + 7*13^7 + 2*13^8 + 5*13^9 + 10*13^10 + 7*13^11 + 2*13^12 + 5*13^13 + 10*13^14 + 7*13^15 + 2*13^16 + 5*13^17 + 10*13^18 + 7*13^19 + 2*13^20 + 5*13^21 + 10*13^22 + 7*13^23 + 2*13^24 + O(13^25))*w^5, 7 + 9*13^2 + 2*13^3 + 2*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20) + (11*13 + 10*13^2 + 7*13^3 + 2*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + O(13^21))*w + (11*13^2 + 11*13^3 + 2*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + O(13^22))*w^2 + (9*13^3 + 8*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + O(13^23))*w^3 + (5*13^4 + 5*13^5 + 5*13^6 + 5*13^7 + 5*13^8 + 5*13^9 + 5*13^10 + 5*13^11 + 5*13^12 + 5*13^13 + 5*13^14 + 5*13^15 + 5*13^16 + 5*13^17 + 5*13^18 + 5*13^19 + 5*13^20 + 5*13^21 + 5*13^22 + 5*13^23 + O(13^24))*w^4, 9 + 8*13 + 7*13^3 + 12*13^4 + 11*13^5 + 9*13^6 + 11*13^7 + 9*13^8 + 11*13^9 + 9*13^10 + 11*13^11 + 9*13^12 + 11*13^13 + 9*13^14 + 11*13^15 + 9*13^16 + 11*13^17 + 9*13^18 + 11*13^19 + O(13^20) + (8*13 + 7*13^2 + 8*13^3 + 4*13^4 + 12*13^5 + 12*13^7 + 12*13^9 + 12*13^11 + 12*13^13 + 12*13^15 + 12*13^17 + 12*13^19 + O(13^21))*w + (6*13^2 + 9*13^3 + 2*13^4 + 10*13^5 + 2*13^6 + 10*13^7 + 2*13^8 + 10*13^9 + 2*13^10 + 10*13^11 + 2*13^12 + 10*13^13 + 2*13^14 + 10*13^15 + 2*13^16 + 10*13^17 + 2*13^18 + 10*13^19 + 2*13^20 + 10*13^21 + O(13^22))*w^2 + (10*13^3 + 13^4 + 4*13^5 + 4*13^7 + 4*13^9 + 4*13^11 + 4*13^13 + 4*13^15 + 4*13^17 + 4*13^19 + 4*13^21 + O(13^23))*w^3 + (3*13^4 + 13^5 + 12*13^6 + 12*13^8 + 12*13^10 + 12*13^12 + 12*13^14 + 12*13^16 + 12*13^18 + 12*13^20 + 12*13^22 + O(13^24))*w^4 + (2*13^5 + 11*13^6 + 13^7 + 11*13^8 + 13^9 + 11*13^10 + 13^11 + 11*13^12 + 13^13 + 11*13^14 + 13^15 + 11*13^16 + 13^17 + 11*13^18 + 13^19 + 11*13^20 + 13^21 + 11*13^22 + 13^23 + 11*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 7)][-1].base_ring().gen()
    random_dict[(13, 7)] = [Vs[(13, 7)]((0, 11 + 10*13 + 4*13^2 + 8*13^3 + 10*13^4 + 6*13^5 + O(13^20) + (12*13 + 11*13^2 + 5*13^3 + 9*13^4 + 9*13^5 + O(13^21))*w + (9*13^2 + 9*13^3 + 5*13^4 + 12*13^5 + O(13^22))*w^2 + (8*13^3 + 11*13^4 + 8*13^5 + O(13^23))*w^3 + (10*13^4 + 7*13^5 + O(13^24))*w^4 + (13^5 + O(13^25))*w^5, 10 + 12*13^2 + 12*13^3 + 10*13^4 + O(13^20) + (4*13 + 4*13^3 + O(13^21))*w + (4*13^2 + 10*13^3 + 11*13^4 + O(13^22))*w^2 + (6*13^3 + 9*13^4 + O(13^23))*w^3 + (11*13^4 + O(13^24))*w^4, 2 + 13 + 3*13^2 + 10*13^3 + O(13^20) + (11*13 + 2*13^2 + 10*13^3 + O(13^21))*w + (5*13^2 + 9*13^3 + O(13^22))*w^2 + (5*13^3 + O(13^23))*w^3, 12 + 12*13 + 4*13^2 + O(13^20) + (2*13 + 10*13^2 + O(13^21))*w + (11*13^2 + O(13^22))*w^2, 5 + 4*13 + O(13^20) + (9*13 + O(13^21))*w, 1 + O(13^20))), VQs[(13, 7)][-1]((11 + 10*13 + 4*13^2 + 8*13^3 + 10*13^4 + 6*13^5 + O(13^20) + (12*13 + 11*13^2 + 5*13^3 + 9*13^4 + 9*13^5 + O(13^21))*w + (9*13^2 + 9*13^3 + 5*13^4 + 12*13^5 + O(13^22))*w^2 + (8*13^3 + 11*13^4 + 8*13^5 + O(13^23))*w^3 + (10*13^4 + 7*13^5 + O(13^24))*w^4 + (13^5 + O(13^25))*w^5, 6 + 13 + 10*13^2 + 8*13^3 + 6*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (9*13 + 12*13^3 + 13^4 + 8*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + O(13^21))*w + (4*13^2 + 3*13^4 + 7*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + O(13^22))*w^2 + (12*13^3 + 11*13^4 + 8*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (7*13^4 + 9*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + O(13^24))*w^4 + (6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 4 + 8*13 + 6*13^2 + 3*13^4 + 7*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (8*13 + 11*13^3 + 3*13^4 + 10*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + O(13^21))*w + (12*13^2 + 3*13^3 + 8*13^4 + 13^5 + O(13^22))*w^2 + (6*13^4 + 5*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + 4*13^22 + 4*13^23 + O(13^24))*w^3 + (7*13^4 + 9*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + 8*13^23 + O(13^24))*w^4 + (11*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + 10*13^21 + 10*13^22 + 10*13^23 + 10*13^24 + O(13^25))*w^5, 11 + 2*13 + 9*13^2 + 4*13^3 + 2*13^4 + O(13^20) + (9*13 + 7*13^2 + 2*13^3 + 6*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (11*13^2 + 7*13^3 + 2*13^4 + O(13^22))*w^2 + (12*13^3 + 11*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + O(13^23))*w^3 + (6*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + 3*13^22 + 3*13^23 + O(13^24))*w^4, 7 + 3*13 + 9*13^2 + 7*13^3 + 11*13^4 + 8*13^5 + 11*13^6 + 3*13^7 + 13^8 + 9*13^9 + 11*13^10 + 3*13^11 + 13^12 + 9*13^13 + 11*13^14 + 3*13^15 + 13^16 + 9*13^17 + 11*13^18 + 3*13^19 + O(13^20) + (11*13 + 3*13^2 + 6*13^3 + 12*13^4 + 10*13^5 + 6*13^7 + 3*13^8 + 11*13^9 + 6*13^11 + 3*13^12 + 11*13^13 + 6*13^15 + 3*13^16 + 11*13^17 + 6*13^19 + 3*13^20 + O(13^21))*w + (8*13^2 + 10*13^3 + 7*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + O(13^22))*w^2 + (4*13^3 + 12*13^4 + 7*13^5 + 5*13^6 + 3*13^8 + 8*13^9 + 5*13^10 + 3*13^12 + 8*13^13 + 5*13^14 + 3*13^16 + 8*13^17 + 5*13^18 + 3*13^20 + 8*13^21 + 5*13^22 + O(13^23))*w^3 + (4*13^4 + 12*13^5 + 9*13^6 + 4*13^7 + 7*13^8 + 12*13^9 + 9*13^10 + 4*13^11 + 7*13^12 + 12*13^13 + 9*13^14 + 4*13^15 + 7*13^16 + 12*13^17 + 9*13^18 + 4*13^19 + 7*13^20 + 12*13^21 + 9*13^22 + 4*13^23 + O(13^24))*w^4 + (3*13^5 + 8*13^6 + 5*13^7 + 3*13^9 + 8*13^10 + 5*13^11 + 3*13^13 + 8*13^14 + 5*13^15 + 3*13^17 + 8*13^18 + 5*13^19 + 3*13^21 + 8*13^22 + 5*13^23 + O(13^25))*w^5, 4 + 5*13 + 7*13^2 + 5*13^3 + 3*13^4 + 4*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + O(13^20) + (9*13 + 13^2 + 2*13^3 + 2*13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + O(13^21))*w + (13^2 + 7*13^3 + 5*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (6*13^3 + 2*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + 3*13^22 + O(13^23))*w^3 + (11*13^4 + 11*13^5 + 11*13^6 + 11*13^7 + 11*13^8 + 11*13^9 + 11*13^10 + 11*13^11 + 11*13^12 + 11*13^13 + 11*13^14 + 11*13^15 + 11*13^16 + 11*13^17 + 11*13^18 + 11*13^19 + 11*13^20 + 11*13^21 + 11*13^22 + 11*13^23 + O(13^24))*w^4, 1 + 4*13 + 13^2 + 8*13^3 + 6*13^4 + 8*13^5 + 4*13^6 + 8*13^7 + 4*13^8 + 8*13^9 + 4*13^10 + 8*13^11 + 4*13^12 + 8*13^13 + 4*13^14 + 8*13^15 + 4*13^16 + 8*13^17 + 4*13^18 + 8*13^19 + O(13^20) + (11*13 + 12*13^2 + 8*13^3 + 9*13^4 + 10*13^5 + 6*13^6 + 10*13^7 + 6*13^8 + 10*13^9 + 6*13^10 + 10*13^11 + 6*13^12 + 10*13^13 + 6*13^14 + 10*13^15 + 6*13^16 + 10*13^17 + 6*13^18 + 10*13^19 + 6*13^20 + O(13^21))*w + (3*13^3 + 10*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + O(13^23))*w^2 + (4*13^3 + 3*13^4 + 8*13^5 + 8*13^7 + 8*13^9 + 8*13^11 + 8*13^13 + 8*13^15 + 8*13^17 + 8*13^19 + 8*13^21 + O(13^23))*w^3 + (12*13^4 + 7*13^5 + 9*13^6 + 7*13^7 + 9*13^8 + 7*13^9 + 9*13^10 + 7*13^11 + 9*13^12 + 7*13^13 + 9*13^14 + 7*13^15 + 9*13^16 + 7*13^17 + 9*13^18 + 7*13^19 + 9*13^20 + 7*13^21 + 9*13^22 + 7*13^23 + O(13^24))*w^4 + (9*13^5 + 12*13^6 + 8*13^7 + 12*13^8 + 8*13^9 + 12*13^10 + 8*13^11 + 12*13^12 + 8*13^13 + 12*13^14 + 8*13^15 + 12*13^16 + 8*13^17 + 12*13^18 + 8*13^19 + 12*13^20 + 8*13^21 + 12*13^22 + 8*13^23 + 12*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 8)][-1].base_ring().gen()
    random_dict[(13, 8)] = [Vs[(13, 8)]((0, 4 + 12*13 + 6*13^2 + 12*13^3 + 10*13^4 + 6*13^5 + O(13^20) + (8*13 + 6*13^2 + 10*13^4 + 2*13^5 + O(13^21))*w + (12*13^2 + 3*13^3 + 5*13^4 + 9*13^5 + O(13^22))*w^2 + (5*13^3 + 6*13^4 + 8*13^5 + O(13^23))*w^3 + (13^4 + 13^5 + O(13^24))*w^4 + (5*13^5 + O(13^25))*w^5, 5 + 2*13 + 2*13^2 + 6*13^3 + 5*13^4 + O(13^20) + (3*13 + 9*13^2 + 8*13^3 + 7*13^4 + O(13^21))*w + (7*13^2 + 2*13^3 + 6*13^4 + O(13^22))*w^2 + (11*13^3 + O(13^23))*w^3 + (7*13^4 + O(13^24))*w^4, 2 + 10*13 + 3*13^2 + 8*13^3 + O(13^20) + (3*13 + 2*13^2 + 11*13^3 + O(13^21))*w + (3*13^2 + 5*13^3 + O(13^22))*w^2 + (2*13^3 + O(13^23))*w^3, 10 + 3*13 + 8*13^2 + O(13^20) + (13 + 4*13^2 + O(13^21))*w + (2*13^2 + O(13^22))*w^2, (2*13 + O(13^21))*w, 4 + O(13^20))), VQs[(13, 8)][-1]((4 + 12*13 + 6*13^2 + 12*13^3 + 10*13^4 + 6*13^5 + O(13^20) + (8*13 + 6*13^2 + 10*13^4 + 2*13^5 + O(13^21))*w + (12*13^2 + 3*13^3 + 5*13^4 + 9*13^5 + O(13^22))*w^2 + (5*13^3 + 6*13^4 + 8*13^5 + O(13^23))*w^3 + (13^4 + 13^5 + O(13^24))*w^4 + (5*13^5 + O(13^25))*w^5, 7 + 13 + 4*13^2 + 3*13^3 + 10*13^4 + 9*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20) + (4*13 + 13^2 + 4*13^3 + 5*13^4 + 5*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (4*13^2 + 12*13^3 + 6*13^4 + 8*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + O(13^22))*w^2 + (3*13^3 + 10*13^4 + 8*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (3*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4 + (4*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 1 + 2*13 + 12*13^2 + 3*13^3 + 12*13^4 + O(13^20) + (3*13 + 10*13^2 + 3*13^3 + 11*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + O(13^21))*w + (6*13^2 + 5*13^3 + 4*13^4 + 13^5 + O(13^22))*w^2 + (9*13^3 + 10*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + O(13^23))*w^3 + (13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + 2*13^23 + O(13^24))*w^4 + (3*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + 2*13^23 + 2*13^24 + O(13^25))*w^5, 6 + 9*13 + 4*13^3 + 4*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20) + (6*13 + 5*13^2 + 6*13^3 + 13^4 + O(13^21))*w + (4*13^2 + 13^3 + 11*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + O(13^22))*w^2 + (5*13^3 + 3*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + 3*13^22 + O(13^23))*w^3 + (5*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + 3*13^22 + 3*13^23 + O(13^24))*w^4, 12 + 11*13 + 12*13^2 + 11*13^3 + 8*13^4 + 3*13^5 + 13^6 + 9*13^7 + 11*13^8 + 3*13^9 + 13^10 + 9*13^11 + 11*13^12 + 3*13^13 + 13^14 + 9*13^15 + 11*13^16 + 3*13^17 + 13^18 + 9*13^19 + O(13^20) + (8*13 + 7*13^2 + 6*13^3 + 12*13^4 + 2*13^5 + 8*13^6 + 5*13^7 + 3*13^9 + 8*13^10 + 5*13^11 + 3*13^13 + 8*13^14 + 5*13^15 + 3*13^17 + 8*13^18 + 5*13^19 + O(13^21))*w + (10*13^2 + 9*13^3 + 7*13^4 + 3*13^5 + 13^6 + 9*13^7 + 11*13^8 + 3*13^9 + 13^10 + 9*13^11 + 11*13^12 + 3*13^13 + 13^14 + 9*13^15 + 11*13^16 + 3*13^17 + 13^18 + 9*13^19 + 11*13^20 + 3*13^21 + O(13^22))*w^2 + (7*13^3 + 11*13^4 + 13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + O(13^23))*w^3 + (3*13^4 + 11*13^5 + 6*13^7 + 3*13^8 + 11*13^9 + 6*13^11 + 3*13^12 + 11*13^13 + 6*13^15 + 3*13^16 + 11*13^17 + 6*13^19 + 3*13^20 + 11*13^21 + 6*13^23 + O(13^24))*w^4 + (2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + 2*13^23 + 2*13^24 + O(13^25))*w^5, 12 + 7*13 + 7*13^2 + 10*13^3 + 2*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20) + (10*13 + 12*13^2 + 6*13^3 + 13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + O(13^21))*w + (10*13^2 + 11*13^3 + 4*13^4 + 5*13^5 + 5*13^6 + 5*13^7 + 5*13^8 + 5*13^9 + 5*13^10 + 5*13^11 + 5*13^12 + 5*13^13 + 5*13^14 + 5*13^15 + 5*13^16 + 5*13^17 + 5*13^18 + 5*13^19 + 5*13^20 + 5*13^21 + O(13^22))*w^2 + (11*13^3 + 11*13^4 + 11*13^5 + 11*13^6 + 11*13^7 + 11*13^8 + 11*13^9 + 11*13^10 + 11*13^11 + 11*13^12 + 11*13^13 + 11*13^14 + 11*13^15 + 11*13^16 + 11*13^17 + 11*13^18 + 11*13^19 + 11*13^20 + 11*13^21 + 11*13^22 + O(13^23))*w^3 + (7*13^4 + 7*13^5 + 7*13^6 + 7*13^7 + 7*13^8 + 7*13^9 + 7*13^10 + 7*13^11 + 7*13^12 + 7*13^13 + 7*13^14 + 7*13^15 + 7*13^16 + 7*13^17 + 7*13^18 + 7*13^19 + 7*13^20 + 7*13^21 + 7*13^22 + 7*13^23 + O(13^24))*w^4, 12 + 13^2 + 13^3 + 13^4 + 13^5 + 12*13^6 + 12*13^8 + 12*13^10 + 12*13^12 + 12*13^14 + 12*13^16 + 12*13^18 + O(13^20) + (13 + 10*13^2 + 11*13^3 + 6*13^4 + 2*13^5 + 6*13^6 + 2*13^7 + 6*13^8 + 2*13^9 + 6*13^10 + 2*13^11 + 6*13^12 + 2*13^13 + 6*13^14 + 2*13^15 + 6*13^16 + 2*13^17 + 6*13^18 + 2*13^19 + 6*13^20 + O(13^21))*w + (10*13^2 + 3*13^5 + 10*13^6 + 2*13^7 + 10*13^8 + 2*13^9 + 10*13^10 + 2*13^11 + 10*13^12 + 2*13^13 + 10*13^14 + 2*13^15 + 10*13^16 + 2*13^17 + 10*13^18 + 2*13^19 + 10*13^20 + 2*13^21 + O(13^22))*w^2 + (10*13^3 + 4*13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + O(13^23))*w^3 + (9*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + 8*13^23 + O(13^24))*w^4 + (6*13^5 + 11*13^6 + 5*13^7 + 11*13^8 + 5*13^9 + 11*13^10 + 5*13^11 + 11*13^12 + 5*13^13 + 11*13^14 + 5*13^15 + 11*13^16 + 5*13^17 + 11*13^18 + 5*13^19 + 11*13^20 + 5*13^21 + 11*13^22 + 5*13^23 + 11*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 9)][-1].base_ring().gen()
    random_dict[(13, 9)] = [Vs[(13, 9)]((0, 4 + 2*13^2 + 9*13^3 + 9*13^4 + 10*13^5 + O(13^20) + (13 + 5*13^2 + 9*13^3 + 6*13^5 + O(13^21))*w + (2*13^2 + 10*13^3 + 9*13^4 + 13^5 + O(13^22))*w^2 + (9*13^3 + 2*13^4 + 5*13^5 + O(13^23))*w^3 + (9*13^4 + O(13^24))*w^4 + (6*13^5 + O(13^25))*w^5, 9 + 3*13 + 9*13^2 + 7*13^3 + 6*13^4 + O(13^20) + (10*13 + 7*13^2 + 2*13^3 + 9*13^4 + O(13^21))*w + (6*13^2 + 3*13^3 + 6*13^4 + O(13^22))*w^2 + (7*13^3 + O(13^23))*w^3 + (8*13^4 + O(13^24))*w^4, 6 + 3*13 + 13^2 + O(13^20) + (7*13 + 2*13^2 + O(13^21))*w + (8*13^2 + 12*13^3 + O(13^22))*w^2 + (10*13^3 + O(13^23))*w^3, 7 + 11*13^2 + O(13^20) + (2*13 + 13^2 + O(13^21))*w + (10*13^2 + O(13^22))*w^2, 2 + 4*13 + O(13^20), 4 + O(13^20))), VQs[(13, 9)][-1]((4 + 2*13^2 + 9*13^3 + 9*13^4 + 10*13^5 + O(13^20) + (13 + 5*13^2 + 9*13^3 + 6*13^5 + O(13^21))*w + (2*13^2 + 10*13^3 + 9*13^4 + 13^5 + O(13^22))*w^2 + (9*13^3 + 2*13^4 + 5*13^5 + O(13^23))*w^3 + (9*13^4 + O(13^24))*w^4 + (6*13^5 + O(13^25))*w^5, 9 + 13 + 10*13^2 + 5*13^3 + 11*13^4 + 7*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20) + (11*13 + 7*13^2 + 9*13^3 + 10*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (2*13^2 + 3*13^3 + 11*13^4 + 5*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (12*13^3 + 11*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + O(13^23))*w^3 + (6*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4 + (10*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + 12*13^24 + O(13^25))*w^5, 9 + 3*13 + 11*13^2 + 12*13^3 + 6*13^4 + 13^5 + O(13^20) + (4*13 + 4*13^2 + 2*13^4 + 7*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (2*13^3 + 3*13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + O(13^23))*w^2 + (10*13^3 + 4*13^4 + 7*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + O(13^23))*w^3 + (4*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4 + (13^5 + O(13^25))*w^5, 1 + 9*13 + 7*13^2 + 8*13^3 + 13^4 + O(13^20) + (6*13 + 7*13^2 + 12*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + O(13^21))*w + (11*13^3 + 10*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + O(13^23))*w^2 + (3*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + 3*13^22 + 3*13^23 + O(13^24))*w^3 + (2*13^4 + O(13^24))*w^4, 7 + 12*13 + 4*13^3 + 8*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20) + (4*13^2 + 2*13^3 + 5*13^4 + 2*13^5 + 5*13^6 + 10*13^7 + 7*13^8 + 2*13^9 + 5*13^10 + 10*13^11 + 7*13^12 + 2*13^13 + 5*13^14 + 10*13^15 + 7*13^16 + 2*13^17 + 5*13^18 + 10*13^19 + 7*13^20 + 2*13^21 + O(13^22))*w + (8*13^2 + 2*13^3 + 8*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + O(13^22))*w^2 + (11*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + O(13^24))*w^3 + (13^4 + 9*13^5 + 11*13^6 + 3*13^7 + 13^8 + 9*13^9 + 11*13^10 + 3*13^11 + 13^12 + 9*13^13 + 11*13^14 + 3*13^15 + 13^16 + 9*13^17 + 11*13^18 + 3*13^19 + 13^20 + 9*13^21 + 11*13^22 + 3*13^23 + O(13^24))*w^4 + (5*13^5 + 10*13^6 + 7*13^7 + 2*13^8 + 5*13^9 + 10*13^10 + 7*13^11 + 2*13^12 + 5*13^13 + 10*13^14 + 7*13^15 + 2*13^16 + 5*13^17 + 10*13^18 + 7*13^19 + 2*13^20 + 5*13^21 + 10*13^22 + 7*13^23 + 2*13^24 + O(13^25))*w^5, 4 + 3*13 + 11*13^2 + 13^3 + 8*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + O(13^20) + (2*13^2 + 4*13^3 + 13^5 + 13^6 + 13^7 + 13^8 + 13^9 + 13^10 + 13^11 + 13^12 + 13^13 + 13^14 + 13^15 + 13^16 + 13^17 + 13^18 + 13^19 + 13^20 + 13^21 + O(13^22))*w + (8*13^2 + 7*13^3 + 13^5 + 13^6 + 13^7 + 13^8 + 13^9 + 13^10 + 13^11 + 13^12 + 13^13 + 13^14 + 13^15 + 13^16 + 13^17 + 13^18 + 13^19 + 13^20 + 13^21 + O(13^22))*w^2 + (7*13^3 + 7*13^4 + 7*13^5 + 7*13^6 + 7*13^7 + 7*13^8 + 7*13^9 + 7*13^10 + 7*13^11 + 7*13^12 + 7*13^13 + 7*13^14 + 7*13^15 + 7*13^16 + 7*13^17 + 7*13^18 + 7*13^19 + 7*13^20 + 7*13^21 + 7*13^22 + O(13^23))*w^3 + (8*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + 8*13^23 + O(13^24))*w^4, 8 + 6*13 + 10*13^2 + 9*13^3 + 10*13^4 + 5*13^5 + 7*13^6 + 5*13^7 + 7*13^8 + 5*13^9 + 7*13^10 + 5*13^11 + 7*13^12 + 5*13^13 + 7*13^14 + 5*13^15 + 7*13^16 + 5*13^17 + 7*13^18 + 5*13^19 + O(13^20) + (10*13 + 11*13^2 + 3*13^3 + 9*13^4 + 5*13^5 + 7*13^6 + 5*13^7 + 7*13^8 + 5*13^9 + 7*13^10 + 5*13^11 + 7*13^12 + 5*13^13 + 7*13^14 + 5*13^15 + 7*13^16 + 5*13^17 + 7*13^18 + 5*13^19 + 7*13^20 + O(13^21))*w + (8*13^2 + 9*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + O(13^22))*w^2 + (10*13^3 + 10*13^4 + 3*13^5 + 9*13^6 + 3*13^7 + 9*13^8 + 3*13^9 + 9*13^10 + 3*13^11 + 9*13^12 + 3*13^13 + 9*13^14 + 3*13^15 + 9*13^16 + 3*13^17 + 9*13^18 + 3*13^19 + 9*13^20 + 3*13^21 + 9*13^22 + O(13^23))*w^3 + (3*13^4 + 10*13^5 + 2*13^6 + 10*13^7 + 2*13^8 + 10*13^9 + 2*13^10 + 10*13^11 + 2*13^12 + 10*13^13 + 2*13^14 + 10*13^15 + 2*13^16 + 10*13^17 + 2*13^18 + 10*13^19 + 2*13^20 + 10*13^21 + 2*13^22 + 10*13^23 + O(13^24))*w^4 + (2*13^5 + 11*13^6 + 13^7 + 11*13^8 + 13^9 + 11*13^10 + 13^11 + 11*13^12 + 13^13 + 11*13^14 + 13^15 + 11*13^16 + 13^17 + 11*13^18 + 13^19 + 11*13^20 + 13^21 + 11*13^22 + 13^23 + 11*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 10)][-1].base_ring().gen()
    random_dict[(13, 10)] = [Vs[(13, 10)]((0, 12 + 6*13 + 7*13^2 + 3*13^3 + 12*13^4 + 12*13^5 + O(13^20) + (4*13 + 9*13^2 + 2*13^3 + 8*13^4 + O(13^21))*w + (10*13^2 + 4*13^3 + 12*13^4 + 13^5 + O(13^22))*w^2 + (3*13^3 + 8*13^5 + O(13^23))*w^3 + (2*13^4 + 8*13^5 + O(13^24))*w^4 + (2*13^5 + O(13^25))*w^5, 2 + 5*13 + 9*13^2 + 7*13^3 + 7*13^4 + O(13^20) + (8*13 + 7*13^2 + 8*13^3 + 7*13^4 + O(13^21))*w + (10*13^2 + 3*13^3 + 11*13^4 + O(13^22))*w^2 + (4*13^3 + 3*13^4 + O(13^23))*w^3 + (2*13^4 + O(13^24))*w^4, 10 + 5*13 + 6*13^2 + 6*13^3 + O(13^20) + (4*13 + 9*13^2 + 5*13^3 + O(13^21))*w + (2*13^2 + 4*13^3 + O(13^22))*w^2 + (10*13^3 + O(13^23))*w^3, 12 + 4*13 + 6*13^2 + O(13^20) + (5*13 + 9*13^2 + O(13^21))*w, 11 + 4*13 + O(13^20) + (3*13 + O(13^21))*w, 8 + O(13^20))), VQs[(13, 10)][-1]((12 + 6*13 + 7*13^2 + 3*13^3 + 12*13^4 + 12*13^5 + O(13^20) + (4*13 + 9*13^2 + 2*13^3 + 8*13^4 + O(13^21))*w + (10*13^2 + 4*13^3 + 12*13^4 + 13^5 + O(13^22))*w^2 + (3*13^3 + 8*13^5 + O(13^23))*w^3 + (2*13^4 + 8*13^5 + O(13^24))*w^4 + (2*13^5 + O(13^25))*w^5, 8 + 5*13 + 7*13^2 + 8*13^3 + 10*13^4 + 6*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20) + (2*13 + 12*13^2 + 2*13^3 + 6*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (6*13^3 + 12*13^4 + 5*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + O(13^23))*w^2 + (7*13^3 + 13^4 + 9*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (9*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + 12*13^24 + O(13^25))*w^4 + (12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + 12*13^24 + O(13^25))*w^5, 7*13 + 9*13^2 + 9*13^3 + 2*13^4 + 6*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + O(13^21) + (11*13 + 11*13^3 + 12*13^4 + 13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + O(13^21))*w + (6*13^2 + 2*13^3 + 5*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w^2 + (4*13^3 + 7*13^4 + 5*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + 4*13^22 + O(13^23))*w^3 + (8*13^4 + 5*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + 4*13^22 + 4*13^23 + O(13^24))*w^4 + (9*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + 8*13^23 + 8*13^24 + O(13^25))*w^5, 5 + 9*13 + 2*13^3 + 8*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (11*13 + 2*13^2 + 9*13^3 + 13^4 + O(13^21))*w + (8*13^2 + 8*13^3 + 2*13^4 + O(13^22))*w^2 + (9*13^3 + 3*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + 3*13^22 + O(13^23))*w^3 + (7*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + O(13^24))*w^4, 8*13 + 9*13^2 + 8*13^3 + 6*13^4 + 6*13^5 + 9*13^6 + 13^7 + 12*13^8 + 6*13^9 + 9*13^10 + 13^11 + 12*13^12 + 6*13^13 + 9*13^14 + 13^15 + 12*13^16 + 6*13^17 + 9*13^18 + 13^19 + 12*13^20 + O(13^21) + (11*13 + 9*13^2 + 2*13^3 + 7*13^4 + 12*13^5 + 9*13^6 + 4*13^7 + 7*13^8 + 12*13^9 + 9*13^10 + 4*13^11 + 7*13^12 + 12*13^13 + 9*13^14 + 4*13^15 + 7*13^16 + 12*13^17 + 9*13^18 + 4*13^19 + 7*13^20 + O(13^21))*w + (9*13^2 + 4*13^3 + 8*13^4 + 11*13^5 + 3*13^6 + 13^7 + 9*13^8 + 11*13^9 + 3*13^10 + 13^11 + 9*13^12 + 11*13^13 + 3*13^14 + 13^15 + 9*13^16 + 11*13^17 + 3*13^18 + 13^19 + 9*13^20 + 11*13^21 + O(13^22))*w^2 + (8*13^3 + 7*13^4 + 10*13^5 + 10*13^6 + 10*13^7 + 10*13^8 + 10*13^9 + 10*13^10 + 10*13^11 + 10*13^12 + 10*13^13 + 10*13^14 + 10*13^15 + 10*13^16 + 10*13^17 + 10*13^18 + 10*13^19 + 10*13^20 + 10*13^21 + 10*13^22 + O(13^23))*w^3 + (6*13^4 + 13^5 + 12*13^6 + 6*13^7 + 9*13^8 + 13^9 + 12*13^10 + 6*13^11 + 9*13^12 + 13^13 + 12*13^14 + 6*13^15 + 9*13^16 + 13^17 + 12*13^18 + 6*13^19 + 9*13^20 + 13^21 + 12*13^22 + 6*13^23 + O(13^24))*w^4 + (6*13^5 + 3*13^6 + 11*13^7 + 6*13^9 + 3*13^10 + 11*13^11 + 6*13^13 + 3*13^14 + 11*13^15 + 6*13^17 + 3*13^18 + 11*13^19 + 6*13^21 + 3*13^22 + 11*13^23 + O(13^25))*w^5, 5 + 6*13^2 + 11*13^3 + 5*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (13 + 2*13^2 + 7*13^3 + 13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + O(13^21))*w + (10*13^2 + 12*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + O(13^22))*w^2 + (4*13^3 + 7*13^4 + 7*13^5 + 7*13^6 + 7*13^7 + 7*13^8 + 7*13^9 + 7*13^10 + 7*13^11 + 7*13^12 + 7*13^13 + 7*13^14 + 7*13^15 + 7*13^16 + 7*13^17 + 7*13^18 + 7*13^19 + 7*13^20 + 7*13^21 + 7*13^22 + O(13^23))*w^3 + (2*13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + 2*13^23 + O(13^24))*w^4, 6 + 12*13 + 11*13^2 + 8*13^3 + 2*13^4 + 10*13^5 + 11*13^6 + 9*13^7 + 11*13^8 + 9*13^9 + 11*13^10 + 9*13^11 + 11*13^12 + 9*13^13 + 11*13^14 + 9*13^15 + 11*13^16 + 9*13^17 + 11*13^18 + 9*13^19 + O(13^20) + (9*13^2 + 4*13^3 + 13^4 + 3*13^5 + 13^6 + 3*13^7 + 13^8 + 3*13^9 + 13^10 + 3*13^11 + 13^12 + 3*13^13 + 13^14 + 3*13^15 + 13^16 + 3*13^17 + 13^18 + 3*13^19 + 13^20 + 3*13^21 + O(13^22))*w + (3*13^2 + 6*13^3 + 13^4 + 12*13^5 + 12*13^7 + 12*13^9 + 12*13^11 + 12*13^13 + 12*13^15 + 12*13^17 + 12*13^19 + 12*13^21 + O(13^22))*w^2 + (8*13^3 + 7*13^4 + 3*13^5 + 5*13^6 + 3*13^7 + 5*13^8 + 3*13^9 + 5*13^10 + 3*13^11 + 5*13^12 + 3*13^13 + 5*13^14 + 3*13^15 + 5*13^16 + 3*13^17 + 5*13^18 + 3*13^19 + 5*13^20 + 3*13^21 + 5*13^22 + O(13^23))*w^3 + (5*13^4 + 6*13^5 + 2*13^6 + 6*13^7 + 2*13^8 + 6*13^9 + 2*13^10 + 6*13^11 + 2*13^12 + 6*13^13 + 2*13^14 + 6*13^15 + 2*13^16 + 6*13^17 + 2*13^18 + 6*13^19 + 2*13^20 + 6*13^21 + 2*13^22 + 6*13^23 + O(13^24))*w^4 + (5*13^5 + 12*13^6 + 4*13^7 + 12*13^8 + 4*13^9 + 12*13^10 + 4*13^11 + 12*13^12 + 4*13^13 + 12*13^14 + 4*13^15 + 12*13^16 + 4*13^17 + 12*13^18 + 4*13^19 + 12*13^20 + 4*13^21 + 12*13^22 + 4*13^23 + 12*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 11)][-1].base_ring().gen()
    random_dict[(13, 11)] = [Vs[(13, 11)]((0, 3 + 13 + 12*13^3 + 5*13^4 + 4*13^5 + O(13^20) + (3*13 + 10*13^2 + 8*13^3 + 2*13^4 + 2*13^5 + O(13^21))*w + (10*13^2 + 5*13^3 + 7*13^4 + 2*13^5 + O(13^22))*w^2 + (7*13^3 + 8*13^4 + 11*13^5 + O(13^23))*w^3 + (4*13^4 + 7*13^5 + O(13^24))*w^4 + (3*13^5 + O(13^25))*w^5, 7 + 12*13 + 7*13^2 + 10*13^3 + O(13^20) + (3*13 + 12*13^2 + 5*13^3 + 4*13^4 + O(13^21))*w + (6*13^2 + 6*13^3 + O(13^22))*w^2 + (13^3 + 6*13^4 + O(13^23))*w^3 + (13^4 + O(13^24))*w^4, 3 + 10*13 + 9*13^2 + 9*13^3 + O(13^20) + (5*13 + 4*13^2 + 2*13^3 + O(13^21))*w + (3*13^3 + O(13^23))*w^3, 2 + 5*13 + 2*13^2 + O(13^20) + (9*13 + O(13^21))*w + (9*13^2 + O(13^22))*w^2, 2*13 + O(13^21) + (5*13 + O(13^21))*w, 5 + O(13^20))), VQs[(13, 11)][-1]((3 + 13 + 12*13^3 + 5*13^4 + 4*13^5 + O(13^20) + (3*13 + 10*13^2 + 8*13^3 + 2*13^4 + 2*13^5 + O(13^21))*w + (10*13^2 + 5*13^3 + 7*13^4 + 2*13^5 + O(13^22))*w^2 + (7*13^3 + 8*13^4 + 11*13^5 + O(13^23))*w^3 + (4*13^4 + 7*13^5 + O(13^24))*w^4 + (3*13^5 + O(13^25))*w^5, 2 + 12*13 + 3*13^2 + 12*13^3 + 3*13^4 + 4*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (13^2 + 5*13^3 + 7*13^4 + 5*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + O(13^22))*w + (11*13^2 + 6*13^3 + 9*13^4 + 11*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + O(13^22))*w^2 + (10*13^3 + 11*13^4 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + O(13^23))*w^3 + (5*13^4 + 9*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + O(13^24))*w^4 + (5*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 11 + 3*13 + 12*13^2 + 12*13^3 + 2*13^4 + 7*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + O(13^20) + (5*13 + 13^2 + 10*13^3 + 4*13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + O(13^21))*w + (3*13^2 + 4*13^3 + 5*13^4 + O(13^22))*w^2 + (6*13^3 + 11*13^4 + 3*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + O(13^23))*w^3 + (11*13^4 + 9*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + 8*13^23 + O(13^24))*w^4 + (7*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + 6*13^23 + 6*13^24 + O(13^25))*w^5, 4 + 12*13 + 13^3 + 3*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + O(13^20) + (7*13 + 7*13^2 + 3*13^3 + 4*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + O(13^21))*w + (7*13^2 + 11*13^3 + 9*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + O(13^22))*w^2 + (2*13^3 + 11*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + O(13^23))*w^3 + (10*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + 9*13^22 + 9*13^23 + O(13^24))*w^4, 9 + 7*13 + 8*13^2 + 6*13^3 + 3*13^4 + 10*13^5 + 7*13^6 + 2*13^7 + 5*13^8 + 10*13^9 + 7*13^10 + 2*13^11 + 5*13^12 + 10*13^13 + 7*13^14 + 2*13^15 + 5*13^16 + 10*13^17 + 7*13^18 + 2*13^19 + O(13^20) + (5*13 + 10*13^2 + 4*13^3 + 10*13^4 + 6*13^6 + 3*13^7 + 11*13^8 + 6*13^10 + 3*13^11 + 11*13^12 + 6*13^14 + 3*13^15 + 11*13^16 + 6*13^18 + 3*13^19 + 11*13^20 + O(13^21))*w + (6*13^2 + 12*13^3 + 7*13^4 + 11*13^5 + 3*13^6 + 13^7 + 9*13^8 + 11*13^9 + 3*13^10 + 13^11 + 9*13^12 + 11*13^13 + 3*13^14 + 13^15 + 9*13^16 + 11*13^17 + 3*13^18 + 13^19 + 9*13^20 + 11*13^21 + O(13^22))*w^2 + (9*13^3 + 3*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + O(13^23))*w^3 + (12*13^4 + 13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + 2*13^21 + 2*13^22 + 2*13^23 + O(13^24))*w^4 + (9*13^5 + 11*13^6 + 3*13^7 + 13^8 + 9*13^9 + 11*13^10 + 3*13^11 + 13^12 + 9*13^13 + 11*13^14 + 3*13^15 + 13^16 + 9*13^17 + 11*13^18 + 3*13^19 + 13^20 + 9*13^21 + 11*13^22 + 3*13^23 + 13^24 + O(13^25))*w^5, 11*13 + 7*13^2 + 4*13^3 + 5*13^4 + 5*13^5 + 5*13^6 + 5*13^7 + 5*13^8 + 5*13^9 + 5*13^10 + 5*13^11 + 5*13^12 + 5*13^13 + 5*13^14 + 5*13^15 + 5*13^16 + 5*13^17 + 5*13^18 + 5*13^19 + 5*13^20 + O(13^21) + (13 + 12*13^2 + 4*13^3 + 9*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + O(13^21))*w + (3*13^3 + 3*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + 3*13^22 + O(13^23))*w^2 + (13^3 + 7*13^4 + 7*13^5 + 7*13^6 + 7*13^7 + 7*13^8 + 7*13^9 + 7*13^10 + 7*13^11 + 7*13^12 + 7*13^13 + 7*13^14 + 7*13^15 + 7*13^16 + 7*13^17 + 7*13^18 + 7*13^19 + 7*13^20 + 7*13^21 + 7*13^22 + O(13^23))*w^3 + (13^4 + 13^5 + 13^6 + 13^7 + 13^8 + 13^9 + 13^10 + 13^11 + 13^12 + 13^13 + 13^14 + 13^15 + 13^16 + 13^17 + 13^18 + 13^19 + 13^20 + 13^21 + 13^22 + 13^23 + O(13^24))*w^4, 11 + 2*13 + 13^2 + 6*13^3 + 11*13^4 + 2*13^5 + 10*13^6 + 2*13^7 + 10*13^8 + 2*13^9 + 10*13^10 + 2*13^11 + 10*13^12 + 2*13^13 + 10*13^14 + 2*13^15 + 10*13^16 + 2*13^17 + 10*13^18 + 2*13^19 + O(13^20) + (7*13 + 10*13^2 + 8*13^3 + 4*13^4 + 4*13^6 + 4*13^8 + 4*13^10 + 4*13^12 + 4*13^14 + 4*13^16 + 4*13^18 + 4*13^20 + O(13^21))*w + (12*13^2 + 2*13^3 + 8*13^4 + 5*13^5 + 7*13^6 + 5*13^7 + 7*13^8 + 5*13^9 + 7*13^10 + 5*13^11 + 7*13^12 + 5*13^13 + 7*13^14 + 5*13^15 + 7*13^16 + 5*13^17 + 7*13^18 + 5*13^19 + 7*13^20 + 5*13^21 + O(13^22))*w^2 + (4*13^3 + 11*13^4 + 9*13^5 + 7*13^6 + 9*13^7 + 7*13^8 + 9*13^9 + 7*13^10 + 9*13^11 + 7*13^12 + 9*13^13 + 7*13^14 + 9*13^15 + 7*13^16 + 9*13^17 + 7*13^18 + 9*13^19 + 7*13^20 + 9*13^21 + 7*13^22 + O(13^23))*w^3 + (10*13^4 + 9*13^5 + 7*13^6 + 9*13^7 + 7*13^8 + 9*13^9 + 7*13^10 + 9*13^11 + 7*13^12 + 9*13^13 + 7*13^14 + 9*13^15 + 7*13^16 + 9*13^17 + 7*13^18 + 9*13^19 + 7*13^20 + 9*13^21 + 7*13^22 + 9*13^23 + O(13^24))*w^4 + (13^5 + 12*13^6 + 12*13^8 + 12*13^10 + 12*13^12 + 12*13^14 + 12*13^16 + 12*13^18 + 12*13^20 + 12*13^22 + 12*13^24 + O(13^25))*w^5))]
    w = VQs[(13, 12)][-1].base_ring().gen()
    random_dict[(13, 12)] = [Vs[(13, 12)]((0, 7 + 9*13^2 + 3*13^3 + 12*13^4 + 13^5 + O(13^20) + (11*13 + 7*13^2 + 5*13^3 + 7*13^5 + O(13^21))*w + (2*13^2 + 9*13^3 + 11*13^4 + 3*13^5 + O(13^22))*w^2 + (8*13^3 + 2*13^4 + 2*13^5 + O(13^23))*w^3 + (13^4 + 7*13^5 + O(13^24))*w^4 + (12*13^5 + O(13^25))*w^5, 4 + 7*13 + 13^4 + O(13^20) + (7*13 + 7*13^3 + 9*13^4 + O(13^21))*w + (10*13^2 + 4*13^3 + 9*13^4 + O(13^22))*w^2 + (5*13^3 + 11*13^4 + O(13^23))*w^3 + (12*13^4 + O(13^24))*w^4, 3 + 13 + 2*13^2 + 11*13^3 + O(13^20) + (3*13 + 8*13^2 + 5*13^3 + O(13^21))*w + (3*13^2 + 8*13^3 + O(13^22))*w^2 + (13^3 + O(13^23))*w^3, 8 + 10*13 + 5*13^2 + O(13^20) + (12*13^2 + O(13^22))*w + (4*13^2 + O(13^22))*w^2, 3 + 6*13 + O(13^20) + (7*13 + O(13^21))*w, 7 + O(13^20))), VQs[(13, 12)][-1]((7 + 9*13^2 + 3*13^3 + 12*13^4 + 13^5 + O(13^20) + (11*13 + 7*13^2 + 5*13^3 + 7*13^5 + O(13^21))*w + (2*13^2 + 9*13^3 + 11*13^4 + 3*13^5 + O(13^22))*w^2 + (8*13^3 + 2*13^4 + 2*13^5 + O(13^23))*w^3 + (13^4 + 7*13^5 + O(13^24))*w^4 + (12*13^5 + O(13^25))*w^5, 5 + 3*13 + 2*13^2 + 11*13^3 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + O(13^20) + (11*13 + 2*13^2 + 7*13^3 + 4*13^4 + 3*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + O(13^21))*w + (4*13^2 + 4*13^3 + 5*13^4 + 11*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + O(13^22))*w^2 + (5*13^3 + 4*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + O(13^23))*w^3 + (12*13^4 + 9*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + O(13^24))*w^4 + (7*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + 12*13^24 + O(13^25))*w^5, 11 + 9*13 + 12*13^2 + 12*13^3 + 3*13^4 + O(13^20) + (8*13 + 13^2 + 10*13^3 + 12*13^4 + 2*13^5 + 2*13^6 + 2*13^7 + 2*13^8 + 2*13^9 + 2*13^10 + 2*13^11 + 2*13^12 + 2*13^13 + 2*13^14 + 2*13^15 + 2*13^16 + 2*13^17 + 2*13^18 + 2*13^19 + 2*13^20 + O(13^21))*w + (5*13^2 + 8*13^3 + 12*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + O(13^22))*w^2 + (10*13^3 + 7*13^4 + 8*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + O(13^23))*w^3 + (5*13^4 + 9*13^5 + 8*13^6 + 8*13^7 + 8*13^8 + 8*13^9 + 8*13^10 + 8*13^11 + 8*13^12 + 8*13^13 + 8*13^14 + 8*13^15 + 8*13^16 + 8*13^17 + 8*13^18 + 8*13^19 + 8*13^20 + 8*13^21 + 8*13^22 + 8*13^23 + O(13^24))*w^4 + (2*13^5 + O(13^25))*w^5, 8 + 7*13^2 + 7*13^3 + 9*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20) + (10*13 + 8*13^2 + 5*13^3 + 5*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + O(13^21))*w + (2*13^2 + 10*13^3 + 11*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + 9*13^20 + 9*13^21 + O(13^22))*w^2 + (4*13^3 + 9*13^4 + 6*13^5 + 6*13^6 + 6*13^7 + 6*13^8 + 6*13^9 + 6*13^10 + 6*13^11 + 6*13^12 + 6*13^13 + 6*13^14 + 6*13^15 + 6*13^16 + 6*13^17 + 6*13^18 + 6*13^19 + 6*13^20 + 6*13^21 + 6*13^22 + O(13^23))*w^3 + (3*13^4 + O(13^24))*w^4, 3 + 11*13^2 + 6*13^3 + 8*13^4 + 11*13^5 + 3*13^6 + 13^7 + 9*13^8 + 11*13^9 + 3*13^10 + 13^11 + 9*13^12 + 11*13^13 + 3*13^14 + 13^15 + 9*13^16 + 11*13^17 + 3*13^18 + 13^19 + O(13^20) + (12*13 + 12*13^3 + 10*13^4 + 5*13^5 + 3*13^6 + 11*13^7 + 6*13^9 + 3*13^10 + 11*13^11 + 6*13^13 + 3*13^14 + 11*13^15 + 6*13^17 + 3*13^18 + 11*13^19 + O(13^21))*w + (5*13^2 + 11*13^3 + 5*13^4 + 12*13^5 + 9*13^6 + 4*13^7 + 7*13^8 + 12*13^9 + 9*13^10 + 4*13^11 + 7*13^12 + 12*13^13 + 9*13^14 + 4*13^15 + 7*13^16 + 12*13^17 + 9*13^18 + 4*13^19 + 7*13^20 + 12*13^21 + O(13^22))*w^2 + (7*13^3 + 2*13^4 + 11*13^5 + 6*13^7 + 3*13^8 + 11*13^9 + 6*13^11 + 3*13^12 + 11*13^13 + 6*13^15 + 3*13^16 + 11*13^17 + 6*13^19 + 3*13^20 + 11*13^21 + O(13^23))*w^3 + (3*13^4 + 3*13^5 + 11*13^6 + 6*13^8 + 3*13^9 + 11*13^10 + 6*13^12 + 3*13^13 + 11*13^14 + 6*13^16 + 3*13^17 + 11*13^18 + 6*13^20 + 3*13^21 + 11*13^22 + O(13^24))*w^4 + (10*13^5 + 7*13^6 + 2*13^7 + 5*13^8 + 10*13^9 + 7*13^10 + 2*13^11 + 5*13^12 + 10*13^13 + 7*13^14 + 2*13^15 + 5*13^16 + 10*13^17 + 7*13^18 + 2*13^19 + 5*13^20 + 10*13^21 + 7*13^22 + 2*13^23 + 5*13^24 + O(13^25))*w^5, 7 + 10*13 + 10*13^2 + 8*13^3 + 9*13^4 + 9*13^5 + 9*13^6 + 9*13^7 + 9*13^8 + 9*13^9 + 9*13^10 + 9*13^11 + 9*13^12 + 9*13^13 + 9*13^14 + 9*13^15 + 9*13^16 + 9*13^17 + 9*13^18 + 9*13^19 + O(13^20) + (10*13 + 5*13^2 + 8*13^3 + 4*13^4 + 5*13^5 + 5*13^6 + 5*13^7 + 5*13^8 + 5*13^9 + 5*13^10 + 5*13^11 + 5*13^12 + 5*13^13 + 5*13^14 + 5*13^15 + 5*13^16 + 5*13^17 + 5*13^18 + 5*13^19 + 5*13^20 + O(13^21))*w + (3*13^2 + 6*13^3 + 2*13^4 + 3*13^5 + 3*13^6 + 3*13^7 + 3*13^8 + 3*13^9 + 3*13^10 + 3*13^11 + 3*13^12 + 3*13^13 + 3*13^14 + 3*13^15 + 3*13^16 + 3*13^17 + 3*13^18 + 3*13^19 + 3*13^20 + 3*13^21 + O(13^22))*w^2 + (5*13^3 + 3*13^4 + 4*13^5 + 4*13^6 + 4*13^7 + 4*13^8 + 4*13^9 + 4*13^10 + 4*13^11 + 4*13^12 + 4*13^13 + 4*13^14 + 4*13^15 + 4*13^16 + 4*13^17 + 4*13^18 + 4*13^19 + 4*13^20 + 4*13^21 + 4*13^22 + O(13^23))*w^3 + (12*13^4 + 12*13^5 + 12*13^6 + 12*13^7 + 12*13^8 + 12*13^9 + 12*13^10 + 12*13^11 + 12*13^12 + 12*13^13 + 12*13^14 + 12*13^15 + 12*13^16 + 12*13^17 + 12*13^18 + 12*13^19 + 12*13^20 + 12*13^21 + 12*13^22 + 12*13^23 + O(13^24))*w^4, 2 + 9*13 + 5*13^3 + 13^4 + 12*13^5 + 12*13^7 + 12*13^9 + 12*13^11 + 12*13^13 + 12*13^15 + 12*13^17 + 12*13^19 + O(13^20) + (11*13 + 10*13^2 + 12*13^3 + 7*13^4 + 11*13^5 + 5*13^6 + 11*13^7 + 5*13^8 + 11*13^9 + 5*13^10 + 11*13^11 + 5*13^12 + 11*13^13 + 5*13^14 + 11*13^15 + 5*13^16 + 11*13^17 + 5*13^18 + 11*13^19 + 5*13^20 + O(13^21))*w + (11*13^2 + 11*13^3 + 7*13^4 + 10*13^5 + 6*13^6 + 10*13^7 + 6*13^8 + 10*13^9 + 6*13^10 + 10*13^11 + 6*13^12 + 10*13^13 + 6*13^14 + 10*13^15 + 6*13^16 + 10*13^17 + 6*13^18 + 10*13^19 + 6*13^20 + 10*13^21 + O(13^22))*w^2 + (9*13^3 + 4*13^4 + 4*13^6 + 4*13^8 + 4*13^10 + 4*13^12 + 4*13^14 + 4*13^16 + 4*13^18 + 4*13^20 + 4*13^22 + O(13^23))*w^3 + (9*13^4 + 10*13^5 + 6*13^6 + 10*13^7 + 6*13^8 + 10*13^9 + 6*13^10 + 10*13^11 + 6*13^12 + 10*13^13 + 6*13^14 + 10*13^15 + 6*13^16 + 10*13^17 + 6*13^18 + 10*13^19 + 6*13^20 + 10*13^21 + 6*13^22 + 10*13^23 + O(13^24))*w^4 + (4*13^5 + 9*13^6 + 3*13^7 + 9*13^8 + 3*13^9 + 9*13^10 + 3*13^11 + 9*13^12 + 3*13^13 + 9*13^14 + 3*13^15 + 9*13^16 + 3*13^17 + 9*13^18 + 3*13^19 + 9*13^20 + 3*13^21 + 9*13^22 + 3*13^23 + 9*13^24 + O(13^25))*w^5))]
    ########################
    for pk in pks:
        print "\n{0}".format(pk)
        mu = Ds[pk](random_dict[pk][0])
        mu.normalize()
        nu = mu.solve_diff_eqn()
        nu.normalize()
        nuM = nu.precision_relative()[0]
        print "# of moments of nu =", nuM
        nuV = VQs[pk][nuM]([nu.moment(j) for j in range(nuM)])
        old_nuV = random_dict[pk][1][:nuM]
        #print nuV == old_nuV
        print nuV, "\n"
        #print old_nuV
        #print "Lengths:", len(nuV), len(old_nuV)
        custom_first_prec = nuV[0][0].precision_absolute() + nu.ordp#nu.precision_absolute()[0]
        nuV_norm = add_bigohs_dist_fam(nuV, pk[0], custom_first_prec)
        old_nuV_norm = add_bigohs_dist_fam(old_nuV, pk[0], custom_first_prec)
        print nuV_norm == old_nuV_norm
        print nuV_norm, "\n"
        print old_nuV_norm

def test_precision_of_OMS():
    # Should add examples where prec of base ring > prec of D
    bad_symbols = []
    really_bad_symbols = []
    ps = [3,5,7,11]
    ks = [0,2,5]
    precs = [4, 10, 20]
    Ns = [1, 3, 6, 11]
    for p in ps:
        print "**** p = {0} ****".format(p)
        for k in ks:
            print "******** k = {0} ********".format(k)
            for N in Ns:
                print "************ N = {0} ************".format(N)
                for prec in precs:
                    print "---- prec = {0} ----".format(prec)
                    D = OverconvergentDistributions(k, base=ZpCA(p, prec))
                    M = OverconvergentModularSymbols(N, coefficients=D)
                    MR = M.source()
                    Phi = M.random_element()
                    Phi.normalize()
                    for g in MR.gens():
                        mu = Phi._map[g]
                        verbose("\nA new g...")
                        verbose("length: {0}".format(len(mu._moments)))
                        check, really_check = _has_appropriate_precision(mu, prec)
                        #check = _has_appropriate_precision(mu)
                        verbose("val, mu = %s, %s\n"%(mu.ordp, mu._moments))
                        if len(check) > 0:
                            bad_symbols.append([Phi, g])
                            if len(really_check) >0:
                                really_bad_symbols.append([Phi, g])
                            print "\n>>> Symbol is bad at\n{0}".format(g)
                            print "        val, mu: ", mu.ordp, mu._moments
                            for i in check:
                                print "        _moment[{0}] = {1}".format(i, mu._moments[i])
    return bad_symbols, really_bad_symbols
                    
def _has_appropriate_precision(mu, prec=None):
    r"""
        If ``prec`` is given, make sure the absolute precision of the ith moment
        is `\text{prec}-i`. Note that ``mu`` may still have fewer than ``prec``
        moments.
        
        Not sure if it makes sense to ever have ``prec`` be ``None``...
    """
    verbose("val, mu = %s, %s"%(mu.ordp, mu._moments))
    verbose("length: {0}".format(len(mu._moments)))
    bad_moms = []
    really_bad_moms = []
    if prec is None:
        prec = len(mu._moments)
    for i in range(len(mu._moments)):
        if mu.moment(i).precision_absolute() != prec - i:
            bad_moms.append(i)
            verbose("Moment {0} (with prec={1}): {2}".format(i, prec, mu._moments[i]))
            if mu.moment(i).precision_absolute() < prec - i:
                really_bad_moms.append(i)
                verbose("REALLY BAD **********************************************************")
    return bad_moms, really_bad_moms

def add_bigohs_dist_fam(nu, p, custom_first_prec=None):
    M = len(nu)
    if custom_first_prec is None:
        custom_first_prec = M
    cp = (p-2)/(p-1)
    shift = ceil(M * cp) - custom_first_prec
    print "precs =", M, custom_first_prec, shift
    R = nu[0].parent()
    Rbase = R.base_ring()
    #print Rbase
    deg = R.default_prec()
    ordp = padic_val_ps_vector(nu)
    print M, cp, ordp, shift
    for i in range(M):
        #print "i=",i
        nulisti = nu[i].list()[:deg+1]
        cutoff = ceil((M-i) * cp) - ordp - shift
        print cutoff
        #print "cutoff=",cutoff
        for j in range(len(nulisti)):
            #print j
            #print nulisti[j].parent()
            nulisti[j] = nulisti[j].add_bigoh(cutoff)
            #print "II'm here"
        nulisti += [Rbase(0).add_bigoh(cutoff)] * (deg + 1 - len(nulisti))
        nu[i] = R(nulisti, deg)
    return nu

def padic_val_ps_vector(nu):
    #p = nu.parent().base_ring().base_ring().prime()
    ordp = Infinity
    for nui in nu:
        for coeff in nui:
            ordp = min(ordp, coeff.valuation())
    return ordp
